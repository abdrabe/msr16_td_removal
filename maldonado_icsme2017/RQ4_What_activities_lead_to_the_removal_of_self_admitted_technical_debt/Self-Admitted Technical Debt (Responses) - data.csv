Timestamp;Would you like to participate in the survey?;1. How would you best describe yourself?;2. How would you best describe your role in the project?;3. How many years of software development experience do you have?;4. How often do you encounter comments indicating delayed or intended work activities such as TODO, FIXME, hack, workaround, etc?;5. How often do you add comments related to delayed or intended work activities such as TODO, FIXME, hack, workaround, etc?;6. How often do you address comments related to delayed or intended work activities such as TODO, FIXME, hack, workaround, etc?;7. Based on your experience, why do developers add comments related to delayed or intended work?;8. Based on your experience, why do developers address such delayed or intended work comments?1/20/2017 1:22:05;Yes;A contributor to the Apache-Ant project;Dev working mostly on bug fixing;More than 5 Years;Very often (e.g., everyday);Sometimes (e.g., once a month);Often (e.g., once a week);In a business environment, pragmatic solutions to problems will almost always take precedence over a 'perfect' solution.  Any developer who has passion or pride in their work will know when something is rushed to meet an arbitrary deadline or could be improved and at that point I would add a TODO so that IDEs/grep etc can show that this section of code could use another pass when there is less pressure.;I address these comments etc whenever I can, but my preference is to work on small fixes in larger codebases, instead of greenfielding an entirely new solution, I enjoy working in brown field codebases trying to optimize and refactor code that other devs have given up on.  I've rarely seen Feature-driven devs address TODOs as the feature is invariably present so they are not interested - people interesting in the long-term maintenance of code and on non-functional characteristics of projects tend to address TODO/FIXME with more urgency.1/19/2017 16:31:18;Yes;A contributor to the Apache-Camel project;Dev working mostly on new features;More than 5 Years;Very often (e.g., everyday);Very often (e.g., everyday);Often (e.g., once a week);Code typically outlives wikis, bug/feature trackers, email lists, and chat systems.;Usually they're addressed only if they're at least tangentially related to a developer's current task.  Unless it's dangerous technical debt...1/24/2017 15:30:17;Yes;A core developer of the Apache-Ant project;dormant, do not work on this project any more;;;;;;1/19/2017 16:11:18;Yes;A core developer of the Apache-Camel project;Dev working mostly on new features;Between 3 and 5 Years;Sometimes (e.g., once a month);Never;Rarely (e.g., once a year);For laziness;Because commenta are noticed more1/28/2017 6:05:07;Yes;A core developer of the Tomcat project;Dev working mostly on bug fixing;More than 5 Years;Often (e.g., once a week);Rarely ( e.g., once a year);Rarely (e.g., once a year);They are not sure about the effects of their code and want feedback, or they know the code is not feature complete, but will work for the moment.;A bug was found in that piece of code, or they are working on similar pieces of code and looking actively for such occurrences.1/19/2017 17:20:03;Yes;A core developer of the Hadoop project;Dev working mostly on new features;More than 5 Years;Sometimes (e.g., once a month);Rarely ( e.g., once a year);Rarely (e.g., once a year);To capture the generality of an idea, which is not yet worth to fully implement, or to partition a possibly very large amount of work (which would be hard to review and commit) by punting on some of it. ;When the code evolves and the shortcuts become ineffective.1/19/2017 17:36:57;Yes;A core developer of the Hadoop project;Code reviewer;More than 5 Years;Sometimes (e.g., once a month);Rarely ( e.g., once a year);Rarely (e.g., once a year);It is usually a marker in the source of a missing feature or known bug.  It helps future maintainers know of potential pitfalls or improvements.  Developers create these when they know the source they are creating is lacking in some way and want to document it for others (or even sometimes their future selves).;These comments are often addressed because of a need to do so, usually as part of fixing a user-reported issue or adding a requested feature.  Addressing the comment allows the developer to accomplish the higher-level task, be that a bug fix or feature addition.1/20/2017 0:38:45;Yes;I did contribute once or twice to ANT, no regular;ant user (a long time ago);More than 5 Years;Sometimes (e.g., once a month);Sometimes (e.g., once a month);Rarely (e.g., once a year);While concentrating on the task at hand, a reminder to come back to this code.;They indicate areas for improvement.1/22/2017 11:07:15;Yes;A core developer of the Hadoop project;Dev working mostly on new features;More than 5 Years;Sometimes (e.g., once a month);Sometimes (e.g., once a month);Rarely (e.g., once a year);Time issues, unsure of future direction;Need to fix bug1/19/2017 17:29:18;Yes;A former contributor to the Apache-Jmeter project (I am no longer active there);Dev working mostly on bug fixing;More than 5 Years;Very often (e.g., everyday);Sometimes (e.g., once a month);Rarely (e.g., once a year);Because they want to deliver, and when balancing an early delivery against technical debt, they sometimes choose the earlier. Those comments serve as a mark that such as choice was done and also as a hint for future developers that there will be related bugs or unhandled use cases.;Because a bug has been reported which requires addressing them to be fixed, or because the unhandled use cases have become more important for the community/stakeholders than they were [believed they were] when they were left unaddressed.1/26/2017 9:13:28;Yes;A contributor to the Apache-Ant project;Casual contributor;More than 5 Years;Often (e.g., once a week);Often (e.g., once a week);Sometimes (e.g., once a month);In order to move on and not interrupt general development flow when realizing something might not be perfect (yet).;Specifically searching for those comments when there's nothing more important to work on, or when tracking down bugs that might be related to the comment.1/19/2017 16:41:16;Yes;A contributor to the Gerrit project;Dev working mostly on new features;Between 1 and 3 Years;Sometimes (e.g., once a month);Rarely ( e.g., once a year);Sometimes (e.g., once a month);time constraints, other features not ready, higher priorities than fixing edge cases.;features became ready that this comments waited for.1/20/2017 9:58:40;Yes;A contributor to the Apache-Jmeter project;Dev working mostly on bug fixing;More than 5 Years;Often (e.g., once a week);Sometimes (e.g., once a month);Sometimes (e.g., once a month);Missing informationcurrentlycurrently to und erstand how to solve it. Not enough time to properly implement;See an obvious solution to the problem. Do not like to have TODOs remaining in code1/21/2017 9:56:14;Yes;A contributor to the Apache-Ant project;Dev working mostly on bug fixing;More than 5 Years;Sometimes (e.g., once a month);Sometimes (e.g., once a month);Sometimes (e.g., once a month);Some changes are too risky to make when fixing minor bugs.  A low risk workaround or partial fix is made on the stable branch as part of a minor update release and a more comprehensive fix is made on the head or development branch as part of a major update release.;Partial fixes and workarounds make an incremental imrovement to the code but the long-term goal is to elliminate the root cause of the problem.  Going back to provide a full fix for the problem makes the code easier to maintain, more predictable and less buggy.