commit 0b2c4be4428efd8b3e82b3d2711ccd9a78023be6
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue May 14 09:24:04 2013 -0500

    Cache booleans with indy, so they can fold away.

commit ba4df82441cf7f0fd5cbe11467922d8d7199aba2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue May 14 10:55:15 2013 -0500

    Fix #733 by doing a lightweight return from lightweight rescue.

commit bb98e4b8decffc0361b70a6c99c1ade5fed0abcb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Mar 28 10:02:33 2013 +0000

    Move RuntimeHelpers to org.jruby.runtime.Helpers.

commit 5495ff31984997a19c718c1858c91f9def1ec23e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Mar 16 15:53:18 2013 -0500

    Fix MH-invoker super by passing bind name through to factory.

commit 3eaa50db7b4e03d0dd46a30d74f80960e14f70c3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 8 00:59:50 2013 -0600

    Compiler must clear $! for early return from method-level rescue.
    
    A method-level rescue was optimized in recent months to not
    completely deoptimize and create a separate child method with full
    scoping. However, in the process of optimizing that, we returned
    to using normal flow control rather than exception-based flow
    control. This caused a literal return inside such a rescue to not
    clear $! as it should, since it immediately escaped the method
    rather than passing through finally logic.
    
    I modified rescue logic to always use exception-based return (and
    friends) in order to ensure that the finally logic triggered. This
    is not the ideal way to fix the bug, but it's good enough for now.

commit 2fb8d6dd5cd21ae13c5cbc340e955e9d11efcab2
Merge: 6a90bad 714a009
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 15 16:22:39 2012 -0600

    Merge branch 'fastglobals'
    
    Conflicts:
    	src/org/jruby/runtime/invokedynamic/InvokeDynamicSupport.java

commit 6a90bad45fccbf0ed8bdc30cb32a8efb42d41559
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 15 16:17:19 2012 -0600

    Make ThreadContext field loads indy-based, so they're constant.

commit 1261e5af14c1e56e04caf8bfe2adc8cacf2b9bb4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Dec 14 11:46:51 2012 -0600

    Use indy + switchpoint for polling thread events.

commit 5b2d787a87c98e6f5ce531d9fe2397fa5afb145a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Dec 14 02:36:54 2012 -0600

    Make "if CONST" free under indy.

commit ef5c548eb9f25f279b3f29ffc75e8b42f17bd436
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Dec 14 02:26:47 2012 -0600

    Make "if $global" free under indy.

commit 8d344053242600198a2d0a8d2d3073078336fe2e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Dec 14 02:02:19 2012 -0600

    Preliminary version of fast indy-based global var access.

commit ad5d07291d09f57849f873d405607fbb6fed1544
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 17:15:55 2012 -0600

    Indy optimization for constant lookup with cached scopes.

commit 1bfa8ef7659726151a930427c6e582424b18b19c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 17:01:30 2012 -0600

    Fix defined?(@@cvar) to use cached scope and disably dummy scope.
    
    With this commit, scopes that have classes, methods, constants,
    and cvars no longer have a requirement that a dummy scope be
    pushed. The scope is loaded from the same cache as other values,
    and as a result those methods have no implicit cost over the same
    code with no scope access.

commit d7ed0f8b7168ced101773ac494fb0453854f649e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 16:52:04 2012 -0600

    Tweak cvar logic in compiler to use cached scope.

commit 3d12d1c5eddc16329633feb8fa569223b34768b8
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 16:38:33 2012 -0600

    Final modifications to get scopes loading from cache.
    
    * For initial Script execution via __file__, must setRootScope
    * Script.load impl will setRootScope
    * All other method forms will receive scope index from parent compiler

commit f53f046a4646ae4ea8e1995a7eeb360330db8214
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 15:12:28 2012 -0600

    Cache StaticScope for class bodies outside the body execution.
    
    This helps decouple class/module creation from StaticScope init,
    allowing us to move closer to getting the current scope from cache
    in all cases.

commit 4cf08e3211097bb2ee3de97f0521762dace11bdf
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 12:15:56 2012 -0600

    Decouple compiler and class/module const assignment from TC.
    
    * Compiled setConstant calls work against StaticScope
    * Getting the namespace in which to define class/module uses StaticScope

commit cc1286514c7d165cdc4063e4cac1a8427863d9c3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Nov 2 16:55:01 2012 -0600

    Set up small literal hashes and hash args using a single bucket.
    
    For many small literal hashes, especially those used for calling
    methods with hash args, allocating the default layout for a Ruby
    Hash is terribly wasteful. The default setup uses a bucket count
    of 11, which for a hash smaller than 11 wastes that many entries.
    Since many literal hashes and hash args are as small as one or two
    or three elements, I have modified literal hash creation to force
    a single bucket with no rehashing. This reduces memory allocation
    of a simple single hash-arg call from 6.4MB to 2.4MB and improves
    speed about 10-15%. There are additional improvements possible,
    such as not rechecking the bucket count for hashing the incoming
    keys.

commit 47a88ba5a70aa90d1c139fdaa2394df36806552d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 30 21:25:24 2012 -0500

    Fix #366
    
    DNode logic was always calling the 1.9 version of String#append
    even in 1.8 mode. For badly-encoded or mixed-encoding text, this
    could cause a failure due to 1.9's more-strict encoding checks. I
    modified the logic to call the version-specific append function
    and added the same type-specific logic in that append.

commit efe3f08ee65a2e85c239ecdece74b9a54002bb1b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 17 22:02:38 2012 -0500

    Simplify constant and ivar defined? logic in the compiler.

commit 6ceb3dac6280819d4e713cba4c80aaf24c5c9c14
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 17 21:23:03 2012 -0500

    Fix defined?(@foo) when @foo has been assigned nil.

commit 9cd88cd26961fa604c0d69076f4aa0b7ebd0c26a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 17 19:27:28 2012 -0500

    Eliminate transient strings from compiled DSymbol, DXStr logic.
    
    Same general pattern as for DStr. See #301.

commit f7726833a3f025f19a4b02c5aee1ce070b8acd1b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 17 18:11:22 2012 -0500

    Eliminate most transient strings in compiled D*Nodes.
    
    * Static portions are cached bytelist, direct append.
    * EvStr with Fixnum/Float/Symbol body append object directly.
    * Remaining cases coerce to String as before.

commit b03d0bc89aefca13deaff7a568e5d9118a9ca2a8
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 17 01:42:22 2012 -0700

    Performance improvements for defined? logic.
    
    * Return a cached, frozen string rather than recreating each time.
    * Cache variable accessors for ivar defined? checks.

commit 7c3f6426eb26e560f21b2f1905923fa624c4408c
Author: Subramanya Sastry <sss.lists@gmail.com>
Date:   Thu Jun 21 23:43:39 2012 -0500

    HEADS UP!  Removed all trace of setWithinDefined and isWithinDefined.
    
    * Tested on rubyspecs in 1.8 and 1.9 mode -- AST, JIT, IR.  No
      change in failures after this change.
    
    * Removed this from AST interpreter, JIT, IR
    
    * setWithinDefined was set by all of these before entering defined?
      checks and cleared on exit.  isWithinDefined was only used by
      RaiseException to decide whether to set $! or not -- effectively
      $! was not being set for exceptions raised by code executing
      by the call tree rooted in the defined? checks.  However, this
      resulted in buggy behavior because this call tree could do a ton
      of work (including loading files, requires, setting up classes,
      etc.) any of which can raise exceptions and might have to be
      handled, which require access to $!.  The workaround in IR and
      AST interpreters was to set "$!" whenever an exception was
      received (effectively bypassing the condition that RaiseException
      was guarding).  But, since I removed both these hacky checks as
      part of a previous commit (20632af6e1fa511fd9b762beda2a60d39bf3c859),
      we had code failures in Rails (bug JRUBY-6705) because of files
      not getting loaded properly. So, given that isWithinDefined is only
      used by RaiseException, which was anyway getting bypassed, there is
      no reason to keep that check around.  Once I removed that check,
      since there was no other use of isWithinDefined in the codebase,
      I also removed setWithinDefined, which led to a bunch of dead code
      which I purged.
    
    * NOTE: JIT is probably yet to remove the $! hack that I removed in
      the other commit.  It would be best to remove that hack as well
      so we know for sure that these two commits are working together
      well without bugs.

commit 1c1ccb591192b115383ff0d8d2d349158e02fefe
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu May 10 18:40:44 2012 -0500

    Fix compilation failures in spec runs.
    
    The logic to get the class or module against which to run the body
    was being emitted into the same Java method as the body. If it
    accessed local variables or other context from the surrounding
    body, it would break. This caused compilation failures on some
    newer RubySpecs.
    
    I moved the preparation of the class/module object outside the
    compiled body, so it did not error when trying to access state
    from the surrounding body.

commit e54cd59c00c17dd3d1d1b85b83b1dbdf90993cfe
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Apr 12 15:32:13 2012 -0500

    Missing compiler logic for native Java exception propagation.
    
    * If rescuing "NativeException" and it's a Java exception, lazily wrap it
    * FIXME: Currently using the static rescue constant name, rather than runtime value

commit b062190c30cba6803bc85f3025c597ee47642c01
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Apr 12 11:46:49 2012 -0500

    Add file+line into invokedynamic logging output.

commit 03ba524de4139a29ebad75005293814cceeffedd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 19 21:33:30 2012 -0600

    Fix multiple places that called 1.8 instead of 1.9 regexp methods.
    
    Many places in the codebase unconditionally called the 1.8 versions
    of several RubyRegexp methods that have 1.9-specific behavior. This
    led to hangs like JRUBY-5808, and very likely is the source of
    other encoding-related bugs.
    
    I audited only RubyRegexp methods that have 1.9-specific versions
    and fixed all incorrect calls. Tests and specs pass in interpreted
    and compiled modes. A similar audit for other core classes is most
    definitely warranted.

commit 60440c1cc63172a5e00b31da8ff6d7c16f478299
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Dec 5 19:38:59 2011 -0600

    Repair damage from e0ee1ec2.
    
    I reversed the evaluation order of "colon2" assignment to ensure the
    value evaluates first, but failed to remove "swap" operations
    elsewhere that expected the RuntimeHelpers.setConstantInModule
    method to take the LHS, RHS ordering. Fixed those locations and
    added a test.
    
    Conflicts:
    
    	test/testCompiler.rb

commit c689af6b2695af41c51219545388ca4046eabde7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Dec 4 12:06:28 2011 -0600

    Add direct boolean paths for Fixnum RHS boolean operations.

commit a5958eb161142788e0abb4b01b6d21fd0588b8a8
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Nov 29 21:53:29 2011 -0600

    Reduce case/when fast-path optimization.
    
    The old optimization did not consider hash collisions on strings and
    symbols, and would not work if we randomize string hashcodes. Rather
    than try to hack around those issues, I'm just reducing the string
    and symbol fast paths to the single-character form only. The ===
    call is not free, but we can revisit the hashcode-based
    optimization at a later date and do it right then.

commit 4a8330815c3e6fc5407b424312fd7d65518203fc
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Oct 26 10:10:14 2011 -0500

    Cleanup and centralize all property-based configuration settings.
    
    Properties for JRuby are now all in one location, combined with information
    on valid options, defaults, and description. All properties going forward
    should follow the same format, to ensure they're documented in the jruby
    --properties output.
    
    I have added to this new form all properties I thought were interesting to
    expose. There are a few still hidden that may be deleted soon.
    
    I also removed some long-defunct properties and removed unused code that related
    to them.

commit fa83920b38efe7b93fe3b1be4c6b1a61813031c1
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Oct 26 05:47:28 2011 -0500

    Use reversible name mangling for JVM method and class names, so backtraces look right.

commit b0b8ce4079ee1191a6cf7c420f7c8bac92175586
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Sep 15 18:08:20 2011 -0500

    Proper fix for DRegexp and mixed encodings in 1.9 mode.

commit a9c26f04e463d42b370beb9fb89846af663d1a7e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 5 12:00:58 2011 -0500

    Minor perf improvement and bytecode reduction for interpolated strings.

commit 47f3bc3a8720343c9f1ed045937b70a40c3ca6ea
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Aug 23 11:53:17 2011 -0500

    Fix compiler for new DNode logic

commit 75e7524f6138f7087f27ce6539124435c97ce1e4
Author: Nick Sieger <nick@nicksieger.com>
Date:   Tue Aug 23 10:00:25 2011 -0500

    Compiler-side fix for code-range initialization problem in 68fc1525

commit 85c2817d5364b765692b863d36fa3809f023405d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Aug 20 15:11:20 2011 -0500

    Modify method definition to cache static scope, in prep for cheaper constant-using methods.

commit 70b3b99b1fb99d88da10d6d8e5e60f255f732fea
Author: Nick Sieger <nick@nicksieger.com>
Date:   Mon Aug 1 13:05:09 2011 -0500

    JRUBY-5622: Propagate encodings through to DStrs and DRegexps
    
    Fixes both interpreter and compiler

commit 53365d3f0c81a5b20ef1fc7fa466af4f65ba1e39
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jun 27 23:15:15 2011 -0500

    Fix JRUBY-5871: java.lang.NegativeArraySizeException from RubyEnumerator (after JITed)
    
    The problem here was that the compiler did not properly route "special args" (like foo *args) to the specific-arity path they should go to. This affected any such calls as well as super and zsuper calls, though in this case it was not the latter two cases. The fix is to add a new call path for "varargs" that checks arg arity and reroutes along the right path. I also fixed Enumerator#initialize's varargs path to ensure at least 3 args, which would have prevented a Java error in the first place (but replaced it with an ArgumentError.

commit edc7c5baca265b4a4d0bf1ff54a47b1b8f3576cd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jun 22 00:16:09 2011 -0500

    Fix JRUBY-5840: Rails won't start with -X+C
    
    * Twas using "joni" decoding for the "embedded" encoding used by compiler.

commit 77cba98fb4fb7d5e5d52ad8a1491ee11315b0ed3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jun 17 00:58:53 2011 -0500

    Improve compiled literal array construction.
    
    * For non-expression, all-literal arrays...do nothing.
    * For arrays larger than 10 elements, batch array population in groups of ten to reduce overall bytecode size.

commit b0de876f1029e630d8e81c5f6abd376bd7720795
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 16 13:17:45 2011 -0500

    Reinstate 1.9 logic in compiler for splatting nil.

commit 3be905f38b26668ad53fc197784629aa338fefee
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 16 10:58:28 2011 -0500

    Improve performance of "argscat" call form (as in foo(1, *a))

commit 9d263047d5daa68f6c8bd886fec4863e05af6e4f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 16 05:57:07 2011 -0500

    Improve perf of compiled simple argument splats of non-arrays.

commit 2cacc09e74b5d4e1859ee3225e58adfbfdb7af5d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 16 05:56:11 2011 -0500

    Remove unused method.

commit c2ab051060e47340eb61c44036bc4512ef4c07ed
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu May 26 21:18:23 2011 -0500

    Centralize construction of invokedynamic-related niblets and start adding properties for individual invokedynamic features.

commit 5f0d0affc48bfc1b0e4c308eebb6e7693fab04a4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu May 19 14:32:24 2011 -0500

    Use invokedynamic for single-arity 'when' invocation of ===.

commit 1d06ff5a2fe82955a0e80928ddafb7f9985a7d72
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon May 16 00:26:48 2011 -0500

    Improve perf of defined? by avoiding the constant encoding of Java String + ByteList construction + Ruby String.

commit 56b5c02366235e7e95edb16ff978b8d25f0a3cdd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 20 09:34:44 2011 -0500

    Cache a Float instance for literals, like other impls do.

commit ba1ce78cfeded2b8d078f9718ad2da236e5f4328
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Feb 23 13:57:54 2011 -0600

    Cleanup useless properties, enable fast math operators, add a couple more fast operator call sites.

commit 92265ccc3813ba92e0383b2150553afc9b13cb46
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 7 00:40:02 2011 -0600

    [1.9] Get remaining defined? specs passing in compiler.

commit 02cb497e8f8696c93925be754acfe89d933eafa6
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jan 16 23:04:05 2011 -0600

    Disallow aliasing methods inside an instance of Fixnum or Symbol.

commit 295e15e751aa64dd8ae6dfcc45c8c46bd5034e2e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 17:10:04 2011 -0600

    [1.9] Fix remaining language/method_spec failures in compiler.

commit 193c722ab9f3477f31398314de8446f1f8a967a2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 16:19:35 2011 -0600

    [1.9] Fix remaining language/method_spec failures in interpreter.

commit 2418c0c8028b78a272ba654e3b8860407504ae78
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 03:19:49 2011 -0600

    [1.9] Wire up Method#parameters for AOT compiled methods.

commit 92f10a22aa94e4a7ca02d6aaf7b8054ccff18f11
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 01:54:05 2011 -0600

    [1.9] Implement Proc#parameter for compile blocks.

commit 9af2369886892c745309ef643b8ba97f7efe6467
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 7 17:14:05 2011 -0600

    Fixes for 1.9 encoding logic in compiled code.
    
    * Implement __ENCODING__
    * Cache encodings in constructor, avoiding re-lookup
    * Pass through encoding properly for regexp
    * Pull in fixed ByteList that actually sets encoding field in constructors

commit 575e4edcf8d20fcbb129bd0e82897bb6df0a7be4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 7 14:04:13 2011 -0600

    [1.9] Fix SValue in compiler. Plenty of RubySpecs for it already.

commit 6fb76a48b600541a2be2b1ab75ad4313815b0bd9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 7 13:14:39 2011 -0600

    [1.9] Fix ArgsPush in compiler.
    
    * "first" target array needs to dup().

commit 0277975f68020463a6311f7310b33768361fbce4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 7 06:19:09 2011 -0600

    [1.9] Implement "match with named captures" in compiler.

commit 32cca6240b3096c6228ac2cf1490bd9f065dbc8d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 5 20:31:38 2011 -0600

    Add codeRange to compiled literal strings. Encoding will come next.

commit 7c75d2a007af8fdbe71749f2673f6a809ba0dcc0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 5 13:48:28 2011 -0600

    Fix and add test case for 1.9 masgn logic (e.g. "post" args).

commit 042f381d860fdd0261222d924c9b37c246634918
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 4 18:14:11 2011 -0600

    Preserve original bytes in literal strings and regexp, in preparation for non-Unicode encodings.

commit fd0fa789b21b30f294e8286b72b75fe3b688c27a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 1 12:07:42 2010 -0600

    Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
    
    This is a squashed merge encompassing the following commits from "backtrace":
    
    commit eb0e24242050199ac1cc4cf6e48d93025f0186f4
    Merge: 32137de ea48d8d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 12:03:28 2010 -0600
    
        Merge remote branch 'origin/master' into backtrace
    
    commit 32137decc9351dd7b6a19c49c7955808f535bb9c
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 09:41:29 2010 -0600
    
        Fix remaining failures for test-all.
    
        * Disable CheckClassAdapter temporarily, since it disallows what should be valid JVM identifiers.
        * Use the presence of $RUBY$ in method name as an additional indicator that we're processing a compiled Ruby body during backtrace gathering.
        * Move some largely-static properties out of "init" target in build.xml, so they're available whether init is triggered or not (e.g. run.jvm.model).
    
    commit ee2a624201d5e9cd408d6ae793160aeb99b50b3d
    Merge: cd50ae5 88ad204
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 08:01:22 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit cd50ae5f06b95a2fffab6bc1f3a7419f478d0a52
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 19:15:07 2010 -0600
    
        Get remaining spec failure with -X+C passing.
    
        * Embed the actual Ruby method name into the Java method for block bodies, rather than __block__.
    
    commit 52bbfffcae1aed62bf4afcb692bed9725e4e1564
    Merge: 4ed7235 1aace5e
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 01:37:15 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit 4ed723579101fffd8bfa73b30dc6e4e8991866f2
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 01:31:44 2010 -0600
    
        Precompiled (AOT) specs *nearly* green.
    
        * Mark __method__ as reading frame "name"
        * Fix AOT-based stack trace mining logic
    
    commit 64e20aa939b5b9c6e41e0e9fe09039a0bb92794a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Nov 29 16:50:55 2010 -0600
    
        Jitted specs running green.
    
        * eval needs to set method name into the binding, so it's there for "__method__" in the eval'ed code.
    
    commit fd442c0a815bcab9eb6c9aa1b71e1f8a260ee03b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Nov 29 16:06:53 2010 -0600
    
        Interpreted specs green on backtrace.
    
        * Tagged some __method__ specs for which backtrace behaves like 1.9, which Matz apparently likes but was afraid to backport. Odd cases anyway.
        * Fixed method name for the block used to define_method.
    
    commit cedb27e430b422c1158f66b4dcc7769922433506
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 24 18:35:22 2010 -0600
    
        Reinstate deprecated java_to_ruby and ruby_to_java I removed, since it's still needed by some external libs.
    
    commit b48b17910de662b4e2d20ee8f4b5cc734eefc1ed
    Merge: f39007e 2ae4995
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 24 13:40:58 2010 -0600
    
        Merge remote branch 'origin/master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/RubySymbol.java
        	src/org/jruby/runtime/CompiledBlock19.java
        	src/org/jruby/runtime/Interpreted19Block.java
        	src/org/jruby/runtime/InterpretedBlock.java
        	src/org/jruby/runtime/MethodBlock.java
    
    commit f39007eca676c1e6ec9f891ac63b7c5d907b0d1b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Nov 18 14:01:29 2010 -0600
    
        Start normalizing the method/class names generated into Java by JIT and AOT compiler, to wrap up the remaining spec failures.
    
    commit 76e42c4b4522dc87c066d20051d02d1e4005b860
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 20:40:33 2010 -0600
    
        Disable dynopt for now, to allow better stabilization on the main feature of this branch: frame elimination.
    
    commit d03099690df2e16d423e8b6a8969e0264983237f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 15:00:14 2010 -0600
    
        Encapsulate "coreMethods" hash in Ruby and add "bound method" logic to default (non-generated) class populator. `ant test-all` runs green now.
    
    commit ed7458f72bce55b11e5231f8e7b9d590c09ca53d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 10:46:43 2010 -0600
    
        Fix incorrect use of fastSetInstanceVariable instead of fastSetInternalVariable in FFI.
    
    commit f09626121b6a8bea6ab39a3c8ed3ccd69f56b505
    Merge: f780b97 e8ca689
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 10:15:16 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit f780b972b1f3e18f4c2608d9536e797a0845cd1a
    Merge: 25ab5d3 6967ea7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 09:04:42 2010 -0600
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/runtime/ThreadContext.java
    
    commit 25ab5d3d3f8c1fbf0fa334427b1485d322e83f86
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Nov 7 00:42:54 2010 -0500
    
        Don't do dynopt against calls that receive blocks; non-local flow is not properly handled yet.
    
    commit a4ad27056dcc3acf6bae0b0af7e618966d08a6dd
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Nov 6 15:22:40 2010 -0500
    
        Tag caller specs that do not pass with new backtrace logic (peculiar eval caller behaviors).
    
    commit eed8902084cfa06d4648935c1f70da57bf0c7a9c
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Nov 6 00:32:59 2010 -0500
    
        More fixes to get specs and tests green on backtrace branch:
    
        * Hash#index was not being bound properly from RubyHash#index19
        * Range#min and Range#max need super, and therefore need frame = true
        * tc_owned is a bad test and fails on system like OS X where (for some reason) / may be owned by user
        * test_trace_func had been hacked for a bad class result (Integer, instead of Fixnum)...fixed that
    
    commit 9d9f94c30de76fa25e738e70e84ea09163eca5cb
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Nov 5 20:03:22 2010 -0500
    
        Fix Kernel#caller to replace .java lines with Ruby lines. Brings specs mostly to passing.
    
    commit de433c771830e95c54f8196453208f2b312191aa
    Merge: 3ffe1cf e25c58f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Nov 5 17:40:02 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyIO.java
        	src/org/jruby/compiler/impl/StackBasedVariableCompiler.java
        	src/org/jruby/evaluator/ASTInterpreter.java
        	src/org/jruby/java/proxies/JavaProxy.java
    
    commit 3ffe1cfba86f52ee96d89f3a1c352597f22f76b7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 27 01:42:06 2010 -0200
    
        Fix compile error I accidentally merged.
    
    commit b081253fb3cdf5141f7f0cf76d3f8546837d9f42
    Merge: fc3028d ad68e22
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 16:30:25 2010 -0200
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/internal/runtime/methods/DefaultMethod.java
        	src/org/jruby/runtime/ThreadContext.java
    
    commit fc3028d9da2750c9d1c394600ab8ee712388724d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 14:39:29 2010 -0200
    
        Add better description for class bodies in backtrace
    
    commit d796555494c2237116c7477c932fd96cd30d2e20
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 11:36:29 2010 -0200
    
        Clean up and add color to Rubinius backtraces.
    
    commit 012f5357ce649bd5a996211fe231f26097bf4f5b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 16:23:04 2010 -0500
    
        Fix classloader check to allow for compiled method handles, which use a no-arg constructor.
    
    commit 473d48aac6a5523304188d1d433e4c12df989b89
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 16:10:32 2010 -0500
    
        Improve Proc-binding-based eval position info by propagating block's position into the binding and through to the backtrace frame.
    
    commit bcfd16b519b145c9ee055db1592dfaced05b71a0
    Merge: 4902faa 5b49583
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 11:07:15 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyTime.java
        	src/org/jruby/runtime/ThreadContext.java
        	test/org/jruby/test/TestRubyException.java
    
    commit 4902faaf1678d5aecdef8b0b66f8ec78062aeec5
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Oct 21 09:28:45 2010 -0500
    
        Fix badly-merged RubyProc.to_s19, missing opening brace.
    
    commit 69177d7098f9dc4ff9096d08eee25c0d8bb4f971
    Merge: 801e764 f895837
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 20 21:50:53 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 801e7641b8838a8ae8931a9c6dcc5cf050096c4a
    Merge: 0c60a89 dda4644
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 19 23:16:41 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyDigest.java
        	src/org/jruby/RubyProc.java
    
    commit 0c60a89aa746f286588b218681e9ad25b11318c4
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 19 23:06:15 2010 -0500
    
        Only compile direct recursive calls when we haven't branched to another method body (e.g. for rescues) and we're not compiling a closure or class body.
    
    commit 18333fe82c808e8ed49eef898f19c86fa2d764b2
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 17:04:13 2010 -0500
    
        Get 1.8 specs running green except for a handful of Kernel#caller specs (which don't expect to see .java files in the trace...not sure how to deal with that).
    
        * Fix another literal-block-calling path that wasn't using callIter
    
    commit 366740120ee76d8df3f977edc1727b60b2d4ad63
    Merge: b64390b 6b243a3
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 10:35:14 2010 -0500
    
        Merge remote branch 'origin/master' into backtrace
    
    commit b64390b8cf0d2cb13e06d352969a093b5e86818d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 10:33:39 2010 -0500
    
        Remaining fixes to get precompiled mode passing all our tests. Still some spec failures.
    
        * Bump up permgen max for test runs
        * Fix stack-based scope initialization to not leave an unused nil on stack
        * Ensure compiled method handles properly wrap pre/post logic for dummy and backtrace frames.
    
    commit 96bd3cbde91fc505b37ee13cbea6ffa3e8690c58
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Oct 11 18:36:34 2010 -0500
    
        First fixes for backtrace branch in precompiled mode:
    
        * Add test-precompiled build target for running just precompiled
        * Eliminate extraneous toplevel scope being pushed for precompiled loads (because that logic is all in the generated "load" method now.
        * Add a new scope descriptor decoding path that properly sets up a toplevel scope
    
    commit 0ebbd6ac46c9ac04558f5200f980f26f798b9413
    Merge: fc387be ac455fc
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 6 21:53:18 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyIO.java
    
    commit fc387befff57ada6c116b646a3dfb767cc926ee5
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 28 15:57:58 2010 -0500
    
        Renumber arguments for consistency.
    
    commit bbc91d3c4039bf6c26ceffd4899dcaaeaa3d46d0
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 28 15:40:38 2010 -0500
    
        Fixes to get specs a bit closer to running green.
    
        * Move pre/post logic for Script.load into generated code, so it's the same everywhere.
        * Make pre/post-load push a frame, so top-level of a script is always framed
        * Remove break handling from non-literal block call paths in CachingCallSite
        * Make sure all literal block calls are using CallSite.callIter, which handles break
        * Fix a bad test in testCompiler that needed visibility tweaks and framing
        * Add complete doco for CallSite
        * Fix Kernel#caller to trim from top of stack instead of bottom
    
    commit 4e814a24d5b2ef1b6567a3076a463ff9d08e2a0d
    Merge: 91dc13a 3dbcef3
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Sep 27 17:43:30 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 91dc13a2f0b74bc1054d83378782416465ecc1b8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Sep 27 01:02:48 2010 -0500
    
        Fixes to get test-compiled (but not precompiled) passing 100%.
    
        * Fix eqlInternal's RubyNumeric branch check if classes are equal
        * Provide file and line from all BlockBodies, so Proc#to_s can always use it
        * Fix rejiggered Struct#each and Struct#each_pair to call the appropriate internal version
        * Fix ruby_test's IO.new suite to not use STDOUT directly, risking that it get closed
    
    commit dc4af45352607ebb8a95d70befdcdb15c1111c58
    Merge: ec8bb7f 90275be
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 21 09:52:10 2010 -0700
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/RubyDir.java
        	src/org/jruby/RubyKernel.java
        	src/org/jruby/compiler/ASTInspector.java
        	src/org/jruby/javasupport/util/RuntimeHelpers.java
    
    commit ec8bb7fc31d4acd4ebcb040f088e19fb427448e8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 19 16:21:38 2010 -0700
    
        Remove frame = true from all core class methods, to reduce their call costs. A few remain for invokeSuper and methods that may still need frames.
    
    commit ec276b6ca0c6009702839b12d97664b9e52b1023
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 16 14:10:43 2010 -0500
    
        Eliminate RubyTuple use that snuck in.
    
    commit f80254100cfc17ac6eb558e465fc1fb9122c3ee4
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 14 10:07:53 2010 -0500
    
        Special case a few immutable core types in equalInternal/eqlInternal.
    
    commit eb66c45145e4fd1f8c28e9a8c544114f034116e8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 18:26:13 2010 -0300
    
        Performance changes for backtrace logic:
    
        * Back off using Java stack trace for Proc's to_s file+line, since it's prohibitively expensive
        * Move the Backtrace stack to being a fixed-size array of objects updated, rather than created, when a push happens
    
    commit 6f0ade5ab28946b8800431d3454d2e57fc0dbe19
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 11:36:07 2010 -0300
    
        Add generation guard around trivially-inlined logic.
    
    commit c4d8705217174580d35757dc85c5c646e980b57f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 06:18:38 2010 -0300
    
        Full speed ahead with a caching mechanism for calls from core classes. Only works for core class methods right now, but opens the door to expanding that.
    
    commit 5874abc01104f6c0f435f8ac4643ed0f77cf7cff
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 03:43:37 2010 -0300
    
        Localize some fields used in Array#include? to speed up the loop.
    
    commit 346245cd5e154574d14736cf4b9e0b4b98260d14
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 15:02:41 2010 -0300
    
        Allow passing a number of iterations to bench_quicksort.rb.
    
    commit b4687022a1f00d0b63838b1c9daf00753fcfa93e
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 11:55:15 2010 -0300
    
        Fixes to get run-junit-compiled 100% passing on backtrace branch.
    
        * Fixed a couple tests that are too sensitive to core method line numbers or expected only .rb elements in the trace
        * Added a mechanism for procs to retrieve the most recent Ruby frame, for to_s purposes
        * Added comments for hybrid backtrace logic
    
    commit 15cd9b16cb2750d0e40ba478d07fe5bf265dc620
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 08:07:57 2010 -0300
    
        Add better logging to AnnotationBinder (for showing framed/scoped core methods), ASTInspector (for showing methods detected as framed/scoped and for reporting deopt flags as they are set), and JITCompiler (for dumping jitted methods' full classes and inspector results). New property jruby.jit.dumping=(true|FALSE).
    
    commit c4e6176498590d791868055025c2e72ded1ccf13
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Sep 10 02:10:20 2010 -0400
    
        Improve dumping of generated bytecode by including class and method name when possible.
    
    commit 07fc4215f6873f449f89d4f5da7a7e2e8963bc70
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 9 23:39:20 2010 -0400
    
        Make attr accessor's var accessor field volatile, to guarantee visibility across threads.
    
    commit e3a7cf5cd4d8ccd08407955779bdd94feb5e4ac8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 13:26:48 2010 -0500
    
        Add missing "in" to caller backtrace lines.
    
    commit 7140c339f386959853f747d86cb2ea9a8afa6f2a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 12:10:50 2010 -0500
    
        Fixes to get tracing tests running in interpreted mode:
    
        * Off-by-one line numbers were off for MRI too. Fixed to correct line numbers
        * call and return for Ruby methods need to use impl class, not self class
    
    commit cbc9c4edab56807a023817d06db9c22441fa4b53
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 10:31:57 2010 -0500
    
        Fix runInterpreterBody to properly unwrap RootNode for "gets loop" execution.
    
    commit 3a09773058d8d58d5bf8f1b6fbebc494fc18f7c6
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 10:01:43 2010 -0500
    
        Make --bytecode attempt a recompile, so that dynopt and no-compile modes can still print bytecode.
    
    commit 4e48e722ba5ded10975af348738237fcb7fe9b2a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 09:23:38 2010 -0500
    
        Add a "full" backtrace style which does not omit any Java frames and interlaces the Ruby frames.
    
    commit 6f5057e3ae1e372bd66602dcc26864adc3270128
    Merge: 7006d31 811fd8d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 07:48:47 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
    
    commit 7006d3175bbf4630921dfecaa4faef2a39a77205
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 4 16:04:28 2010 -0500
    
        Bytecode size reductions for stack-based nil-initialization of locals and for x, *y and x, * forms of masgn.
    
    commit 3a8fb16f020c2b9aaa6228605bdb3d8fd1b78ccf
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 4 14:52:04 2010 -0500
    
        Do not do direct recursive invocations for heap-based scopes, since the scope is not currently being reset.
    
    commit ec00e99636667eff97a891917ae9ef37f94a6eb7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Sep 3 19:55:24 2010 -0500
    
        Turn on dynopt by default, to aid testing of new logic.
    
    commit 9508e8a6925fce4f57a386ede867b3f8f9b67d38
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 2 12:40:38 2010 -0500
    
        Fix Time test that expected two separate Time.now objects to to_s the same.
    
    commit 65ba8b37a8a232495453e71b2a560c761b40893f
    Author: Nick Sieger <nick@nicksieger.com>
    Date:   Mon Aug 30 14:50:03 2010 -0500
    
        Use new backtrace info to set a more useful Java thread name
    
    commit 75b100604af39de52b26bdb21669136234424a0b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 30 11:37:49 2010 +0900
    
        Fix ifne/ifeq bug in dynopt guard and switch DefaultMethod to not flip generations on JIT in dynopt mode.
    
    commit fe3b408629e94b7db0436152968bd6d2232f6c7c
    Merge: eea60da 85c64c6
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 29 20:33:06 2010 +0900
    
        Merge branch 'master' into backtrace
    
    commit eea60da3905c87c16fbb4e6c78fd7a07f842e4bd
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Aug 27 14:09:44 2010 +0900
    
        Modify Java Fixnum fib bench to use the long call paths where possible, to be more like what compiled Ruby does not.
    
    commit a189563d9073208292e91aff3eb1c88489bd113d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 15:07:21 2010 +0900
    
        Fixes for jitted/compiled backtrace generation
    
        * SClass in a method body needs to frame, so it has a jump target for non-local return
        * Compiled methods need to always have their ruby name in the method name, so it can be mined out appropriately
        * Synthetic calls, like to rescue bodies, need to gobble caller frames to avoid multiple entries
    
    commit 276226de611cb8d5af942148109c2a51982e7640
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 14:03:44 2010 +0900
    
        Add callNumber tracking to method handles, to properly handle return jumps.
    
    commit b94bcf119a54f52ab9be3c86bc5cc85078f20eee
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 13:16:25 2010 +0900
    
        More fixes for hybrid backtrace:
    
        * Get generated trace to be RaiseException's Java trace
        * Add Ruby exception name to the RaiseException message
        * Rewire and repair trace calls
    
        All main suite tests now pass in interpreted mode.
    
    commit dc9fcd3de0f3070507ac0a0647973d1e9f16ae4f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 14:38:47 2010 -0500
    
        Fix debug logging of exceptions being raised and patch a couple tests for new backtrace structure.
    
    commit 3acd3201d85e4da9186fa17d3a04bdc9db742e29
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 13:23:04 2010 -0500
    
        Include original source file in compiled Ruby, add missing "in" line for MRI rendering, and soften requirements in test_backtraces to allow for native elements in the backtrace.
    
    commit 728cf3983fbeffba944fe34a8b0e410cc1de041c
    Merge: 88a64de 0e9c956
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 00:18:07 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 88a64de879446be3398ba7671b5fa1f3e46ce02f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:29:21 2010 -0500
    
        Turn on "positionless" compilation, since compiled code no longer needs to update interpreter backtrace frames. Also fix nil/null backtrace rendering.
    
    commit 5712a4ce285a5b3662c8ef8def2599223a232626
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:18:17 2010 -0500
    
        Fix off-by-one line numbers from interpreter frames.
    
    commit 519f4625b9d9658f50b986b1add560903ee453de
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:10:47 2010 -0500
    
        Remove some old backtrace code no longer in use and get all "backtrace" method handles to generate with no frame at all (since Java stack is used now).
    
    commit 424d967df8a3b6ba277bdb1b530d4f7f62ecbc4a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 16:52:29 2010 -0500
    
        Get Kernel#caller working with hybrid traces, get Rubinius rendering working again (partially), separate gathering and rendering of backtraces.
    
    commit a00822740712ddd924896feccc10f015fd20d4be
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 15:32:08 2010 -0500
    
        Mine method names out of AOT and JIT compiled stacktrace elements and get JIT using the original name of the method.
    
    commit 039d184ac5f798aed21870a7552b66c5973ca0eb
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Aug 14 22:16:48 2010 -0500
    
        Simplify in-class encoding of StaticScope data.
    
    commit 876a762b8af88955bee598dfd0421805d9b47c40
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 01:41:44 2010 -0500
    
        Fixes to hybrid traces to get tests working better:
    
        * Omit Kernel#raise and the KernelJavaAddons rbRaise from traces
        * Handle getBacktrace when there's been no preparation
    
        Also modified test/testException.rb to allow internal line numbers for the "load" call, rather than MRI standard "whatever line it was called from".
    
    commit 06f1bd171d6897f651b3cebfd76551080acbfe40
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 00:39:59 2010 -0500
    
        Move backtrace management to a separate stack and implement mixed-mode backtrace generation.
    
    commit ca40e73a7c136dfdd3853f0cd62a73bf70a3a08f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Aug 21 20:56:50 2010 -0500
    
        Get all major interpreter entry-points passing through simple, known method bodies. First step toward mixed-mode backtraces.

commit 4375b30ab230c032efb32368606cc2db36e5f43b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Sep 10 02:10:20 2010 -0400

    Improve dumping of generated bytecode by including class and method name when possible.

commit 743f9b0898672b0b844cd0d71460ecec993158e9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Sep 4 16:04:28 2010 -0500

    Bytecode size reductions for stack-based nil-initialization of locals and for x, *y and x, * forms of masgn.

commit 0e9c956bda1fa95c9a22372a8cc8e8a60fdf8565
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Aug 22 23:26:08 2010 -0500

    Fix and specs for JRUBY-5025: "defined super" causes NullPointerException in mixins

commit bfc7eb3bc9a6d6296e00a923b054d92045998126
Author: Nick Sieger <nick@nicksieger.com>
Date:   Wed Jun 16 16:37:03 2010 -0500

    JRUBY-4885: Fix 'else' handling in begin ... rescue ... else ... end

commit f5f9ce3d09885710129d9b99b707921ddabf69fb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 10 14:31:41 2010 -0400

    Redo the bad constant removal I failed on last night.

commit fd1854b8f8c6ccbcdce0f6f0732c144fca6cc707
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon May 31 12:39:37 2010 -0500

    First experiment in dynamically de-dynamifying calls based on runtime information.

commit e373c01f64dc8cd4f29517e6d56e8a4db9a90177
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu May 20 16:08:50 2010 -0500

    Eliminate the often-unnecessary getRuntime and getNil from the preamble of compiled methods; brings us closer to lightweight or do-nothing methods inlining away.

commit 09ccccede225f7a6b3a78408afa4ffb0b202d777
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Wed May 5 17:06:31 2010 -0500

    JRUBY-4776: calling defined?(super) in a module method causes a NullPointerException

commit 03dce7596d4786942eac8389a0c446e372be7655
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun May 2 03:25:14 2010 -0500

    Add block callback offline generation for jrubyc --handles. Should now allow "complete" offline compilation of scripts.

commit e05b969291d44e3d42e14861e30ce189a52f1b5f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun May 2 02:09:26 2010 -0500

    Miscellaneous cleanup:
    
    * A number of findbugs items in the "threadsafe", "performance", "malcious code", and "experimental" warnings
    * Tidied up all NetBeans "yellows" in the files I touched
    * Removed now-defunct JRubyServer/Client/Service
    * Removed now-defunct ssa.rb and DAGBuilder

commit cd1677ddf0f4a1ef1b584f33825404a5c22b55d9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Apr 30 01:50:20 2010 -0500

    Add the ability to pre-generate all method handles when compiling a .rb file (--handles flag to jrubyc).

commit 058e03d1a8dcdb85df490c030660d073a042e83c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Apr 29 23:05:54 2010 -0500

    Fix SHA1 hashing logic for codeCache and add a --sha1 flag to jrubyc to do the same thing.

commit 6ca0f756342bb79a113be682b7a81af71c747365
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Apr 27 11:56:03 2010 -0500

    Partial fix for too-big methods (JRUBY-2621 and JRUBY-4757): chunk 100%-literal arrays and hashes.

commit 8159e267495e08d3d83200e86bca3ba5f0e1b9e6
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 1 12:49:28 2010 -0600

    Fix for defined?(Foo::Missing::Missing) which did not clear $! if LHS was missing.

commit 516aa109ef62c3f2e4d9ff8c92b1dc1dc946e61d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jan 18 22:05:52 2010 -0600

    Improvements for JRUBY-4486: defined? self::CONSTANT generates a metric ton of bytecode

commit bd61ec6424280d441264de37a53e38f67b1bd1b4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 15 21:40:30 2010 -0600

    Fix for JRUBY-4479: defined? on metaclass hierarchy elements does not appear to search fully

commit 3849128d6ab797ecef79db8786ac8bcea11fbbf3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 12 09:35:07 2010 -0600

    Reduce bytecode size by packing all basic cache initialization into a descriptor string that's parsed on load.

commit f0c9235b586d9abb8caf018d6399139f9dbe9613
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jan 4 16:40:23 2010 -0600

    Add block-argument-list-block-arg support to compiler. Completes JRUBY-4180.

commit c23ba2f99388c4e6cf6d2e0f7333db23b58b2b51
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Dec 22 10:59:26 2009 -0600

    JRUBY-4119: alias should use symbols with quotationmarks

commit 95f8f246b041ffe6bba46c2daf60cd6d71738b99
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Fri Dec 18 17:03:18 2009 -0600

    JRUBY-4355: [19] Splat operator behavior is slightly different in Ruby 1.9 (patch by David Calavera)

commit 25720ab186b2d0fcdeffc1744128e185bf575a6b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 11 12:12:17 2009 -0600

    Fix for JRUBY-1531: Tracing in compiler / Tracing AOT compiled code
    
    This adds tracing calls to the compiler output and compiled-method invokers whenever full tracing is enabled. This allows debugging at nearly full speed, though to support bindings DynamicScope optimizations (elimination, for example) has to be turned off. This patch modifies --debug to no longer turn off compilation nor turn on reflection, and test/tracing/test_trace_func.rb passes in all modes.

commit 3cd2e9d3d714cceab46460b33c12c41a512644fe
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Oct 13 15:37:44 2009 -0500

    JRUBY-4029: String hash keys should be copied

commit 3a525a4c19eab39e1505fea9bd968fa7b131cbc0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jul 13 22:40:34 2009 -0500

    Refactor compiler to produce all static methods, with the AbstractScript subclass as the first argument. Will make the next phase of the compiler easier, since we can pull out script logic from compiled classes. Seems to speed things up slightly too.

commit e85018a30cc1d1f8ff2abcf8fa029c6d32397e82
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jun 13 16:27:46 2009 -0500

    Fix by Leonardo Borges for JRUBY-2349: Bug in constant lookup on non Module or Class

commit 2afcfd01ef871cd643cd32700201601b52b386eb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jun 2 21:05:44 2009 -0700

    Revert "Inline caching for global variable accessors. Why? Because it's there!"
    
    This reverts commit ed72b6b0d8761df1b0404ac82563158f8428aa2f.
    
    This breaks the JSR223 engine's global variable stuff. We'll need to take another look at doing this, if it's actually worth doing. JRUBY-3729.

commit 61b91d0f249964cd71d601991fb6dee54e641a46
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue May 19 17:08:26 2009 -0500

    Changes for JRUBY-3588: Allow rescuing Java Throwables.

commit 64e5685251ffa6114cf358a5af369c4c01ce0471
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu May 14 15:23:46 2009 -0500

    Fix a compiler bug where extending a superclass contained in local variable did not handle retrieving it correctly.

commit ed72b6b0d8761df1b0404ac82563158f8428aa2f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu May 14 10:01:28 2009 -0500

    Inline caching for global variable accessors. Why? Because it's there!

commit 5ba563f545e175e3d28063769790f5b4c4765b72
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Apr 9 22:41:26 2009 -0500

    Fix a SyntaxError in dregexp logic from a new spec failure.

commit 66b28d6e25993dac775867702563e32e7bc75b41
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 8 20:58:55 2009 -0500

    Migrate to having backref/lastline on DynamicScope again, with inspector changes to ensure the scope is available. Does not yet pass all tests.

commit 7bd55a3d3ab30771d185c23f336c88e22e2764ca
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 6 12:34:33 2009 -0500

    First steps toward inlinable dyncalls. This modification will pull single-arg fcalls all the way back to the call site. This speeds up some benchmarks but slows others, and so it still requires a property jruby.compile.inlineDyncalls=true.

commit c8c9e55f7f1afdde43d4cdd2b5635055b3765af4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 1 03:29:09 2009 +0000

    Hook up the compiler to the new ivar logic.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9511 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 36efc465e3066fd765ba26aea760356cc7265d36
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Mar 23 08:24:11 2009 +0000

    Add dynamic-call optz to zsuper. This temporarily regresses on the likely-buggy behavior from http://redmine.ruby-lang.org/issues/show/1151 but I'm trying to shag down an official response. We will want to either revert to the "buggy" behavior or mark this as ruby_bug in the specs, depending on what we hear from ruby-core.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9461 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 036f2b5f5051543028e7146092531f6f70c52a18
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Mar 9 08:08:10 2009 +0000

    Add peephole property to --properties doc, add peephole optz to zarray.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9383 961051c9-f516-0410-bf72-c9f7e237a7b7

commit da9a0701fa884af0f8c246d87dce16a48976bd00
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Feb 22 20:26:24 2009 +0000

    Revert "Add Float caching to compiler and interpreter. Passes all tests, improves performance, but I feel like I didn't do it before on purpose..."
    
    Apparently floats can be frozen and tainted.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9266 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 83bcb0122b4f5095625c368f6373fe2bacb2fd4f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Feb 21 20:11:32 2009 +0000

    Add Float caching to compiler and interpreter. Passes all tests, improves performance, but I feel like I didn't do it before on purpose...
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9261 961051c9-f516-0410-bf72-c9f7e237a7b7

commit dd015cbaeb3a6dbe1794510aef36a03f931b35b2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 24 18:35:18 2009 +0000

    Get most of masgn implemented for 1.9 compilation, along with optimized assignment for "flat" masgn. "post" args are still not compilable.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8882 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2491d1ab35a29e3e5c6a29f78c0c69c1f0752a6a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 24 18:35:08 2009 +0000

    Expand case/when optimization to include single-char symbosl and multi-char symbols and strings. Also turn it on by default, even though it's not checking for === override atm.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8880 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e1447512f264e770bf61fbbc30aa29e0b1aa5f3b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 23 04:25:41 2009 +0000

    First round of perf improvements for rescue.
    
    * Make all errorinfo access go straight to ThreadContext, rather than via $! global variable
    * For methods with body instanceof RescueNode, compile inline without a separate synthetic method
    * Start preparing to allow ASTInspector optimizations for rescue when it's compiled inline
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8872 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 26b3614941e64533be7e87413d9cebfda45b0aad
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Thu Jan 15 22:31:29 2009 +0000

    Do not mark MatchData as used until it really escapes, nice boost for some String methods.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8788 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 03165718fbea29dd71ae09fcc23915f307328d25
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 14 16:31:45 2009 +0000

    Add in single-character-string case/when optimization.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8772 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 04602b8b0c0dcf59ecb5c978870d6d433d8b13c3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 14 01:50:05 2009 +0000

    1.9-compatible argument processing for blocks.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8753 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 043ce6d0a625980b1ccb00ee0b2c06a610282253
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 10 00:33:14 2009 +0000

    Only emit flow control errorinfo cleanup logic once, making the inner one just rethrow for the outer one. Hotspot should compile this as a jump anyway, and yay less code.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8676 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 76e7f75333e04faed8a69269652f15e94bde863a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 10 00:33:09 2009 +0000

    Only emit retry-handling logic if there's a retry present.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8675 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e3d710ce9a807f8ee4db04c00cf231d8ad52a4e0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 10 00:33:03 2009 +0000

    Method preamble cleanup:
    * Don't getValues from DynamicScope unless it's > 4 vars; we did it every time, creating a throw-away array for every call!
    * Same fix for chained and "flat closure" method bodies
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8674 961051c9-f516-0410-bf72-c9f7e237a7b7

commit eb783290f6206280063137b6bd90c40e8c8b1f76
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 10 00:32:57 2009 +0000

    Remove some extraneous argument passing during exception handling logic.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8673 961051c9-f516-0410-bf72-c9f7e237a7b7

commit b51b35c1ed6fcbd502ec9ed34f5fc6c0211ab9e1
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 10 00:32:50 2009 +0000

    Nexts round of rescue optz, part 1: don't outline immediate bodies, and load StandardError without const lookup.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8672 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ff7738a32b384835da78a7a43a1144dcdf1c414b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 9 17:57:51 2009 +0000

    Expand expr optz for masgn up to 10 elements.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8667 961051c9-f516-0410-bf72-c9f7e237a7b7

commit b62f9ab29dcceab7ff36e26de2b750795e454d34
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 9 17:57:05 2009 +0000

    Minor optz for match2 to eliminate a swap.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8666 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 79b617effab802595db9c6f790bd369380748fda
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 9 17:56:16 2009 +0000

    Minor optz for literal hash, to use specific-arity construction always and eliminate duping.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8664 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 514ea76038ef8372fcd0208e47d607c8ac454e6f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 9 17:55:51 2009 +0000

    Minor optz for literal range to avoid stack juggling.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8663 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 578daf6c053faad8373cf7317f8d3aa4c00b30cd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 9 17:55:37 2009 +0000

    Minor optz for const decl, avoiding unnecessary stack juggling.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8662 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 4ff3d90ed08dd9add49b5a603a088c7f778349aa
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 9 17:55:18 2009 +0000

    Minor optz for colon3; no need to check if Object is a module.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8661 961051c9-f516-0410-bf72-c9f7e237a7b7

commit eef09fd68dfd46161b50c0bac5d18d0ceee93c54
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 8 13:05:48 2009 +0000

    Get optimized cases working again, sharing bodies with normal slow-path switch logic.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8653 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 85d8d094a5c5ffc9ae554bd4420db1ffd3c117df
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 8 00:25:32 2009 +0000

    Cleaned up, partially optimized, and arity-split case/when logic. --fast case is probably broken, and splatted causes duplication still, but it's close.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8644 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 05ad1d34fec0d374ce2b21782cb68bba0f858d0e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 7 07:30:26 2009 +0000

    Arity-split rescue args. Doesn't help performance much, probably way overshadowed by the cost of rescue itself.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8624 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e02fb35cf9fd558e342a2a46dbe7b5f14cb6b778
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 7 05:49:15 2009 +0000

    Modification for optimized fixnum switch to support multi-arg fixnum whens.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8622 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 91799eaaaf58ee72283b41330e3941b4753ed4e7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jan 5 07:12:29 2009 +0000

    Large refactoring of CallConfiguration and compiler logic pertaining to it:
    
    * Made CallConfiguration an enum, aggregating new Framing and Scoping enums
    * Juggled all references to CallConfiguration to be appropriate for its new enum status
    * Reduced and simplified logic based on CallConfiguration in compiler
    * Added remaining permutations of framing and scoping to better support proper execution in frameless mode. With these changes MRI's test.rb runs green in "fastest" mode.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8594 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 40bebd6552460a2bdd1405a242efa77d08c250be
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 2 10:12:30 2009 +0000

    Cleanup, optz for regexp; no more using a custom field and offload some logic to AbstractScript methods.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8560 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 4306ab442612b820b5aca0da12ff4fc4ae80e740
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 2 08:56:58 2009 +0000

    String optz:
    
    * Reduced bytecode emitted for literal strings
    * Caching bytelists for literal strings in the same way as other literals, rather than on a static array
    * Increased starting size for dstr to 20 bytes from ByteList's default 4
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8559 961051c9-f516-0410-bf72-c9f7e237a7b7

commit b6a2b7c54a716e9783a070552d5e0edf2d3dd77b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 2 07:19:34 2009 +0000

    Add Colon2 and Colon3 caching to compiler.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8558 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 0165b69a75640c2b9239ff17fe7ff8ef4d0a8a09
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 2 06:37:52 2009 +0000

    Big reduction in bytecode emitted for Colon2, using Enebo's split AST nodes as a guide.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8556 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ff9baab4ad2d88d6b41bf0cd0d789463d53b9bd7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 2 04:22:19 2009 +0000

    Optz for class/sclass/method bodies, to get the usual variable optz and reduce per-entry cost due to recreating the scope.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8555 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 397769483c16880ec01c5e67073016b9b1bddb01
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 2 02:00:54 2009 +0000

    Expand masgn optz to 3 and 4 arities, the highest possible without introducing intermediate temporary local vars.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8552 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 4ddb642dccb52e316c5c1c283033568d56d99872
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 2 00:31:58 2009 +0000

    Restore the use of [] signature for script body to eliminate the extra __file__ method again.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8545 961051c9-f516-0410-bf72-c9f7e237a7b7

commit c0f0f59e6c610a5f36c5805bdb33b3ba2540bde2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Dec 28 23:45:19 2008 +0000

    Same improvement for 'for' as for normal blocks; don't expect redo exception unless there's methods that could cause it.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8493 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ddd126aad76361773e51b9f2b6cff6f5b780f9d3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 27 12:22:59 2008 +0000

    Tidying up ArrayNode compilation a bit, since it's used for the 'yield' args list. No measurable perf improvement, but it's less bytecode.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8475 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e6653b48f2dcf0da3625f8828e18c0bd756835f3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 27 09:57:31 2008 +0000

    Another large optimization of block argument processing; substantial reduction in bytecode size, improved performance, reduced dup/pop churn. also some other miscellaneous cleanup.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8474 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6adbf9efe7ad933050fbae15ae1a83127a3ef8b8
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Dec 23 07:58:27 2008 +0000

    Migrate for/BEGIN/END blocks to newer reduced-bytecode binding mechanisms. Eliminates the synthetic method by calling a pre-defined method, and caches in an array instead of in separate, custom fields for every class.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8438 961051c9-f516-0410-bf72-c9f7e237a7b7

commit bda00e4e4bbedc9e1dd1644705a83b1f5683784f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 20 07:41:38 2008 +0000

    Cache literal regexp like any other literal, using an array and simple pre-defined initializer methods. Reduces bytecode size for literal regexp many times over. Also added a literal regexp benchmark.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8408 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1d6c408a473993d644e943cb4d4f6d788927655a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Dec 16 18:04:40 2008 +0000

    First round of twiddling to get 1.9 compilation work under way.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8367 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 20361c601252bb069b96803512db968d50dad3c7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Oct 30 08:53:05 2008 +0000

    ByteList portion of JRUBY-2807: Migrate inheritance-based cache compiler to use arrays for more stuff
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7958 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d6a74cb976e310ae581c9f4368b1fac90904267c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 28 19:21:56 2008 +0000

    Add constant caching logic to the compiler, matching interpreter for JRUBY-3062.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7928 961051c9-f516-0410-bf72-c9f7e237a7b7

commit cf10e0b29b488f7261e57f1db064139e7fbc22e4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Oct 24 20:51:42 2008 +0000

    Remove some commented/unused code from rescue compilation.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7913 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3ba9e3704ab289d9f0abfe156a18623525880f0f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Oct 24 04:46:39 2008 +0000

    Additional cleanup for compiled exception handling: only Exception is handled now (other than FlowControlException that's propagated) and both ruby and java exceptions go through the same logic. Greatly reduced size, but perf is still a bit low.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7906 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6e673b59cd7223c945b6b1a4aab23154f48b217a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Oct 24 04:46:31 2008 +0000

    Wide-ranging rework of exception-handling synthetic methods:
    * Chained compilers split into two, to handle outlining code within child-scoped methods as well
    * outline method moved to Root and Child method compiler base types
    * Simple ensures modified to use new outline logic
    * Rescues modified to use new outline logic for both main logic and bodies; no sharing yet between ruby and java exception paths
    * Small reduction of code generated for rescues
    * Simplification of rescue logic in compiler, due to outline use
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7904 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 7c91133ccd72bcb48a1c8c46bd6e3f30816f4abe
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Oct 20 21:00:25 2008 +0000

    Primary set of changes to support JRUBY-3014; compiled scripts now have to have a setFilename method that is used before execution to set what filename the script actually is, allowing __FILE__ to be dynamic for .class files when loading. Still need to fix jar-file location for loaded scripts, both interpreted and compiled.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7898 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ccca132e552ff9cad9a0765e806e8e38ed452050
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Oct 12 05:10:59 2008 +0000

    Minor bytecode reductions for global and ivar set/get.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7874 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 7593ed4f52dec411e9c685b00d644ec205999bb2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Oct 12 04:09:14 2008 +0000

    Minor cleanup before tackling compiled rescue logic.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7873 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 74deae83536b0efcbf299a4e57002769a16c3a61
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Oct 11 22:10:15 2008 +0000

    Fix for JRUBY-3049: EXCEPTION_ACCESS_VIOLATION
    
    This commit has several changes to simplify jump exception handling in while loops:
    * The "reason" for LocalJumpError is now based on an enum, so there's no need to .equals a string
    * Redo handling is now a separate try/catch chunk contained within the loop, rather than part of the larger chunk outside it. This prevents the redo from jumping back into the exception-handling logic, which was the source of the crashing.
    * LocalJumpError handling within a while loop is now implemented as a RuntimeHelpers call that checks for redo|break|next and *rethrows* a normal JumpException subtype. This allows the jump-handling logic to be reused, and moves the LJE-juggling to a separate piece of code.
    Not only does this solve the segfault, it also substantially reduces the amount of code emitted for a jumpexception-aware while loop.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7871 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 0be23d6124bbc965e1fcb634ac89561bdc7b1dff
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Sat Oct 11 15:21:49 2008 +0000

    JRUBY-3052: Cache constants at their call site (const_node)
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7867 961051c9-f516-0410-bf72-c9f7e237a7b7

commit c2ae9de36081f45801b96b380cdea9cc4bf797d1
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 7 03:00:51 2008 +0000

    Fix for JRUBY-2349: Bug in constant lookup on non Module or Class
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7841 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 026f246748a6f0ce2516657e7f4e672af44f6930
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Sep 19 23:40:39 2008 +0000

    Beginnings of annotations on compiled methods, to move toward unifying method binding logic and eliminating extra method generated for [] versions.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7723 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 5adf2ec02859812d64b23d2dc530e1736a4d7969
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Sep 14 06:27:13 2008 +0000

    Add finer-grained recognition of constants, class vars, method operations, and class/modules to ASTInspector, allowing selection between dummy scope and no scope. This returns pure scopeless, stack-based methods to their original performance.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7699 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3fc75aa4e0fb355b8781f073479fd053dd581599
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Sep 14 05:06:11 2008 +0000

    Eliminate constant and class var dependency on heap-based scopes.
    
    This implementation degrades performance slightly for normal stack-based methods (fib goes from 0.33 to 0.37) but in exchange it allows methods with constant or class var access to also be stack-based. It is also a stepping stone; with this code working, it's now easier to return stack-based bodies to using no scope at all and having no pre/post logic.
    
    Also included in this patch is a change to evalScriptlet that forces each call to execute in its own scope. I've always been suspicious of evalScriptlet, and now I know why: it was adding variables to whatever scope happened to be on the top of the stack. Even worse, if variables were already there, it would reuse and potentially overwrite them. This behavior simply cannot be allowed, and my forcing stack-based scopes to use NoVarsDynamicScope exposed it. evalScriptlet must execute each call in a separate scope, and we should consider adding a new version taht can take an existing scope.
    
    Note also that TestVariableCreation, which depended on evalScriptlet's broken behavior, has been removed.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7698 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ef600a2c8d8c065a1599734d560be2b975470796
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Sep 14 04:00:11 2008 +0000

    More compiler refactoring.
    
    * MethodCompiler interface becomes BodyCompiler
    * AbstractMethodCompiler becomes BaseBodyCompiler
    * ASMMethodCompiler split into a subhierarchy of "root-scoped" body compilers
    * ASMClosureCompiler becomes "child-scoped" body compiler
    
    All preparations for making per-type compilation behaviors more customized, especially to help move towards method bodies using a direct reference to their static scope for constant lookup.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7697 961051c9-f516-0410-bf72-c9f7e237a7b7
