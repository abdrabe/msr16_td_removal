commit 50de44c2cc9daf2170616c5dc8db0838cee2124e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 16 15:26:51 2014 -0600

    For very large case/when, spill when bodies into JVM methods.
    
    Many Ruby libraries use very large case/when statements. For
    example, generated parsers, such as the one in whitequark/parser.
    These large cases often do not JIT on JRuby because their JITed
    size exceeds the bytecode size limits of the JVM. Some may compile
    but then optimize poorly because the JVM decides it is a "huge"
    method that's not worth optimizing.
    
    This patch adds a configurable knob compile.outline.casecount that
    specifies a count of cases (when bodies) in a case above which the
    bodies will be emitted into their own JVM methods and
    single-method optimizations are disabled. Currently this threshold
    is set to 50 cases, but this is a somewhat arbitrary estimate
    based on the roughly 30-50 bytes of bytecode required just for
    the when matcher logic. 50 * 50 = 2500 bytes just for matching,
    and then the when bodies are usually much more code.

commit 4c9c7e4cc88aeb7e328c73a557173a2ba28623f3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Nov 19 10:56:24 2013 -0600

    defn/defs need scope to get proper rubyClass for definition.
    
    Fixes #1239

commit 28c6fbc4e883bc1c9e9242d1da1cb2b785f55339
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jul 3 12:46:45 2013 -0500

    Move to @mkristian's proposed layout, with some modifications.
