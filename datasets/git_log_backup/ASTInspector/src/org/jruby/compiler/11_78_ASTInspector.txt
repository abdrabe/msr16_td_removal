commit 2ee40a1c09a310c87d71ce16bcee09ea60736c72
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jun 21 09:17:37 2013 -0500

    Improved logging and enum use in ASTInspector.

commit b0b839e75fdfdce7bb062a45531731f4504b94d9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jun 16 01:18:26 2013 -0500

    Force heap scope when named captures are present.
    
    Named captures currently require that there be a heap scope
    available, since that's how the match logic updates the local
    variables that go with the capture names. Because backref no
    longer requires a scope on its own, the method did not properly
    use heap-based local variables in the presence of a named capture,
    and as a result did not see the updated values.
    
    My fix adds logic to ASTInspector that forces a heap scope when
    there is a Match2CaptureNode present, indicating named captures.
    
    Note: There's nothing about named captures that *must* have a
    heap scope. We could update them in the calling code after the
    call returns, one by one. This would be slower than updating them
    as a group, as in the current logic, but it would not force us to
    allocate the extra scope and force all local variables to the
    heap.

commit 45d3af1710e258ce7f4f85cb5ce624758e75ef1b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jun 15 22:56:15 2013 -0500

    Rework frame management, and backref/lastline along with it.
    
    These changes should bring us more in line with the way other
    implementations manage "frame" data and bindings that capture it.
    It should also reduce the cost of framing, binding captures,
    blocks and procs, and operations that manipulate blocks and procs
    like define_method and instance_eval.
    
    The new logic works as follows:
    
    * Rather than a binding immediately duplicating a frame, it
      instead grabs a reference to it and marks it as captured.
    * When popping a frame, if it has been marked captured it is
      discarded rather than being cleared. This moves the cost of
      creating a binding to the pop of the surrounding method, which
      reduces the cost of nested bindings re-cloning the frame many
      times.
    * Bindings that are still active (have captured a frame that has
      not been popped) will update the method's frame data in-place.
    * Once the frame has been popped, it will live only in that
      binding.
    
    This commit passes mspec ci and test:mri19, but I am continuing
    to test it for a while.
    
    Note that this commit also moves backref and lastline to
    the frame. They have always been frame-local, but for a long time
    we kept them on the scope so we could avoid touching the frame for
    methods that did not need it. However, because we used the scope,
    it was difficult or impossible to isolate backref and lastline
    changes to the block. Moving to the frame, which has a lifespan
    only as long as the method that activated it, makes isolation
    easier.
    
    This should also make it easier to fix thread-safety issues with
    backref/lastline, as reported in JRUBY-7167.

commit 61678ac1a2514a9932276f8d527816a5980a94b3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 25 20:41:40 2013 +1100

    Fix more references to CPL.
    
    The phrase "Common Public License" was split across two lines in
    our default header, which caused it to be missed during earlier
    search/replace. Also, we did not replace the CPL URL in the
    header with the EPL URL.

commit 330fef3b0fc18af477ccea19bd278669667f31bb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Feb 12 14:49:29 2013 -0600

    Switch JRuby's CPL license to EPL.
    
    Governance of the CPL license was moved to the Eclipse Foundation
    at some point in the past, and Eclipse blessed the EPL (Eclipse
    Public License v1.0) as the successor to CPL. Because the CPL
    contains a clause allowing transparent upgrades to future blessed
    successor licenses, we can make the move to EPL without
    re-contacting past contributors.
    
    The change in going from CPL to EPL largely just removes some
    punitive language that apparently made many companies nervous. All
    other language in the license remains identical.
    
    Several documents about Eclipse's move from CPL to EPL are here:
    
    http://www.eclipse.org/legal/cpl2epl/
    
    Note that Eclipse's move came before the blessing of EPL as the
    upgrade path for CPL, so they had to do a bit more legal juggling.
    With Eclipse now the administrator of CPL and with their blessing
    of EPL as the upgrade path for CPL, all we need to do is make the
    move.

commit 1bfa8ef7659726151a930427c6e582424b18b19c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 17:01:30 2012 -0600

    Fix defined?(@@cvar) to use cached scope and disably dummy scope.
    
    With this commit, scopes that have classes, methods, constants,
    and cvars no longer have a requirement that a dummy scope be
    pushed. The scope is loaded from the same cache as other values,
    and as a result those methods have no implicit cost over the same
    code with no scope access.

commit 334ff34fc1fc7965156fabe1c82227636d9c10f7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Sep 28 13:17:10 2012 -0500

    Avoid deopt of unary methods on literals without side effects.

commit a6d25cae134d847c0152c52181592cd469461aad
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Aug 21 21:31:17 2012 -0500

    Fix JRUBY-6836
    
    Strange interactions between a break statement and ensure blocks
    
    The current compiler does an "inspection" pass over the AST to
    see whether certain optimizations are possible. For the most part,
    this inspection just sets a few bits on the inspector that are
    used to alter compilation, but there are a few cases like non-
    local flow control (e.g. a while loop with a break inside a
    closure or rescue/ensure) where we actually alter the AST to
    indicate there's something special. The presence of certain AST
    nodes disables all optimizations, largely because those nodes are
    difficult or impossible to support properly without JVM gymnastics
    that make our usual set of optimizations impossible. ensure is one
    such case, and the inspector disables all optimizations when an
    ensure is encountered. However, it should still run the inspection
    of all child nodes, since as mentioned above there are state
    changes on the AST itself that still need to happen in order for
    those nodes to compile properly.
    
    I audited all places in ASTInspector where we do a hard disable()
    call and made sure those locations still proceed to inspect the
    downstream AST nodes, which fixes this bug and should prevent
    other cases from popping up.

commit 1f0a4c38b508ea7b1953427d723f392bd126a4c9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Mar 28 07:03:10 2012 -0500

    Attr and element assignment do not require frame self.

commit 584814f0c7a43b54094a0e975bacf0fcf38e9865
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Mar 28 06:25:02 2012 -0500

    Only set backref flag for case/when with non-literals or regexps.

commit d062ccaaac0adbdf9f4d218f79022960c7c84307
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Dec 19 01:42:11 2011 -0600

    Set English.rb aliases immediately, and make it a no-op.
    
    Because we rely on the presence of $~ and $_ global variables to
    know we must allocate space for them, we need to define their
    English.rb aliases right away and disallow further aliasing. Since
    we must define those aliases, we might as well define all aliases
    and make English.rb a no-op.

commit 4a8330815c3e6fc5407b424312fd7d65518203fc
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Oct 26 10:10:14 2011 -0500

    Cleanup and centralize all property-based configuration settings.
    
    Properties for JRuby are now all in one location, combined with information
    on valid options, defaults, and description. All properties going forward
    should follow the same format, to ensure they're documented in the jruby
    --properties output.
    
    I have added to this new form all properties I thought were interesting to
    expose. There are a few still hidden that may be deleted soon.
    
    I also removed some long-defunct properties and removed unused code that related
    to them.

commit ed514e717688709760f9aedf0ca302ba79ae5210
Author: Douglas Campos <qmx@qmx.me>
Date:   Thu Jul 14 03:19:03 2011 -0300

    org.jruby.compiler.* loggers

commit ba1ce78cfeded2b8d078f9718ad2da236e5f4328
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Feb 23 13:57:54 2011 -0600

    Cleanup useless properties, enable fast math operators, add a couple more fast operator call sites.

commit fd0fa789b21b30f294e8286b72b75fe3b688c27a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 1 12:07:42 2010 -0600

    Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
    
    This is a squashed merge encompassing the following commits from "backtrace":
    
    commit eb0e24242050199ac1cc4cf6e48d93025f0186f4
    Merge: 32137de ea48d8d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 12:03:28 2010 -0600
    
        Merge remote branch 'origin/master' into backtrace
    
    commit 32137decc9351dd7b6a19c49c7955808f535bb9c
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 09:41:29 2010 -0600
    
        Fix remaining failures for test-all.
    
        * Disable CheckClassAdapter temporarily, since it disallows what should be valid JVM identifiers.
        * Use the presence of $RUBY$ in method name as an additional indicator that we're processing a compiled Ruby body during backtrace gathering.
        * Move some largely-static properties out of "init" target in build.xml, so they're available whether init is triggered or not (e.g. run.jvm.model).
    
    commit ee2a624201d5e9cd408d6ae793160aeb99b50b3d
    Merge: cd50ae5 88ad204
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 08:01:22 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit cd50ae5f06b95a2fffab6bc1f3a7419f478d0a52
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 19:15:07 2010 -0600
    
        Get remaining spec failure with -X+C passing.
    
        * Embed the actual Ruby method name into the Java method for block bodies, rather than __block__.
    
    commit 52bbfffcae1aed62bf4afcb692bed9725e4e1564
    Merge: 4ed7235 1aace5e
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 01:37:15 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit 4ed723579101fffd8bfa73b30dc6e4e8991866f2
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 01:31:44 2010 -0600
    
        Precompiled (AOT) specs *nearly* green.
    
        * Mark __method__ as reading frame "name"
        * Fix AOT-based stack trace mining logic
    
    commit 64e20aa939b5b9c6e41e0e9fe09039a0bb92794a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Nov 29 16:50:55 2010 -0600
    
        Jitted specs running green.
    
        * eval needs to set method name into the binding, so it's there for "__method__" in the eval'ed code.
    
    commit fd442c0a815bcab9eb6c9aa1b71e1f8a260ee03b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Nov 29 16:06:53 2010 -0600
    
        Interpreted specs green on backtrace.
    
        * Tagged some __method__ specs for which backtrace behaves like 1.9, which Matz apparently likes but was afraid to backport. Odd cases anyway.
        * Fixed method name for the block used to define_method.
    
    commit cedb27e430b422c1158f66b4dcc7769922433506
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 24 18:35:22 2010 -0600
    
        Reinstate deprecated java_to_ruby and ruby_to_java I removed, since it's still needed by some external libs.
    
    commit b48b17910de662b4e2d20ee8f4b5cc734eefc1ed
    Merge: f39007e 2ae4995
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 24 13:40:58 2010 -0600
    
        Merge remote branch 'origin/master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/RubySymbol.java
        	src/org/jruby/runtime/CompiledBlock19.java
        	src/org/jruby/runtime/Interpreted19Block.java
        	src/org/jruby/runtime/InterpretedBlock.java
        	src/org/jruby/runtime/MethodBlock.java
    
    commit f39007eca676c1e6ec9f891ac63b7c5d907b0d1b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Nov 18 14:01:29 2010 -0600
    
        Start normalizing the method/class names generated into Java by JIT and AOT compiler, to wrap up the remaining spec failures.
    
    commit 76e42c4b4522dc87c066d20051d02d1e4005b860
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 20:40:33 2010 -0600
    
        Disable dynopt for now, to allow better stabilization on the main feature of this branch: frame elimination.
    
    commit d03099690df2e16d423e8b6a8969e0264983237f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 15:00:14 2010 -0600
    
        Encapsulate "coreMethods" hash in Ruby and add "bound method" logic to default (non-generated) class populator. `ant test-all` runs green now.
    
    commit ed7458f72bce55b11e5231f8e7b9d590c09ca53d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 10:46:43 2010 -0600
    
        Fix incorrect use of fastSetInstanceVariable instead of fastSetInternalVariable in FFI.
    
    commit f09626121b6a8bea6ab39a3c8ed3ccd69f56b505
    Merge: f780b97 e8ca689
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 10:15:16 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit f780b972b1f3e18f4c2608d9536e797a0845cd1a
    Merge: 25ab5d3 6967ea7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 09:04:42 2010 -0600
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/runtime/ThreadContext.java
    
    commit 25ab5d3d3f8c1fbf0fa334427b1485d322e83f86
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Nov 7 00:42:54 2010 -0500
    
        Don't do dynopt against calls that receive blocks; non-local flow is not properly handled yet.
    
    commit a4ad27056dcc3acf6bae0b0af7e618966d08a6dd
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Nov 6 15:22:40 2010 -0500
    
        Tag caller specs that do not pass with new backtrace logic (peculiar eval caller behaviors).
    
    commit eed8902084cfa06d4648935c1f70da57bf0c7a9c
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Nov 6 00:32:59 2010 -0500
    
        More fixes to get specs and tests green on backtrace branch:
    
        * Hash#index was not being bound properly from RubyHash#index19
        * Range#min and Range#max need super, and therefore need frame = true
        * tc_owned is a bad test and fails on system like OS X where (for some reason) / may be owned by user
        * test_trace_func had been hacked for a bad class result (Integer, instead of Fixnum)...fixed that
    
    commit 9d9f94c30de76fa25e738e70e84ea09163eca5cb
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Nov 5 20:03:22 2010 -0500
    
        Fix Kernel#caller to replace .java lines with Ruby lines. Brings specs mostly to passing.
    
    commit de433c771830e95c54f8196453208f2b312191aa
    Merge: 3ffe1cf e25c58f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Nov 5 17:40:02 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyIO.java
        	src/org/jruby/compiler/impl/StackBasedVariableCompiler.java
        	src/org/jruby/evaluator/ASTInterpreter.java
        	src/org/jruby/java/proxies/JavaProxy.java
    
    commit 3ffe1cfba86f52ee96d89f3a1c352597f22f76b7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 27 01:42:06 2010 -0200
    
        Fix compile error I accidentally merged.
    
    commit b081253fb3cdf5141f7f0cf76d3f8546837d9f42
    Merge: fc3028d ad68e22
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 16:30:25 2010 -0200
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/internal/runtime/methods/DefaultMethod.java
        	src/org/jruby/runtime/ThreadContext.java
    
    commit fc3028d9da2750c9d1c394600ab8ee712388724d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 14:39:29 2010 -0200
    
        Add better description for class bodies in backtrace
    
    commit d796555494c2237116c7477c932fd96cd30d2e20
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 11:36:29 2010 -0200
    
        Clean up and add color to Rubinius backtraces.
    
    commit 012f5357ce649bd5a996211fe231f26097bf4f5b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 16:23:04 2010 -0500
    
        Fix classloader check to allow for compiled method handles, which use a no-arg constructor.
    
    commit 473d48aac6a5523304188d1d433e4c12df989b89
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 16:10:32 2010 -0500
    
        Improve Proc-binding-based eval position info by propagating block's position into the binding and through to the backtrace frame.
    
    commit bcfd16b519b145c9ee055db1592dfaced05b71a0
    Merge: 4902faa 5b49583
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 11:07:15 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyTime.java
        	src/org/jruby/runtime/ThreadContext.java
        	test/org/jruby/test/TestRubyException.java
    
    commit 4902faaf1678d5aecdef8b0b66f8ec78062aeec5
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Oct 21 09:28:45 2010 -0500
    
        Fix badly-merged RubyProc.to_s19, missing opening brace.
    
    commit 69177d7098f9dc4ff9096d08eee25c0d8bb4f971
    Merge: 801e764 f895837
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 20 21:50:53 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 801e7641b8838a8ae8931a9c6dcc5cf050096c4a
    Merge: 0c60a89 dda4644
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 19 23:16:41 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyDigest.java
        	src/org/jruby/RubyProc.java
    
    commit 0c60a89aa746f286588b218681e9ad25b11318c4
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 19 23:06:15 2010 -0500
    
        Only compile direct recursive calls when we haven't branched to another method body (e.g. for rescues) and we're not compiling a closure or class body.
    
    commit 18333fe82c808e8ed49eef898f19c86fa2d764b2
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 17:04:13 2010 -0500
    
        Get 1.8 specs running green except for a handful of Kernel#caller specs (which don't expect to see .java files in the trace...not sure how to deal with that).
    
        * Fix another literal-block-calling path that wasn't using callIter
    
    commit 366740120ee76d8df3f977edc1727b60b2d4ad63
    Merge: b64390b 6b243a3
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 10:35:14 2010 -0500
    
        Merge remote branch 'origin/master' into backtrace
    
    commit b64390b8cf0d2cb13e06d352969a093b5e86818d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 10:33:39 2010 -0500
    
        Remaining fixes to get precompiled mode passing all our tests. Still some spec failures.
    
        * Bump up permgen max for test runs
        * Fix stack-based scope initialization to not leave an unused nil on stack
        * Ensure compiled method handles properly wrap pre/post logic for dummy and backtrace frames.
    
    commit 96bd3cbde91fc505b37ee13cbea6ffa3e8690c58
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Oct 11 18:36:34 2010 -0500
    
        First fixes for backtrace branch in precompiled mode:
    
        * Add test-precompiled build target for running just precompiled
        * Eliminate extraneous toplevel scope being pushed for precompiled loads (because that logic is all in the generated "load" method now.
        * Add a new scope descriptor decoding path that properly sets up a toplevel scope
    
    commit 0ebbd6ac46c9ac04558f5200f980f26f798b9413
    Merge: fc387be ac455fc
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 6 21:53:18 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyIO.java
    
    commit fc387befff57ada6c116b646a3dfb767cc926ee5
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 28 15:57:58 2010 -0500
    
        Renumber arguments for consistency.
    
    commit bbc91d3c4039bf6c26ceffd4899dcaaeaa3d46d0
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 28 15:40:38 2010 -0500
    
        Fixes to get specs a bit closer to running green.
    
        * Move pre/post logic for Script.load into generated code, so it's the same everywhere.
        * Make pre/post-load push a frame, so top-level of a script is always framed
        * Remove break handling from non-literal block call paths in CachingCallSite
        * Make sure all literal block calls are using CallSite.callIter, which handles break
        * Fix a bad test in testCompiler that needed visibility tweaks and framing
        * Add complete doco for CallSite
        * Fix Kernel#caller to trim from top of stack instead of bottom
    
    commit 4e814a24d5b2ef1b6567a3076a463ff9d08e2a0d
    Merge: 91dc13a 3dbcef3
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Sep 27 17:43:30 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 91dc13a2f0b74bc1054d83378782416465ecc1b8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Sep 27 01:02:48 2010 -0500
    
        Fixes to get test-compiled (but not precompiled) passing 100%.
    
        * Fix eqlInternal's RubyNumeric branch check if classes are equal
        * Provide file and line from all BlockBodies, so Proc#to_s can always use it
        * Fix rejiggered Struct#each and Struct#each_pair to call the appropriate internal version
        * Fix ruby_test's IO.new suite to not use STDOUT directly, risking that it get closed
    
    commit dc4af45352607ebb8a95d70befdcdb15c1111c58
    Merge: ec8bb7f 90275be
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 21 09:52:10 2010 -0700
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/RubyDir.java
        	src/org/jruby/RubyKernel.java
        	src/org/jruby/compiler/ASTInspector.java
        	src/org/jruby/javasupport/util/RuntimeHelpers.java
    
    commit ec8bb7fc31d4acd4ebcb040f088e19fb427448e8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 19 16:21:38 2010 -0700
    
        Remove frame = true from all core class methods, to reduce their call costs. A few remain for invokeSuper and methods that may still need frames.
    
    commit ec276b6ca0c6009702839b12d97664b9e52b1023
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 16 14:10:43 2010 -0500
    
        Eliminate RubyTuple use that snuck in.
    
    commit f80254100cfc17ac6eb558e465fc1fb9122c3ee4
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 14 10:07:53 2010 -0500
    
        Special case a few immutable core types in equalInternal/eqlInternal.
    
    commit eb66c45145e4fd1f8c28e9a8c544114f034116e8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 18:26:13 2010 -0300
    
        Performance changes for backtrace logic:
    
        * Back off using Java stack trace for Proc's to_s file+line, since it's prohibitively expensive
        * Move the Backtrace stack to being a fixed-size array of objects updated, rather than created, when a push happens
    
    commit 6f0ade5ab28946b8800431d3454d2e57fc0dbe19
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 11:36:07 2010 -0300
    
        Add generation guard around trivially-inlined logic.
    
    commit c4d8705217174580d35757dc85c5c646e980b57f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 06:18:38 2010 -0300
    
        Full speed ahead with a caching mechanism for calls from core classes. Only works for core class methods right now, but opens the door to expanding that.
    
    commit 5874abc01104f6c0f435f8ac4643ed0f77cf7cff
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 03:43:37 2010 -0300
    
        Localize some fields used in Array#include? to speed up the loop.
    
    commit 346245cd5e154574d14736cf4b9e0b4b98260d14
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 15:02:41 2010 -0300
    
        Allow passing a number of iterations to bench_quicksort.rb.
    
    commit b4687022a1f00d0b63838b1c9daf00753fcfa93e
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 11:55:15 2010 -0300
    
        Fixes to get run-junit-compiled 100% passing on backtrace branch.
    
        * Fixed a couple tests that are too sensitive to core method line numbers or expected only .rb elements in the trace
        * Added a mechanism for procs to retrieve the most recent Ruby frame, for to_s purposes
        * Added comments for hybrid backtrace logic
    
    commit 15cd9b16cb2750d0e40ba478d07fe5bf265dc620
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 08:07:57 2010 -0300
    
        Add better logging to AnnotationBinder (for showing framed/scoped core methods), ASTInspector (for showing methods detected as framed/scoped and for reporting deopt flags as they are set), and JITCompiler (for dumping jitted methods' full classes and inspector results). New property jruby.jit.dumping=(true|FALSE).
    
    commit c4e6176498590d791868055025c2e72ded1ccf13
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Sep 10 02:10:20 2010 -0400
    
        Improve dumping of generated bytecode by including class and method name when possible.
    
    commit 07fc4215f6873f449f89d4f5da7a7e2e8963bc70
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 9 23:39:20 2010 -0400
    
        Make attr accessor's var accessor field volatile, to guarantee visibility across threads.
    
    commit e3a7cf5cd4d8ccd08407955779bdd94feb5e4ac8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 13:26:48 2010 -0500
    
        Add missing "in" to caller backtrace lines.
    
    commit 7140c339f386959853f747d86cb2ea9a8afa6f2a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 12:10:50 2010 -0500
    
        Fixes to get tracing tests running in interpreted mode:
    
        * Off-by-one line numbers were off for MRI too. Fixed to correct line numbers
        * call and return for Ruby methods need to use impl class, not self class
    
    commit cbc9c4edab56807a023817d06db9c22441fa4b53
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 10:31:57 2010 -0500
    
        Fix runInterpreterBody to properly unwrap RootNode for "gets loop" execution.
    
    commit 3a09773058d8d58d5bf8f1b6fbebc494fc18f7c6
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 10:01:43 2010 -0500
    
        Make --bytecode attempt a recompile, so that dynopt and no-compile modes can still print bytecode.
    
    commit 4e48e722ba5ded10975af348738237fcb7fe9b2a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 09:23:38 2010 -0500
    
        Add a "full" backtrace style which does not omit any Java frames and interlaces the Ruby frames.
    
    commit 6f5057e3ae1e372bd66602dcc26864adc3270128
    Merge: 7006d31 811fd8d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 07:48:47 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
    
    commit 7006d3175bbf4630921dfecaa4faef2a39a77205
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 4 16:04:28 2010 -0500
    
        Bytecode size reductions for stack-based nil-initialization of locals and for x, *y and x, * forms of masgn.
    
    commit 3a8fb16f020c2b9aaa6228605bdb3d8fd1b78ccf
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 4 14:52:04 2010 -0500
    
        Do not do direct recursive invocations for heap-based scopes, since the scope is not currently being reset.
    
    commit ec00e99636667eff97a891917ae9ef37f94a6eb7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Sep 3 19:55:24 2010 -0500
    
        Turn on dynopt by default, to aid testing of new logic.
    
    commit 9508e8a6925fce4f57a386ede867b3f8f9b67d38
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 2 12:40:38 2010 -0500
    
        Fix Time test that expected two separate Time.now objects to to_s the same.
    
    commit 65ba8b37a8a232495453e71b2a560c761b40893f
    Author: Nick Sieger <nick@nicksieger.com>
    Date:   Mon Aug 30 14:50:03 2010 -0500
    
        Use new backtrace info to set a more useful Java thread name
    
    commit 75b100604af39de52b26bdb21669136234424a0b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 30 11:37:49 2010 +0900
    
        Fix ifne/ifeq bug in dynopt guard and switch DefaultMethod to not flip generations on JIT in dynopt mode.
    
    commit fe3b408629e94b7db0436152968bd6d2232f6c7c
    Merge: eea60da 85c64c6
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 29 20:33:06 2010 +0900
    
        Merge branch 'master' into backtrace
    
    commit eea60da3905c87c16fbb4e6c78fd7a07f842e4bd
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Aug 27 14:09:44 2010 +0900
    
        Modify Java Fixnum fib bench to use the long call paths where possible, to be more like what compiled Ruby does not.
    
    commit a189563d9073208292e91aff3eb1c88489bd113d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 15:07:21 2010 +0900
    
        Fixes for jitted/compiled backtrace generation
    
        * SClass in a method body needs to frame, so it has a jump target for non-local return
        * Compiled methods need to always have their ruby name in the method name, so it can be mined out appropriately
        * Synthetic calls, like to rescue bodies, need to gobble caller frames to avoid multiple entries
    
    commit 276226de611cb8d5af942148109c2a51982e7640
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 14:03:44 2010 +0900
    
        Add callNumber tracking to method handles, to properly handle return jumps.
    
    commit b94bcf119a54f52ab9be3c86bc5cc85078f20eee
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 13:16:25 2010 +0900
    
        More fixes for hybrid backtrace:
    
        * Get generated trace to be RaiseException's Java trace
        * Add Ruby exception name to the RaiseException message
        * Rewire and repair trace calls
    
        All main suite tests now pass in interpreted mode.
    
    commit dc9fcd3de0f3070507ac0a0647973d1e9f16ae4f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 14:38:47 2010 -0500
    
        Fix debug logging of exceptions being raised and patch a couple tests for new backtrace structure.
    
    commit 3acd3201d85e4da9186fa17d3a04bdc9db742e29
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 13:23:04 2010 -0500
    
        Include original source file in compiled Ruby, add missing "in" line for MRI rendering, and soften requirements in test_backtraces to allow for native elements in the backtrace.
    
    commit 728cf3983fbeffba944fe34a8b0e410cc1de041c
    Merge: 88a64de 0e9c956
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 00:18:07 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 88a64de879446be3398ba7671b5fa1f3e46ce02f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:29:21 2010 -0500
    
        Turn on "positionless" compilation, since compiled code no longer needs to update interpreter backtrace frames. Also fix nil/null backtrace rendering.
    
    commit 5712a4ce285a5b3662c8ef8def2599223a232626
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:18:17 2010 -0500
    
        Fix off-by-one line numbers from interpreter frames.
    
    commit 519f4625b9d9658f50b986b1add560903ee453de
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:10:47 2010 -0500
    
        Remove some old backtrace code no longer in use and get all "backtrace" method handles to generate with no frame at all (since Java stack is used now).
    
    commit 424d967df8a3b6ba277bdb1b530d4f7f62ecbc4a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 16:52:29 2010 -0500
    
        Get Kernel#caller working with hybrid traces, get Rubinius rendering working again (partially), separate gathering and rendering of backtraces.
    
    commit a00822740712ddd924896feccc10f015fd20d4be
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 15:32:08 2010 -0500
    
        Mine method names out of AOT and JIT compiled stacktrace elements and get JIT using the original name of the method.
    
    commit 039d184ac5f798aed21870a7552b66c5973ca0eb
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Aug 14 22:16:48 2010 -0500
    
        Simplify in-class encoding of StaticScope data.
    
    commit 876a762b8af88955bee598dfd0421805d9b47c40
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 01:41:44 2010 -0500
    
        Fixes to hybrid traces to get tests working better:
    
        * Omit Kernel#raise and the KernelJavaAddons rbRaise from traces
        * Handle getBacktrace when there's been no preparation
    
        Also modified test/testException.rb to allow internal line numbers for the "load" call, rather than MRI standard "whatever line it was called from".
    
    commit 06f1bd171d6897f651b3cebfd76551080acbfe40
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 00:39:59 2010 -0500
    
        Move backtrace management to a separate stack and implement mixed-mode backtrace generation.
    
    commit ca40e73a7c136dfdd3853f0cd62a73bf70a3a08f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Aug 21 20:56:50 2010 -0500
    
        Get all major interpreter entry-points passing through simple, known method bodies. First step toward mixed-mode backtraces.

commit e1aac35f28ac020e83c7d8967e6766fe6b2a9c97
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Sep 11 08:07:57 2010 -0300

    Add better logging to AnnotationBinder (for showing framed/scoped core methods), ASTInspector (for showing methods detected as framed/scoped and for reporting deopt flags as they are set), and JITCompiler (for dumping jitted methods' full classes and inspector results). New property jruby.jit.dumping=(true|FALSE).

commit e05b969291d44e3d42e14861e30ce189a52f1b5f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun May 2 02:09:26 2010 -0500

    Miscellaneous cleanup:
    
    * A number of findbugs items in the "threadsafe", "performance", "malcious code", and "experimental" warnings
    * Tidied up all NetBeans "yellows" in the files I touched
    * Removed now-defunct JRubyServer/Client/Service
    * Removed now-defunct ssa.rb and DAGBuilder

commit 6ac1a1759909a57f356a46bbe7e4ab196a84e9ba
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jan 18 17:21:34 2010 -0600

    Turn on 1.9 spec run for spec-short and tag/fix issues that went red since I last checked.

commit 158390c034d47c1b38691b849e09b0290f51ca83
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 30 13:56:12 2009 -0600

    Fixes to reflection binding of methods for issues found in test-all now that "reflected" mode disables generated invokers as well.

commit 25720ab186b2d0fcdeffc1744128e185bf575a6b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 11 12:12:17 2009 -0600

    Fix for JRUBY-1531: Tracing in compiler / Tracing AOT compiled code
    
    This adds tracing calls to the compiler output and compiled-method invokers whenever full tracing is enabled. This allows debugging at nearly full speed, though to support bindings DynamicScope optimizations (elimination, for example) has to be turned off. This patch modifies --debug to no longer turn off compilation nor turn on reflection, and test/tracing/test_trace_func.rb passes in all modes.

commit 3cd2e9d3d714cceab46460b33c12c41a512644fe
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Oct 13 15:37:44 2009 -0500

    JRUBY-4029: String hash keys should be copied

commit 5cb010871e68cc5760980196c8276e26f20546e0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun May 17 03:24:52 2009 -0500

    Fix for JRUBY-3638: Multi-Threading issues with JRuby 1.3RC1 and soap4r
    
    Whew! This was a doozy! The problem here was as suspected, a "dummy" scope was being shared across calls/threads and causing the backref/lastline to step on each other. This would not simply affect multi-threaded cases either; it could easily break cases where only a single thread happened to read a bad backref from a previous call, or even a single thread read its own backref from an earlier call in the stack trace.
    
    The fix is detailed largely in the bug. No test cases accompany this because a new core construct has been introduced to produce a hard failure if we ever make this mistake again. It's a very tricky thing to test since it depends on either thread-unsafety or one call reading a backref and one call writing a backref in ways that are not immediately apparent yo the compiler. So these are fairly specific and localized issues that have far-reaching effects.

commit 66b28d6e25993dac775867702563e32e7bc75b41
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 8 20:58:55 2009 -0500

    Migrate to having backref/lastline on DynamicScope again, with inspector changes to ensure the scope is available. Does not yet pass all tests.

commit efa38ca135c89dc6f53eca3f5936b50b844fe49d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Mar 10 19:59:25 2009 +0000

    Fix for JRUBY-3479: Compilation error when mixing case statement with multiple conditions and exception handler (affects Rinda)
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9390 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2281338745d5bf33578d10268512d0c625a736e4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Feb 19 03:20:06 2009 +0000

    Fix for JRUBY-2435: Aliasing eval and other "special" methods should display a warning
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9242 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e1447512f264e770bf61fbbc30aa29e0b1aa5f3b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 23 04:25:41 2009 +0000

    First round of perf improvements for rescue.
    
    * Make all errorinfo access go straight to ThreadContext, rather than via $! global variable
    * For methods with body instanceof RescueNode, compile inline without a separate synthetic method
    * Start preparing to allow ASTInspector optimizations for rescue when it's compiled inline
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8872 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 76e7f75333e04faed8a69269652f15e94bde863a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 10 00:33:09 2009 +0000

    Only emit retry-handling logic if there's a retry present.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8675 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 45b04e1b7a8ff07dee9a79bc911bd22899b3a2ef
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 6 06:51:55 2009 +0000

    --fast updates: non-zsuper super also needs frame (duh, for method name and current class) and removed frame-cropping from raw backtrace for now (since it cropped too much in some cases).
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8608 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 91799eaaaf58ee72283b41330e3941b4753ed4e7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jan 5 07:12:29 2009 +0000

    Large refactoring of CallConfiguration and compiler logic pertaining to it:
    
    * Made CallConfiguration an enum, aggregating new Framing and Scoping enums
    * Juggled all references to CallConfiguration to be appropriate for its new enum status
    * Reduced and simplified logic based on CallConfiguration in compiler
    * Added remaining permutations of framing and scoping to better support proper execution in frameless mode. With these changes MRI's test.rb runs green in "fastest" mode.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8594 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ff9baab4ad2d88d6b41bf0cd0d789463d53b9bd7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 2 04:22:19 2009 +0000

    Optz for class/sclass/method bodies, to get the usual variable optz and reduce per-entry cost due to recreating the scope.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8555 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 38539306c47caec741243f5e15be0e345757f069
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Dec 28 01:52:13 2008 +0000

    Bombs away! Eliinate nodeId field from Node and add a method to all nodes of interest to return the value instead. Probably a little slower, but we're moving away from using NodeType on critical path code and the memory savings are pretty substantial (4-8 bytes per node).
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8485 961051c9-f516-0410-bf72-c9f7e237a7b7

commit f78fbc7ed16beb8b8e3c7519ed4140df05992596
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 27 07:47:31 2008 +0000

    Fix broken GlobalAsgnNode inspection discovered during block optimizations.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8473 961051c9-f516-0410-bf72-c9f7e237a7b7

commit f370b1ce48e72cf8663317775735110098e423b0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 27 00:19:32 2008 +0000

    When possible, avoid allocating any DynamicScope at all for interpreted methods that don't have variables and don't have scope-aware contents. A good 20% speedup on bench_method_dispatch_only's dumb method. Also required some changes for inspection to support 1.9 node types.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8466 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 5bec0860cf7ab83fb9c4e948add342c1854f93f9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Dec 16 20:33:24 2008 +0000

    Large optimization to defined? for most common cases. All cases were causing deopt and going through a very large, involved block of code that required synthetic methods and exception-handling. The modified logic does not use that slow path for those simple cases, and is in many cases several times faster.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8370 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d33e3308b7284cac60d0709f129a0a96049f01b4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Dec 2 21:12:33 2008 +0000

    Fix for JRUBY-3140: Const lookup failures in precompiled specs
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8247 961051c9-f516-0410-bf72-c9f7e237a7b7

commit bf8db0bc4acaeed7900b867e821e959f254be0be
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Sat Nov 22 22:57:11 2008 +0000

    Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8099 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 4f260fb7fef2e742d2c5a9c99aafd9969eea4b7a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Sep 28 18:13:45 2008 +0000

    Synchronize some sets held in static vars, to void their corruption when runtimes are loaded concurrently.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7793 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d9f18e4b09e2789203f452c4487494fab80ce63e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Sep 18 18:40:28 2008 +0000

    Some comments for ASTInspector flags.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7713 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 5adf2ec02859812d64b23d2dc530e1736a4d7969
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Sep 14 06:27:13 2008 +0000

    Add finer-grained recognition of constants, class vars, method operations, and class/modules to ASTInspector, allowing selection between dummy scope and no scope. This returns pure scopeless, stack-based methods to their original performance.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7699 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3fc75aa4e0fb355b8781f073479fd053dd581599
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Sep 14 05:06:11 2008 +0000

    Eliminate constant and class var dependency on heap-based scopes.
    
    This implementation degrades performance slightly for normal stack-based methods (fib goes from 0.33 to 0.37) but in exchange it allows methods with constant or class var access to also be stack-based. It is also a stepping stone; with this code working, it's now easier to return stack-based bodies to using no scope at all and having no pre/post logic.
    
    Also included in this patch is a change to evalScriptlet that forces each call to execute in its own scope. I've always been suspicious of evalScriptlet, and now I know why: it was adding variables to whatever scope happened to be on the top of the stack. Even worse, if variables were already there, it would reuse and potentially overwrite them. This behavior simply cannot be allowed, and my forcing stack-based scopes to use NoVarsDynamicScope exposed it. evalScriptlet must execute each call in a separate scope, and we should consider adding a new version taht can take an existing scope.
    
    Note also that TestVariableCreation, which depended on evalScriptlet's broken behavior, has been removed.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7698 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d531d8f51c4958f6313ebfdd4cd35d4bb28cdfbe
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Sep 6 20:07:55 2008 +0000

    Improvements to move closer to frameless execution.
    * Modify ASTInspector to have a more find-grained understanding of what frame bits are used.
    * Hook dynamic invocation via InvocationCompiler.invokeDynamic into caller-passing CallSite methods.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7646 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 23e25ad6dd9affbe5e205963197048898692abd3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jul 23 08:26:55 2008 +0000

    Found a gross perf regression in the inspector where any method with any local variable assignment was using heap-based vars. Removed that case and some fall-throughs that caused it, but I realize we need better perf regression testing (and probably unit testing for each type of node's compilation output).
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7269 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 99f2e2e2b0b714ffe92a522dff90d45fed7744ce
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jun 20 12:41:20 2008 +0000

    Add a few more indicators to ASTInspector for frame-aware methods.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6997 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 15aa3b515882d0f8a7234a7167605dfae2e8a473
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun May 25 05:46:53 2008 +0000

    Rework __NOFRAME__ pragma to be a local var, so it's ignored during normal execution.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6784 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3524bdc88d16ab76fd6b5f22756f2bf1512e62dd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat May 17 08:44:17 2008 +0000

    Add an experimental __NOFRAME__ pragma the compiler can recognize. Very preliminary, experimental stuff.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6728 961051c9-f516-0410-bf72-c9f7e237a7b7

commit f9a6002635566f44f7cf3e342f3977ffc588d13f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue May 6 04:29:15 2008 +0000

    Adding missing changes...praying git-svn doesn't die halfway through committing again.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6629 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 023c113b85a0d1bac5ba42803314b71d4a330b6c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue May 6 04:14:33 2008 +0000

    Add lighter-weight while loops to inspection/compilation process.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6626 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1e55db1890eaabb459874082d9fef79abde27411
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 28 14:25:03 2008 +0000

    Enable all variable-assignment optimizations by forcing while loops into their own synthetic methods. This results in them forcing heap-based scopes on their host code bodies, but iteratively making loop compilation smarter can eliminate that. It fixes all known issues with loop compilation; now we will work back to make them efficient again.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6587 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 87342fb6efdba5c9a2edfb3bf0a5593ce923cc6f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Mar 9 01:57:59 2008 +0000

    Fix for JRUBY-2246, chained methods require heap-based scopes.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6159 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2ed902e791de056788520913985482b5ae3c559c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Feb 20 18:39:23 2008 +0000

    Fix for JRUBY-2130, treate instance_eval as a keyword.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5979 961051c9-f516-0410-bf72-c9f7e237a7b7

commit a78db1a702e5cbf7125c0311a9cbecf7289b0dc1
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Dec 21 13:54:19 2007 +0000

    Fix for JRUBY-1641 from Vladimir; safely check privileged system properties, since blowing up there kills JRuby.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5324 961051c9-f516-0410-bf72-c9f7e237a7b7

commit b12c787469117caadc1cc6b7e6723db43b6a8bdb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Nov 22 04:02:28 2007 +0000

    Added a "boxed" variable compiler that uses Java locals for variables that are not captured. Enable with jruby.compile.boxed=true. Note: this is incompatible with Ruby 1.8's ability to use a proc as a binding, since it makes it impossible to detect whether a variable is captured or not. Ruby 1.9 currently does not support that feature.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4984 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 8bd612daf5a55edfc2a440021dbdec437c73ceea
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Nov 11 01:41:22 2007 +0000

    Make binding of core class methods also update ASTInspector's list of "frame aware" methods.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4911 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 0e064d01a9459c50c40771caccab40c55623c009
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Fri Sep 28 17:15:44 2007 +0000

    OPTNNODE no more...no more (for 1.1 only)
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4419 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e3aaa0320e27c50bcba7f1de031b8db43c54f00e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Sep 28 04:07:56 2007 +0000

    Ok, now the compiler is REALLY complete. I forgot about BEGIN and END nodes. The only remaining node that doesn't compile is OptN, which
    we won't put in the compiled output (we'll just wrap execution of scripts with the appropriate logic). It's a good day to be alive!
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4414 961051c9-f516-0410-bf72-c9f7e237a7b7

commit fc09ed420d298b216a7b7ef44d0d59da5b7d67a3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Sep 26 11:02:17 2007 +0000

    Multiple additional cleanups, fixes, to the compiler; expand stack-based methods to include those with opt/rest/block args, fix a problem with redo/next in ensure/rescue; fix an issue in the ASTInspector not inspecting opt arg values; shrink the generated bytecode by offloading to CompilerHelpers in a few places. Ruby stdlib now compiles completely. Yay!
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4402 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 0912e624cfb5924d0d3a456c03f82653343bbec2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Sep 5 04:21:02 2007 +0000

    Filling out remaining cases in ASTInspector, to allow all appropriate methods to compile using stack-based local variables.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4274 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e21c4f83e2001b05318ba5569518a210c6a1ba06
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Aug 31 17:43:14 2007 +0000

    Flip nodes are now compiling. And there was much rejoicing. I also have preliminary code for zsuper, which appears to work, but compiled methods aren't super'ing right (current method gets re-called). Disabled for now.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4253 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e4cdc84fd821ea3f5867fc82919f2feb15bb9ce4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Aug 31 01:26:59 2007 +0000

    Fix for backref not getting set appropriately into block frames.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4247 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 47f0d75fbf8f6519ed3527d077e724f0b9264552
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Wed Aug 29 21:20:40 2007 +0000

    NodeTypes now and enum called NodeType
    Various warning removal
    Minor Block refactoring
    More boilerplate fixing
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4233 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2343ecfe8bf3a6b2c7679bf9918f262397b5baf0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Aug 7 15:55:07 2007 +0000

    Turning on AST inspector in trunk, since it appears it's working 100% safe now and gives huge perf gains when stack-based variables are possible.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4114 961051c9-f516-0410-bf72-c9f7e237a7b7

commit fc17861832a4f30aecf7840dc1dcee181618f93f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Aug 7 03:10:35 2007 +0000

    Move backref and lastline into Frame, since there's only ever one copy of them in a given frame. This also will make it possible to turn on stack-based variable AST inspection very soon.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4107 961051c9-f516-0410-bf72-c9f7e237a7b7

commit b6fe0b0b28ec3a5687b529d82c13a6c0f3941e98
Author: Ola Bini <ola.bini@gmail.com>
Date:   Mon Aug 6 13:42:17 2007 +0000

    Add compiler for EnsureNode
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4100 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 467203184231690049487a61a4347ee21bab94d7
Author: Ola Bini <ola.bini@gmail.com>
Date:   Wed Aug 1 21:30:41 2007 +0000

    Add compiler for OpAsgnAndNode, and an almost working DefinedNode compiler. It's disabled for now, though, since the rescue and protected methods is kinda hard to implement
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4075 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e72067a0f8a31b163332dcb59d729a85834340ad
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 27 06:52:01 2007 +0000

    Adding a property to enable the AST inspector
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4064 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 5a1c9da76e2fd4df0b8ee98f52a0b4d154c356d9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jul 15 22:32:13 2007 +0000

    Fixing a couple license blocks in new code.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4029 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3e523da13ab23471cc87dc90ef6a8b1e97ef7a26
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jul 14 21:31:24 2007 +0000

    More work on stack-based locals, now passing all tests but gem has some problem in mixed mode. Still disabled by default.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4024 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6d3d9b8f4040f0d23a3256c3d3525c3a849982ac
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jul 14 11:10:00 2007 +0000

    Fully-encapsulated args-compilation logic now; also included the bulk of the work to inspect AST and determine ahead of time whether to use heap or stack-based scoping of variables, but it's disabled at the moment due to methods like String#gsub that manipulate $~ or IO methods that manipulate $_.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4021 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 9b81e344cce9846b7aef38ca3f461f34f46f4d54
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jul 14 03:54:58 2007 +0000

    Creating the concept of a CallConfiguration, which knows how to frame and scope a call. This will be used to alter the way an existing method frames and scopes in response to static or dynamic code profiling.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4015 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 0bd1aabc1e5169a98ebe86e9bebf312eb6225fb7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 13 23:28:54 2007 +0000

    Adding a simple AST inspector that gathers information about an AST subtree
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4014 961051c9-f516-0410-bf72-c9f7e237a7b7
