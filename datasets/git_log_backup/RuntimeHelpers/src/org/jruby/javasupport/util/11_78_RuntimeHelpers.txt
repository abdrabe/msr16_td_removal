commit bb98e4b8decffc0361b70a6c99c1ade5fed0abcb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Mar 28 10:02:33 2013 +0000

    Move RuntimeHelpers to org.jruby.runtime.Helpers.

commit 68a527abdc5db15918348f5b98b07da3d31db19a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Mar 23 15:32:46 2013 -0500

    Avoid 1.9 block args processing if no args and no arity check.

commit 5495ff31984997a19c718c1858c91f9def1ec23e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Mar 16 15:53:18 2013 -0500

    Fix MH-invoker super by passing bind name through to factory.

commit 8961e2a0c7492e023277fb3b4b90581d720874c4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Mar 13 18:10:31 2013 -0500

    Implement Method#parameters for native methods.
    
    In MRI, native methods will only present a list of :req for fixed-
    arity methods or a single :rest for variable-arity methods. I have
    duplicated this in JRuby, though I'd prefer to present the more
    correct layout of required and optional args. I have filed a bug
    with MRI to improve #parameters in this way:
    
    https://bugs.ruby-lang.org/issues/8088
    
    Fixes #583.

commit 66772d0e925ce08cd38010f2467a08b43f9ef218
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Mar 8 22:00:50 2013 -0600

    [2.0] Fixes and additions for Ruby 2.0 Enumera[ble,tor].
    
    * Move to Kernel, Enumerable their methods defined in Enumerator.
    * Reduce some duplication of logic in Enumerator.
    * Add Enumerable#chunk.
    * Add a mostly complete implementation of Enumerator::Lazy.
    * Multiple minor fixes throughout Enumera* to support 2.0 logic.

commit 98071d9b431fc0904011eadd8bb6e102ea9d3514
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Dec 20 00:54:17 2012 -0600

    Actually implement >3 arg caseless when logic properly.

commit 1dd7b4bf3cb80786182a81565353cbb4d20b2671
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Dec 20 00:36:21 2012 -0600

    Add somehow-missing eqq helper for compiled caseless case/when.

commit 40d9dabb8d90ef64c2b695e463e17a5b2832443c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 12 18:33:22 2012 -0600

    Properly set up the toplevel scope under new logic. Fixes #440.
    
    The toplevel scope for a precompiled script was getting set up
    with the toplevel scope for the runtime as parent, rather than
    no parent. This caused constant lookup to search Object too soon,
    at the top of the lexical search. This in turn led to constants
    in the hierarchy with names the same as constants in Object to be
    inaccessible.

commit d7ed0f8b7168ced101773ac494fb0453854f649e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 16:52:04 2012 -0600

    Tweak cvar logic in compiler to use cached scope.

commit 3d12d1c5eddc16329633feb8fa569223b34768b8
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 16:38:33 2012 -0600

    Final modifications to get scopes loading from cache.
    
    * For initial Script execution via __file__, must setRootScope
    * Script.load impl will setRootScope
    * All other method forms will receive scope index from parent compiler

commit 12302a420c0165e41095e6d8367d316c69bc9c4c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 13:42:19 2012 -0600

    Pass parent StaticScope into creation.
    
    This allows us to provide the parent scope without having it
    pushed on ThreadContext.

commit 55c3b8f755c0d49612932d438f92ed6f21b82254
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 13:16:55 2012 -0600

    Modify scope and block creation to decouple them.
    
    * Single method decodeScope for decoding all types of scopes
    * New StaticScope::Type enum to indicate type of scope
    * Closure creation receives StaticScope rather than instantiating

commit 4cf08e3211097bb2ee3de97f0521762dace11bdf
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 12:15:56 2012 -0600

    Decouple compiler and class/module const assignment from TC.
    
    * Compiled setConstant calls work against StaticScope
    * Getting the namespace in which to define class/module uses StaticScope

commit efd8a3df54daa1e5b6853d07db52fd6ac23a767b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 10:54:09 2012 -0600

    More decoupling of constant lookup from ThreadContext.
    
    * setConstantInCurrent moved to StaticScope
    * setConstantInModule moved to RuntimeHelpers
    * setConstantInObject moved to RuntimeHelpers
    * getConstantDefined moved to StaticScope#isConstantDefined
    * A few more ThreadContext#getConstant calls eliminated

commit d1898406206175543afaa19c08637d539abd7a51
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 28 09:37:40 2012 -0600

    Remove unused/rarely used params to const lookup, use StaticScope.
    
    In an effort to eliminate the deopt caused by const access from
    Ruby code, I'm working toward making all constant access work
    against StaticScope rather than against ThreadContext and the
    current DynamicScope (which forces us to push dummy scopes where
    we don't really need any). This commit starts pulling out calls to
    ThreadContext.getConstant, which requires a DynamicScope to be
    present, and also removes some unused or rarely-used arguments
    from the const lookup call chain to simplify the transition.

commit f1c74ee21ed5095c9e757c3fced12a7a576c0eb0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Nov 27 21:47:08 2012 -0600

    Hash equality should use rb_eq[ua]l equivalent to short-circuit.
    
    Fixes seattlerb/minitest#191.

commit 6b13c46b6880b7a7b1f4b71102c0620eeb542d73
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 7 20:19:07 2012 -0600

    Fix JRUBY-6978
    
    Allow Java exceptions to be rescued by StandardError as well.
    
    Java exceptions do not fit into the Ruby exception hierarchy, so
    we have to special-case logic to handle them. You can rescue a
    Java exception using any of the following:
    
    rescue Object # rescues all Ruby and Java exceptions
    rescue Exception # rescues all Ruby and Java exceptions
    rescue StandardError # rescues StandardError and Java exceptions
    rescue NativeException # rescues and wraps Java exceptions
    rescue <actual Java type> # rescues that type of Java exception
    
    Java exceptions should duck-type as Ruby exceptions, but users
    must keep in mind that Java exceptions will not always be the
    exact type they are rescuing.

commit cc1286514c7d165cdc4063e4cac1a8427863d9c3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Nov 2 16:55:01 2012 -0600

    Set up small literal hashes and hash args using a single bucket.
    
    For many small literal hashes, especially those used for calling
    methods with hash args, allocating the default layout for a Ruby
    Hash is terribly wasteful. The default setup uses a bucket count
    of 11, which for a hash smaller than 11 wastes that many entries.
    Since many literal hashes and hash args are as small as one or two
    or three elements, I have modified literal hash creation to force
    a single bucket with no rehashing. This reduces memory allocation
    of a simple single hash-arg call from 6.4MB to 2.4MB and improves
    speed about 10-15%. There are additional improvements possible,
    such as not rechecking the bucket count for hashing the incoming
    keys.

commit 47a88ba5a70aa90d1c139fdaa2394df36806552d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 30 21:25:24 2012 -0500

    Fix #366
    
    DNode logic was always calling the 1.9 version of String#append
    even in 1.8 mode. For badly-encoded or mixed-encoding text, this
    could cause a failure due to 1.9's more-strict encoding checks. I
    modified the logic to call the version-specific append function
    and added the same type-specific logic in that append.

commit c6013c59228b377aa9f8fb0626340fa7831af667
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Oct 17 10:59:42 2012 -0500

    Move Java-sourced dynamic call logic to MethodNames enum.

commit da2a9dd478ff62ada58737ab48e5c6b4ded5de26
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Sep 18 03:43:12 2012 -0500

    Additional fix to go with #276 and its fix #293.
    
    * Compiler needed the same logic.
    * Invalid block needs to be checked or arity().getValue will NPE.

commit 85143bab661c4a8d785063b342d570e1cf90f907
Merge: efe3f08 a2c6561
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Sep 18 02:57:40 2012 -0500

    Merge remote-tracking branch 'tycho/yield_splat'

commit efe3f08ee65a2e85c239ecdece74b9a54002bb1b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 17 22:02:38 2012 -0500

    Simplify constant and ivar defined? logic in the compiler.

commit f7726833a3f025f19a4b02c5aee1ce070b8acd1b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 17 18:11:22 2012 -0500

    Eliminate most transient strings in compiled D*Nodes.
    
    * Static portions are cached bytelist, direct append.
    * EvStr with Fixnum/Float/Symbol body append object directly.
    * Remaining cases coerce to String as before.

commit b03d0bc89aefca13deaff7a568e5d9118a9ca2a8
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 17 01:42:22 2012 -0700

    Performance improvements for defined? logic.
    
    * Return a cached, frozen string rather than recreating each time.
    * Cache variable accessors for ivar defined? checks.

commit a2c656195f33fed39d79299fa0d2d7f7bbd724cb
Author: Sebastien Le Callonnec <sebastien@weblogism.com>
Date:   Sun Sep 9 14:23:18 2012 +0100

    Fix for issue #276
    
    This commit fixes issue #276 which is a regression introduced by
    http://jira.codehaus.org/browse/JRUBY-6729.  The bug was caused by a erroneous
    behavour when yielding splat for a block of arity of one: MRI doesn't unsplat
    the passed value, whilst jruby was.
    
    See GH-276_yield_splat_behaviour_causes_pp_to_break.rb for details on behaviour

commit b8181cda909f6e42d7c0b7fffaabbe2a502f273b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 27 02:19:54 2012 -0500

    Inline all calls to ThreadContext.getRuntime to access the field.

commit 47fd4acb720385b7d7852e1876e28520aa0cf484
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 27 01:55:07 2012 -0500

    Remove all safelevel checks throughout JRuby (plus misc cleanup).

commit 846be19993cc1f76d0bf0d1c9ec4ed8ad0772793
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jul 24 16:56:16 2012 -0500

    Fix JRUBY-6766
    
    --profile slows down Array#join , which distorts profiling results
    
    This turned out to be a really good find.
    
    In order to avoid the cost of dispatching to methods like
    respond_to? and method_missing for value coercion, we pre-cache
    those methods in org.jruby.Ruby and use identity checks to
    shortcut faster, non-dynamic logic. This works well during normal
    execution, but under profiling all method objects are wrapped
    with ProfilingDynamicMethod objects that do the profile gathering.
    Because the identity of the original method then becomes obscured
    by the wrapper (which is created on a per-class basis) we always
    followed the slow path. The slow path in the case of
    method_missing raises an exception, and the exception backtraces
    were the source of profiling slowdown.
    
    I modified DelegatingDynamicMethod, the superclass of
    ProfilingDynamicMethod, to override equals() to consider only the
    wrapped method and fixed all related == comparisons to use
    equals(), ensuring that regardless of which wrapper was
    encountered the identity of the method would not be obscured. This
    returned profiled performance for e.g. Array#join to normal
    levels.
    
    I should note that this fix improves profiling performance for all
    coercion paths and methods that do coercion, so it has far-
    reaching implications.
    
    Thanks for reporting this :)

commit 799757739f642ca900da8be734bb393de0422301
Author: Yoko Harada <yokolet@gmail.com>
Date:   Tue Jun 26 18:05:27 2012 +0900

    Fix for JRUBY-6728. This fixes Nokogiri's 1.9 test error of PrettyPrint as well as https://github.com/sparklemotion/nokogiri/issues/657.
    
    The change didn't break test:mri19. However, oddly, test_condvar_wait_exception_handling of test/externals/ruby1.9/ruby/test_thread.rb has become failing often  on my macbook. But, not always. This change might have revealed threadding issue?

commit 786db177a439efb10b173df7bbd1939e61446d71
Author: Ben Browning <bbrownin@redhat.com>
Date:   Thu May 3 18:17:23 2012 -0400

    Check if all throwables are Java exceptions in interpreted mode (JRUBY-6641)
    
    This fixes a simple typo in the RuntimeHelpers.isJavaExceptionHandled logic.

commit 52554518ec97847ac41eec4b06575c12d9301ffb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Apr 28 12:35:13 2012 -0500

    IR2JVM: Class definition and processing.

commit 719b7420de03a60776ce09060ed4087e54f68a0c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Apr 28 12:19:16 2012 -0500

    IR2JVM: Module definition and processing.

commit ab2fd7543f92cdf59dce27e9af5dec8987e5bcc9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Apr 26 21:07:12 2012 -0500

    IR2JVM: implement and fix bits needed for "complex" fib bench.

commit 22749e0116e1a8b58c660fb0169b3c65e343535f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 25 23:18:59 2012 -0500

    IR2JVM: implement colon2 and colon3 logic.
    
    * private consts TODO
    * BEQ and BNE done
    * ConstMissingInstr < CallInstr now

commit e54cd59c00c17dd3d1d1b85b83b1dbdf90993cfe
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Apr 12 15:32:13 2012 -0500

    Missing compiler logic for native Java exception propagation.
    
    * If rescuing "NativeException" and it's a Java exception, lazily wrap it
    * FIXME: Currently using the static rescue constant name, rather than runtime value

commit 33919667a45607aa3e7a23765e396d2dd940d643
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 9 10:40:30 2012 -0500

    Propagate Java exceptions without wrapping in NativeException.
    
    Fix for JRUBY-6149 and others.
    
    Previous versions of JRuby wrapped Java exceptions raised from
    calling Java methods inside NativeException. This provided a way
    to rescue them, but also caused them to remain wrapped when they
    eventually leave Ruby-space. This in turn prevented some libraries
    that depend on the *original* exception propagating from working
    correctly, like Clojure wanting IllegalStateException to know an
    STM commit should be run again.
    
    This change removes NativeException from propagating, and instead
    actually propagates the original Java exception in JI-wrapped
    form. Rescue NativeException still works, but it rescues the real
    Java exception instead of a NativeException instance. This may
    need to be modified to wrap in NativeException.

commit 80f6601208ccf9b71a0c39bd8b3cfcaaf63baaa7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Apr 7 15:56:09 2012 -0500

    Implement AliasInstr IR2JVM.

commit 0723b7d750b01ba0b7f69f71040b8f4cca7a7abf
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 2 08:52:14 2012 -0500

    Fix JRUBY-5863: Named captures cause crash when there is no match
    
    Compiler calls match2AndUpdateScope[19], which did not pass through
    the match result and instead fell back to logic that used the
    scope's match and assumed it was non-nill.

commit 27749e9830ea2ce3c1f531c34043f6d12a9b7c2b
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Feb 14 13:45:53 2012 -0600

    JRUBY-6404: multiple assignment fails to deconstruct object

commit 52de903ab03819114730e6c58d58f7ca0d2d2f95
Author: Marcin Mielzynski <lopx@gazeta.pl>
Date:   Fri Feb 10 00:17:40 2012 +0100

    Remove code duplication and supply correct 1.9 message

commit ccfcb7c2f961ff5cbbe7000fa14768a3e0e95629
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 24 20:14:37 2012 -0600

    More IR-to-JVM.
    
    * Move operand logic into Operand#compile impls.
    * Implement string literal basics
    * Implement branching on true, false, and nil
    * Implement thread polling

commit c3354867f37bacea742831a05283dab066c7e979
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 24 13:05:32 2012 -0600

    Compiler fix for JRUBY-6377 and refactoring.
    
    I moved the shared logic to RuntimeHelpers and made the invariant
    "needsSplat" a field on both block types calculated on construct.

commit 03ba524de4139a29ebad75005293814cceeffedd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 19 21:33:30 2012 -0600

    Fix multiple places that called 1.8 instead of 1.9 regexp methods.
    
    Many places in the codebase unconditionally called the 1.8 versions
    of several RubyRegexp methods that have 1.9-specific behavior. This
    led to hangs like JRUBY-5808, and very likely is the source of
    other encoding-related bugs.
    
    I audited only RubyRegexp methods that have 1.9-specific versions
    and fixed all incorrect calls. Tests and specs pass in interpreted
    and compiled modes. A similar audit for other core classes is most
    definitely warranted.

commit 656301d0cf410c2441fdc2c265bf2f571c2b8646
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 28 17:51:40 2011 -0600

    Implement most of private_constant.
    
    Notable missing items:
    
    * class Foo::Bar should fail if Bar is private
    * class ::Bar should fail if Bar is private
    * module Foo::Bar should fail if Bar is private
    * module ::Bar should fail if Bar is private

commit d377de5e3856dfb7c1939f3b69714b1295627c73
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Fri Dec 23 13:21:58 2011 -0600

    Allow proper 1.9 splatting for interpreter (JIT to come)

commit 32c559b56306411e8c41d6e87304e9478ff59710
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Nov 29 01:30:16 2011 -0600

    Add support for get/set of ivars via invokedynamic. Works, but disabled for now.

commit f592cbbfae1186c42fb9e0545e2d9c394e73312f
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Mon Oct 10 16:42:24 2011 -0500

    Use factory for standing up static scopes

commit 4807459e7a2458de246cb41104075c10c5d0fafb
Author: Subramanya Sastry <sss.lists@gmail.com>
Date:   Mon Sep 26 13:54:42 2011 -0500

    * Added allocation methods to StaticScope to allocate the appropriate
      static scopes and protected LocalStaticScope, BlockStaticScope and
      EvalStaticScope constructors.  This will now let us allocate
      IR-specific static scopes that IR execution requires.
    * Also added isBlockScope test on StaticScope to eliminate instanceof
      tests against BlockStaticScope and LocalStaticScope.
    * Hand-patched auto-generated files Ruby19Parser.java and
      DynamicScope.java.

commit a9c26f04e463d42b370beb9fb89846af663d1a7e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 5 12:00:58 2011 -0500

    Minor perf improvement and bytecode reduction for interpolated strings.

commit 85c2817d5364b765692b863d36fa3809f023405d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Aug 20 15:11:20 2011 -0500

    Modify method definition to cache static scope, in prep for cheaper constant-using methods.

commit 2c45f4f7e75cac2258951342a5df67cd516537f4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Aug 10 18:30:33 2011 -0500

    Use switchpoints for class mutation invalidation. Disabled by default, since switchpoints are slow in OpenJDK 7 GA.

commit f31ddd479011c67f14efaad9733bc16a24b877d4
Merge: eef82e7 72ce56a
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Thu Jul 28 13:02:53 2011 +0900

    Merge branch 'master' into autoload-threadsafe

commit 193b1e5b066dcb1573eacdb2a476c7829a5ae7b5
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jul 12 02:25:16 2011 -0500

    Fix JRUBY-4925: Evaluation of constant happens before rhs of assignment (different to mri)
    
    * Compiler simply needed to evaluate the value first, like the interpreter.

commit 6f159fe5dd51c062a5b1aab64a8ede916990877a
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Mon Jul 11 03:36:17 2011 +0900

    Deprecation of fast constant access paths.
    
    Each os those has the same definition as non-fast verision.

commit 5f39de83bf0b603c7d37199b9bbd2b6723e458a1
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Mon Jul 11 01:43:17 2011 +0900

    Deprecation of fast class var access paths.
    
    Each of those has the same definition as non fast versions.

commit 36dd3a0424ec9789a402a60d6262fff7c7a59c75
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jul 10 01:45:11 2011 -0500

    Fix JRUBY-4339: Kernel.load with wrap=true does not protect the global namespace of calling program
    
    * We were not wrapping the script's scope with an anonymous module.

commit 77cba98fb4fb7d5e5d52ad8a1491ee11315b0ed3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jun 17 00:58:53 2011 -0500

    Improve compiled literal array construction.
    
    * For non-expression, all-literal arrays...do nothing.
    * For arrays larger than 10 elements, batch array population in groups of ten to reduce overall bytecode size.

commit b0de876f1029e630d8e81c5f6abd376bd7720795
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 16 13:17:45 2011 -0500

    Reinstate 1.9 logic in compiler for splatting nil.

commit 3be905f38b26668ad53fc197784629aa338fefee
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 16 10:58:28 2011 -0500

    Improve performance of "argscat" call form (as in foo(1, *a))

commit 9d263047d5daa68f6c8bd886fec4863e05af6e4f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 16 05:57:07 2011 -0500

    Improve perf of compiled simple argument splats of non-arrays.

commit 890fd568381f6dbf03a7a1652603f35ae0df79b0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 16 04:59:41 2011 -0500

    Expand array-building utility methods to arity 10.

commit 06c26424d5fa7c5b512dfe944a8ab5fb78daf893
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jun 15 01:17:13 2011 -0500

    Improvements for attribute assignment.
    
    * Disable visibility check only when receiver can be statically determined to be "self"
    * Don't save last argument when not used as an expression (non-invokedynamic)
    * Don't fold last argument when not used as an expression (invokedynamic)
    * Simplify call site logic and reduce bytecode load

commit 7588393ca5bfeba6182b87b8b47669ecab2fe403
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 9 10:02:23 2011 -0500

    Fix compilation issues under OpenJDK 7 after b142 with primitive + varargs now resolving as ambiguous.

commit d6fa35f02dd7bd81e5102f01d11e3a4ed0e47efe
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed May 18 13:40:15 2011 -0500

    Hack around ASM bug generating bad stack maps near dead code by switching return jump to call rather than call + athrow.

commit 1d06ff5a2fe82955a0e80928ddafb7f9985a7d72
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon May 16 00:26:48 2011 -0500

    Improve perf of defined? by avoiding the constant encoding of Java String + ByteList construction + Ruby String.

commit 5a1892972b7a06a5b5e5a3b828e77bf3f21ed4f9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Apr 21 08:59:31 2011 -0500

    Cleanup and reduce bytecode for loading some common literal and runtime values.

commit dd0ede8696d8b684baacb15f5904279aff6debec
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Apr 2 12:20:27 2011 -0500

    Replace most slow core-to-core calls to ==, hash, and <=> with lighter-weight global cache hits.

commit a0bd87b7075ddae1c2c727e907dfeb5ed6822731
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Mar 25 22:38:43 2011 -0500

    Fix JRUBY-5632: [19] Incompatible behaviour of splat operator (*) with objects that implement #to_a (w.r.t. MRI)

commit 92265ccc3813ba92e0383b2150553afc9b13cb46
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 7 00:40:02 2011 -0600

    [1.9] Get remaining defined? specs passing in compiler.

commit 70fe94906556a15f3bae11f396c4b7dbe3d073d6
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Jan 18 11:00:35 2011 -0600

    JRUBY-5368: [1.9] Star and unnamed restarg treated differently in 1.9 mode Proc#parameters

commit 02cb497e8f8696c93925be754acfe89d933eafa6
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jan 16 23:04:05 2011 -0600

    Disallow aliasing methods inside an instance of Fixnum or Symbol.

commit d31c4438e250c5b234165707c282c16a49e03c43
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jan 16 17:09:21 2011 -0600

    [1.9] Introduce logic for unnamed rest arg into Proc#parameters (JRUBY-5368)

commit 295e15e751aa64dd8ae6dfcc45c8c46bd5034e2e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 17:10:04 2011 -0600

    [1.9] Fix remaining language/method_spec failures in compiler.

commit 193c722ab9f3477f31398314de8446f1f8a967a2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 16:19:35 2011 -0600

    [1.9] Fix remaining language/method_spec failures in interpreter.

commit 9a3f0b0bd10e201825ca6bd36d85b9c5bcf82b42
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 14:52:26 2011 -0600

    Fix breakage when processing arguments in 1.8 mode, which has a different AST for opt args.

commit 2418c0c8028b78a272ba654e3b8860407504ae78
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 03:19:49 2011 -0600

    [1.9] Wire up Method#parameters for AOT compiled methods.

commit 92f10a22aa94e4a7ca02d6aaf7b8054ccff18f11
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 8 01:54:05 2011 -0600

    [1.9] Implement Proc#parameter for compile blocks.

commit 6fb76a48b600541a2be2b1ab75ad4313815b0bd9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 7 13:14:39 2011 -0600

    [1.9] Fix ArgsPush in compiler.
    
    * "first" target array needs to dup().

commit 0277975f68020463a6311f7310b33768361fbce4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 7 06:19:09 2011 -0600

    [1.9] Implement "match with named captures" in compiler.

commit 0b49ea917c7a375a10f3ec0590985e402d04580a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 5 17:44:40 2011 -0600

    Implement remaining 1.9 method args logic, add tests for it, and fix masgn19 test.

commit 7c75d2a007af8fdbe71749f2673f6a809ba0dcc0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 5 13:48:28 2011 -0600

    Fix and add test case for 1.9 masgn logic (e.g. "post" args).

commit 042f381d860fdd0261222d924c9b37c246634918
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 4 18:14:11 2011 -0600

    Preserve original bytes in literal strings and regexp, in preparation for non-Unicode encodings.

commit 095a36a4798e627dd7004c46aedafe71716edd41
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Mon Jan 3 23:59:17 2011 +0900

    JRUBY-5004: remove unused imports
    
    This commit is based on the patch from Douglas Campos <qmx@qmx.me>.

commit 20e70cd4d438b440c9afee97c01caf5e42e588f2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Dec 16 23:39:23 2010 -0600

    Move block descriptor building and parsing out of RuntimeCache.

commit 43cf066ae2366e316366db36bcec4a17f55255bc
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Dec 6 05:21:08 2010 -0600

    [1.9] First pass at implementing Psych, using 1.9 .rb files (added to our repo), and SnakeYAML.

commit ab76e5d4261e80fcccd63bee388df14e48bb75d3
Author: Douglas Campos <qmx@qmx.me>
Date:   Tue Nov 30 13:39:48 2010 -0200

    normalizing args number error message
    
    Signed-off-by: Douglas Campos <qmx@qmx.me>
    Signed-off-by: Hiroshi Nakamura <nahi@ruby-lang.org>

commit fd0fa789b21b30f294e8286b72b75fe3b688c27a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 1 12:07:42 2010 -0600

    Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
    
    This is a squashed merge encompassing the following commits from "backtrace":
    
    commit eb0e24242050199ac1cc4cf6e48d93025f0186f4
    Merge: 32137de ea48d8d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 12:03:28 2010 -0600
    
        Merge remote branch 'origin/master' into backtrace
    
    commit 32137decc9351dd7b6a19c49c7955808f535bb9c
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 09:41:29 2010 -0600
    
        Fix remaining failures for test-all.
    
        * Disable CheckClassAdapter temporarily, since it disallows what should be valid JVM identifiers.
        * Use the presence of $RUBY$ in method name as an additional indicator that we're processing a compiled Ruby body during backtrace gathering.
        * Move some largely-static properties out of "init" target in build.xml, so they're available whether init is triggered or not (e.g. run.jvm.model).
    
    commit ee2a624201d5e9cd408d6ae793160aeb99b50b3d
    Merge: cd50ae5 88ad204
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 08:01:22 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit cd50ae5f06b95a2fffab6bc1f3a7419f478d0a52
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 19:15:07 2010 -0600
    
        Get remaining spec failure with -X+C passing.
    
        * Embed the actual Ruby method name into the Java method for block bodies, rather than __block__.
    
    commit 52bbfffcae1aed62bf4afcb692bed9725e4e1564
    Merge: 4ed7235 1aace5e
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 01:37:15 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit 4ed723579101fffd8bfa73b30dc6e4e8991866f2
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 01:31:44 2010 -0600
    
        Precompiled (AOT) specs *nearly* green.
    
        * Mark __method__ as reading frame "name"
        * Fix AOT-based stack trace mining logic
    
    commit 64e20aa939b5b9c6e41e0e9fe09039a0bb92794a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Nov 29 16:50:55 2010 -0600
    
        Jitted specs running green.
    
        * eval needs to set method name into the binding, so it's there for "__method__" in the eval'ed code.
    
    commit fd442c0a815bcab9eb6c9aa1b71e1f8a260ee03b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Nov 29 16:06:53 2010 -0600
    
        Interpreted specs green on backtrace.
    
        * Tagged some __method__ specs for which backtrace behaves like 1.9, which Matz apparently likes but was afraid to backport. Odd cases anyway.
        * Fixed method name for the block used to define_method.
    
    commit cedb27e430b422c1158f66b4dcc7769922433506
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 24 18:35:22 2010 -0600
    
        Reinstate deprecated java_to_ruby and ruby_to_java I removed, since it's still needed by some external libs.
    
    commit b48b17910de662b4e2d20ee8f4b5cc734eefc1ed
    Merge: f39007e 2ae4995
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 24 13:40:58 2010 -0600
    
        Merge remote branch 'origin/master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/RubySymbol.java
        	src/org/jruby/runtime/CompiledBlock19.java
        	src/org/jruby/runtime/Interpreted19Block.java
        	src/org/jruby/runtime/InterpretedBlock.java
        	src/org/jruby/runtime/MethodBlock.java
    
    commit f39007eca676c1e6ec9f891ac63b7c5d907b0d1b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Nov 18 14:01:29 2010 -0600
    
        Start normalizing the method/class names generated into Java by JIT and AOT compiler, to wrap up the remaining spec failures.
    
    commit 76e42c4b4522dc87c066d20051d02d1e4005b860
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 20:40:33 2010 -0600
    
        Disable dynopt for now, to allow better stabilization on the main feature of this branch: frame elimination.
    
    commit d03099690df2e16d423e8b6a8969e0264983237f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 15:00:14 2010 -0600
    
        Encapsulate "coreMethods" hash in Ruby and add "bound method" logic to default (non-generated) class populator. `ant test-all` runs green now.
    
    commit ed7458f72bce55b11e5231f8e7b9d590c09ca53d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 10:46:43 2010 -0600
    
        Fix incorrect use of fastSetInstanceVariable instead of fastSetInternalVariable in FFI.
    
    commit f09626121b6a8bea6ab39a3c8ed3ccd69f56b505
    Merge: f780b97 e8ca689
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 10:15:16 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit f780b972b1f3e18f4c2608d9536e797a0845cd1a
    Merge: 25ab5d3 6967ea7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 09:04:42 2010 -0600
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/runtime/ThreadContext.java
    
    commit 25ab5d3d3f8c1fbf0fa334427b1485d322e83f86
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Nov 7 00:42:54 2010 -0500
    
        Don't do dynopt against calls that receive blocks; non-local flow is not properly handled yet.
    
    commit a4ad27056dcc3acf6bae0b0af7e618966d08a6dd
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Nov 6 15:22:40 2010 -0500
    
        Tag caller specs that do not pass with new backtrace logic (peculiar eval caller behaviors).
    
    commit eed8902084cfa06d4648935c1f70da57bf0c7a9c
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Nov 6 00:32:59 2010 -0500
    
        More fixes to get specs and tests green on backtrace branch:
    
        * Hash#index was not being bound properly from RubyHash#index19
        * Range#min and Range#max need super, and therefore need frame = true
        * tc_owned is a bad test and fails on system like OS X where (for some reason) / may be owned by user
        * test_trace_func had been hacked for a bad class result (Integer, instead of Fixnum)...fixed that
    
    commit 9d9f94c30de76fa25e738e70e84ea09163eca5cb
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Nov 5 20:03:22 2010 -0500
    
        Fix Kernel#caller to replace .java lines with Ruby lines. Brings specs mostly to passing.
    
    commit de433c771830e95c54f8196453208f2b312191aa
    Merge: 3ffe1cf e25c58f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Nov 5 17:40:02 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyIO.java
        	src/org/jruby/compiler/impl/StackBasedVariableCompiler.java
        	src/org/jruby/evaluator/ASTInterpreter.java
        	src/org/jruby/java/proxies/JavaProxy.java
    
    commit 3ffe1cfba86f52ee96d89f3a1c352597f22f76b7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 27 01:42:06 2010 -0200
    
        Fix compile error I accidentally merged.
    
    commit b081253fb3cdf5141f7f0cf76d3f8546837d9f42
    Merge: fc3028d ad68e22
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 16:30:25 2010 -0200
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/internal/runtime/methods/DefaultMethod.java
        	src/org/jruby/runtime/ThreadContext.java
    
    commit fc3028d9da2750c9d1c394600ab8ee712388724d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 14:39:29 2010 -0200
    
        Add better description for class bodies in backtrace
    
    commit d796555494c2237116c7477c932fd96cd30d2e20
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 11:36:29 2010 -0200
    
        Clean up and add color to Rubinius backtraces.
    
    commit 012f5357ce649bd5a996211fe231f26097bf4f5b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 16:23:04 2010 -0500
    
        Fix classloader check to allow for compiled method handles, which use a no-arg constructor.
    
    commit 473d48aac6a5523304188d1d433e4c12df989b89
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 16:10:32 2010 -0500
    
        Improve Proc-binding-based eval position info by propagating block's position into the binding and through to the backtrace frame.
    
    commit bcfd16b519b145c9ee055db1592dfaced05b71a0
    Merge: 4902faa 5b49583
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 11:07:15 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyTime.java
        	src/org/jruby/runtime/ThreadContext.java
        	test/org/jruby/test/TestRubyException.java
    
    commit 4902faaf1678d5aecdef8b0b66f8ec78062aeec5
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Oct 21 09:28:45 2010 -0500
    
        Fix badly-merged RubyProc.to_s19, missing opening brace.
    
    commit 69177d7098f9dc4ff9096d08eee25c0d8bb4f971
    Merge: 801e764 f895837
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 20 21:50:53 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 801e7641b8838a8ae8931a9c6dcc5cf050096c4a
    Merge: 0c60a89 dda4644
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 19 23:16:41 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyDigest.java
        	src/org/jruby/RubyProc.java
    
    commit 0c60a89aa746f286588b218681e9ad25b11318c4
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 19 23:06:15 2010 -0500
    
        Only compile direct recursive calls when we haven't branched to another method body (e.g. for rescues) and we're not compiling a closure or class body.
    
    commit 18333fe82c808e8ed49eef898f19c86fa2d764b2
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 17:04:13 2010 -0500
    
        Get 1.8 specs running green except for a handful of Kernel#caller specs (which don't expect to see .java files in the trace...not sure how to deal with that).
    
        * Fix another literal-block-calling path that wasn't using callIter
    
    commit 366740120ee76d8df3f977edc1727b60b2d4ad63
    Merge: b64390b 6b243a3
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 10:35:14 2010 -0500
    
        Merge remote branch 'origin/master' into backtrace
    
    commit b64390b8cf0d2cb13e06d352969a093b5e86818d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 10:33:39 2010 -0500
    
        Remaining fixes to get precompiled mode passing all our tests. Still some spec failures.
    
        * Bump up permgen max for test runs
        * Fix stack-based scope initialization to not leave an unused nil on stack
        * Ensure compiled method handles properly wrap pre/post logic for dummy and backtrace frames.
    
    commit 96bd3cbde91fc505b37ee13cbea6ffa3e8690c58
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Oct 11 18:36:34 2010 -0500
    
        First fixes for backtrace branch in precompiled mode:
    
        * Add test-precompiled build target for running just precompiled
        * Eliminate extraneous toplevel scope being pushed for precompiled loads (because that logic is all in the generated "load" method now.
        * Add a new scope descriptor decoding path that properly sets up a toplevel scope
    
    commit 0ebbd6ac46c9ac04558f5200f980f26f798b9413
    Merge: fc387be ac455fc
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 6 21:53:18 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyIO.java
    
    commit fc387befff57ada6c116b646a3dfb767cc926ee5
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 28 15:57:58 2010 -0500
    
        Renumber arguments for consistency.
    
    commit bbc91d3c4039bf6c26ceffd4899dcaaeaa3d46d0
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 28 15:40:38 2010 -0500
    
        Fixes to get specs a bit closer to running green.
    
        * Move pre/post logic for Script.load into generated code, so it's the same everywhere.
        * Make pre/post-load push a frame, so top-level of a script is always framed
        * Remove break handling from non-literal block call paths in CachingCallSite
        * Make sure all literal block calls are using CallSite.callIter, which handles break
        * Fix a bad test in testCompiler that needed visibility tweaks and framing
        * Add complete doco for CallSite
        * Fix Kernel#caller to trim from top of stack instead of bottom
    
    commit 4e814a24d5b2ef1b6567a3076a463ff9d08e2a0d
    Merge: 91dc13a 3dbcef3
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Sep 27 17:43:30 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 91dc13a2f0b74bc1054d83378782416465ecc1b8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Sep 27 01:02:48 2010 -0500
    
        Fixes to get test-compiled (but not precompiled) passing 100%.
    
        * Fix eqlInternal's RubyNumeric branch check if classes are equal
        * Provide file and line from all BlockBodies, so Proc#to_s can always use it
        * Fix rejiggered Struct#each and Struct#each_pair to call the appropriate internal version
        * Fix ruby_test's IO.new suite to not use STDOUT directly, risking that it get closed
    
    commit dc4af45352607ebb8a95d70befdcdb15c1111c58
    Merge: ec8bb7f 90275be
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 21 09:52:10 2010 -0700
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/RubyDir.java
        	src/org/jruby/RubyKernel.java
        	src/org/jruby/compiler/ASTInspector.java
        	src/org/jruby/javasupport/util/RuntimeHelpers.java
    
    commit ec8bb7fc31d4acd4ebcb040f088e19fb427448e8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 19 16:21:38 2010 -0700
    
        Remove frame = true from all core class methods, to reduce their call costs. A few remain for invokeSuper and methods that may still need frames.
    
    commit ec276b6ca0c6009702839b12d97664b9e52b1023
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 16 14:10:43 2010 -0500
    
        Eliminate RubyTuple use that snuck in.
    
    commit f80254100cfc17ac6eb558e465fc1fb9122c3ee4
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 14 10:07:53 2010 -0500
    
        Special case a few immutable core types in equalInternal/eqlInternal.
    
    commit eb66c45145e4fd1f8c28e9a8c544114f034116e8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 18:26:13 2010 -0300
    
        Performance changes for backtrace logic:
    
        * Back off using Java stack trace for Proc's to_s file+line, since it's prohibitively expensive
        * Move the Backtrace stack to being a fixed-size array of objects updated, rather than created, when a push happens
    
    commit 6f0ade5ab28946b8800431d3454d2e57fc0dbe19
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 11:36:07 2010 -0300
    
        Add generation guard around trivially-inlined logic.
    
    commit c4d8705217174580d35757dc85c5c646e980b57f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 06:18:38 2010 -0300
    
        Full speed ahead with a caching mechanism for calls from core classes. Only works for core class methods right now, but opens the door to expanding that.
    
    commit 5874abc01104f6c0f435f8ac4643ed0f77cf7cff
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 03:43:37 2010 -0300
    
        Localize some fields used in Array#include? to speed up the loop.
    
    commit 346245cd5e154574d14736cf4b9e0b4b98260d14
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 15:02:41 2010 -0300
    
        Allow passing a number of iterations to bench_quicksort.rb.
    
    commit b4687022a1f00d0b63838b1c9daf00753fcfa93e
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 11:55:15 2010 -0300
    
        Fixes to get run-junit-compiled 100% passing on backtrace branch.
    
        * Fixed a couple tests that are too sensitive to core method line numbers or expected only .rb elements in the trace
        * Added a mechanism for procs to retrieve the most recent Ruby frame, for to_s purposes
        * Added comments for hybrid backtrace logic
    
    commit 15cd9b16cb2750d0e40ba478d07fe5bf265dc620
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 08:07:57 2010 -0300
    
        Add better logging to AnnotationBinder (for showing framed/scoped core methods), ASTInspector (for showing methods detected as framed/scoped and for reporting deopt flags as they are set), and JITCompiler (for dumping jitted methods' full classes and inspector results). New property jruby.jit.dumping=(true|FALSE).
    
    commit c4e6176498590d791868055025c2e72ded1ccf13
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Sep 10 02:10:20 2010 -0400
    
        Improve dumping of generated bytecode by including class and method name when possible.
    
    commit 07fc4215f6873f449f89d4f5da7a7e2e8963bc70
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 9 23:39:20 2010 -0400
    
        Make attr accessor's var accessor field volatile, to guarantee visibility across threads.
    
    commit e3a7cf5cd4d8ccd08407955779bdd94feb5e4ac8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 13:26:48 2010 -0500
    
        Add missing "in" to caller backtrace lines.
    
    commit 7140c339f386959853f747d86cb2ea9a8afa6f2a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 12:10:50 2010 -0500
    
        Fixes to get tracing tests running in interpreted mode:
    
        * Off-by-one line numbers were off for MRI too. Fixed to correct line numbers
        * call and return for Ruby methods need to use impl class, not self class
    
    commit cbc9c4edab56807a023817d06db9c22441fa4b53
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 10:31:57 2010 -0500
    
        Fix runInterpreterBody to properly unwrap RootNode for "gets loop" execution.
    
    commit 3a09773058d8d58d5bf8f1b6fbebc494fc18f7c6
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 10:01:43 2010 -0500
    
        Make --bytecode attempt a recompile, so that dynopt and no-compile modes can still print bytecode.
    
    commit 4e48e722ba5ded10975af348738237fcb7fe9b2a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 09:23:38 2010 -0500
    
        Add a "full" backtrace style which does not omit any Java frames and interlaces the Ruby frames.
    
    commit 6f5057e3ae1e372bd66602dcc26864adc3270128
    Merge: 7006d31 811fd8d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 07:48:47 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
    
    commit 7006d3175bbf4630921dfecaa4faef2a39a77205
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 4 16:04:28 2010 -0500
    
        Bytecode size reductions for stack-based nil-initialization of locals and for x, *y and x, * forms of masgn.
    
    commit 3a8fb16f020c2b9aaa6228605bdb3d8fd1b78ccf
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 4 14:52:04 2010 -0500
    
        Do not do direct recursive invocations for heap-based scopes, since the scope is not currently being reset.
    
    commit ec00e99636667eff97a891917ae9ef37f94a6eb7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Sep 3 19:55:24 2010 -0500
    
        Turn on dynopt by default, to aid testing of new logic.
    
    commit 9508e8a6925fce4f57a386ede867b3f8f9b67d38
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 2 12:40:38 2010 -0500
    
        Fix Time test that expected two separate Time.now objects to to_s the same.
    
    commit 65ba8b37a8a232495453e71b2a560c761b40893f
    Author: Nick Sieger <nick@nicksieger.com>
    Date:   Mon Aug 30 14:50:03 2010 -0500
    
        Use new backtrace info to set a more useful Java thread name
    
    commit 75b100604af39de52b26bdb21669136234424a0b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 30 11:37:49 2010 +0900
    
        Fix ifne/ifeq bug in dynopt guard and switch DefaultMethod to not flip generations on JIT in dynopt mode.
    
    commit fe3b408629e94b7db0436152968bd6d2232f6c7c
    Merge: eea60da 85c64c6
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 29 20:33:06 2010 +0900
    
        Merge branch 'master' into backtrace
    
    commit eea60da3905c87c16fbb4e6c78fd7a07f842e4bd
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Aug 27 14:09:44 2010 +0900
    
        Modify Java Fixnum fib bench to use the long call paths where possible, to be more like what compiled Ruby does not.
    
    commit a189563d9073208292e91aff3eb1c88489bd113d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 15:07:21 2010 +0900
    
        Fixes for jitted/compiled backtrace generation
    
        * SClass in a method body needs to frame, so it has a jump target for non-local return
        * Compiled methods need to always have their ruby name in the method name, so it can be mined out appropriately
        * Synthetic calls, like to rescue bodies, need to gobble caller frames to avoid multiple entries
    
    commit 276226de611cb8d5af942148109c2a51982e7640
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 14:03:44 2010 +0900
    
        Add callNumber tracking to method handles, to properly handle return jumps.
    
    commit b94bcf119a54f52ab9be3c86bc5cc85078f20eee
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 13:16:25 2010 +0900
    
        More fixes for hybrid backtrace:
    
        * Get generated trace to be RaiseException's Java trace
        * Add Ruby exception name to the RaiseException message
        * Rewire and repair trace calls
    
        All main suite tests now pass in interpreted mode.
    
    commit dc9fcd3de0f3070507ac0a0647973d1e9f16ae4f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 14:38:47 2010 -0500
    
        Fix debug logging of exceptions being raised and patch a couple tests for new backtrace structure.
    
    commit 3acd3201d85e4da9186fa17d3a04bdc9db742e29
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 13:23:04 2010 -0500
    
        Include original source file in compiled Ruby, add missing "in" line for MRI rendering, and soften requirements in test_backtraces to allow for native elements in the backtrace.
    
    commit 728cf3983fbeffba944fe34a8b0e410cc1de041c
    Merge: 88a64de 0e9c956
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 00:18:07 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 88a64de879446be3398ba7671b5fa1f3e46ce02f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:29:21 2010 -0500
    
        Turn on "positionless" compilation, since compiled code no longer needs to update interpreter backtrace frames. Also fix nil/null backtrace rendering.
    
    commit 5712a4ce285a5b3662c8ef8def2599223a232626
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:18:17 2010 -0500
    
        Fix off-by-one line numbers from interpreter frames.
    
    commit 519f4625b9d9658f50b986b1add560903ee453de
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:10:47 2010 -0500
    
        Remove some old backtrace code no longer in use and get all "backtrace" method handles to generate with no frame at all (since Java stack is used now).
    
    commit 424d967df8a3b6ba277bdb1b530d4f7f62ecbc4a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 16:52:29 2010 -0500
    
        Get Kernel#caller working with hybrid traces, get Rubinius rendering working again (partially), separate gathering and rendering of backtraces.
    
    commit a00822740712ddd924896feccc10f015fd20d4be
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 15:32:08 2010 -0500
    
        Mine method names out of AOT and JIT compiled stacktrace elements and get JIT using the original name of the method.
    
    commit 039d184ac5f798aed21870a7552b66c5973ca0eb
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Aug 14 22:16:48 2010 -0500
    
        Simplify in-class encoding of StaticScope data.
    
    commit 876a762b8af88955bee598dfd0421805d9b47c40
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 01:41:44 2010 -0500
    
        Fixes to hybrid traces to get tests working better:
    
        * Omit Kernel#raise and the KernelJavaAddons rbRaise from traces
        * Handle getBacktrace when there's been no preparation
    
        Also modified test/testException.rb to allow internal line numbers for the "load" call, rather than MRI standard "whatever line it was called from".
    
    commit 06f1bd171d6897f651b3cebfd76551080acbfe40
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 00:39:59 2010 -0500
    
        Move backtrace management to a separate stack and implement mixed-mode backtrace generation.
    
    commit ca40e73a7c136dfdd3853f0cd62a73bf70a3a08f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Aug 21 20:56:50 2010 -0500
    
        Get all major interpreter entry-points passing through simple, known method bodies. First step toward mixed-mode backtraces.

commit e055dbe2e6a793916c7a8383d5a6f6aa0d1e6e7f
Author: Hiro Asari <asari.ruby@gmail.com>
Date:   Thu Oct 14 15:51:53 2010 -0400

    Formatting change. Avoid dangling 'if' clause on a line by itself. Also, reformat multi-line boolean conditions so that it is clearer that they indeed span multiple lines.

commit 743f9b0898672b0b844cd0d71460ecec993158e9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Sep 4 16:04:28 2010 -0500

    Bytecode size reductions for stack-based nil-initialization of locals and for x, *y and x, * forms of masgn.

commit 811fd8d091f7e3a2065f8f5cb12220047ac1b79a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Sep 8 07:43:50 2010 -0500

    Modified isGenerationEqual to avoid deoptimization that occurs with invokeinterface of IRubyObject.getMetaClass().
    
    See http://groups.google.com/group/jvm-languages/browse_thread/thread/6c9e05ecd28fdcd4

commit a5503a49df27a4f661b86c282c64a4ca2045cb32
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 10 02:41:33 2010 -0400

    Move back to an atomic generation ID and install some simple type/modification guards for dynopt calls.

commit 0fbb8e22be4d30033d7d5057766e091e50c91147
Author: David Calavera <david.calavera@gmail.com>
Date:   Mon May 24 22:37:54 2010 +0200

    fixes JRUBY-4807: Method missing behavior error

commit 09ccccede225f7a6b3a78408afa4ffb0b202d777
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Wed May 5 17:06:31 2010 -0500

    JRUBY-4776: calling defined?(super) in a module method causes a NullPointerException

commit 03dce7596d4786942eac8389a0c446e372be7655
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun May 2 03:25:14 2010 -0500

    Add block callback offline generation for jrubyc --handles. Should now allow "complete" offline compilation of scripts.

commit e05b969291d44e3d42e14861e30ce189a52f1b5f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun May 2 02:09:26 2010 -0500

    Miscellaneous cleanup:
    
    * A number of findbugs items in the "threadsafe", "performance", "malcious code", and "experimental" warnings
    * Tidied up all NetBeans "yellows" in the files I touched
    * Removed now-defunct JRubyServer/Client/Service
    * Removed now-defunct ssa.rb and DAGBuilder

commit cd1677ddf0f4a1ef1b584f33825404a5c22b55d9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Apr 30 01:50:20 2010 -0500

    Add the ability to pre-generate all method handles when compiling a .rb file (--handles flag to jrubyc).

commit 9ebf876d8d0f8c2cb21758339fe79b5c391f69ca
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 7 19:56:50 2010 -0500

    Add specs for rescuing Java exceptions with "Exception" or "Object", add duck-typed methods from Ruby Exception to Java Throwable plus specs, and fix a few gaps in the logic for JRUBY-4677.

commit 323ba1e629f578e916b0779c421f4fae43a8aece
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Apr 6 01:30:30 2010 -0500

    Fix for JRUBY-4677: Java exceptions can't be rescued with "rescue Exception"
    
    This fixes the problem by modifying all rescue blocks to handle Java exceptions when they're rescueing "Exception" as well as handling Ruby exceptions. It feels like the way it should work from the Ruby side, but I worry about it from the Java side. I had to introduce a new Unrescuable marker to allow some internal exceptions to propagate. All tests pass, specs pass the same.

commit 84271d05f38910f03bf0707094be0351d82e21e4
Author: Vladimir Sizikov <vsizikov@gmail.com>
Date:   Wed Jan 20 14:08:46 2010 +0100

    JRUBY-4474: Array#== behavior is different from MRI
    
    RubySpec update is pending (under review).

commit 516aa109ef62c3f2e4d9ff8c92b1dc1dc946e61d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jan 18 22:05:52 2010 -0600

    Improvements for JRUBY-4486: defined? self::CONSTANT generates a metric ton of bytecode

commit 3849128d6ab797ecef79db8786ac8bcea11fbbf3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 12 09:35:07 2010 -0600

    Reduce bytecode size by packing all basic cache initialization into a descriptor string that's parsed on load.

commit 386eeb69ce3e49daf844d1ab0b1b8c26b99ccb83
Author: Ola Bini <ola.bini@gmail.com>
Date:   Mon Jan 11 13:18:12 2010 +0100

    Fix several 1.9 type conversion problems in Kernel.String

commit c23ba2f99388c4e6cf6d2e0f7333db23b58b2b51
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Dec 22 10:59:26 2009 -0600

    JRUBY-4119: alias should use symbols with quotationmarks

commit d9656d2b20c159592a0ddbcda9e6059d78862fba
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 19 16:59:47 2009 -0600

    Move all caching logic out of "real class" and use RuntimeCache (now top-level) for method caching.

commit 95f8f246b041ffe6bba46c2daf60cd6d71738b99
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Fri Dec 18 17:03:18 2009 -0600

    JRUBY-4355: [19] Splat operator behavior is slightly different in Ruby 1.9 (patch by David Calavera)

commit 4648283c90223196b20735287da5f9da9e061cc2
Author: David Calavera <david.calavera@gmail.com>
Date:   Thu Dec 10 11:28:44 2009 +0100

    JRUBY-4322: [1.9] Object.to_a should be removed
    
    Signed-off-by: Vladimir Sizikov <vsizikov@gmail.com>

commit 25720ab186b2d0fcdeffc1744128e185bf575a6b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 11 12:12:17 2009 -0600

    Fix for JRUBY-1531: Tracing in compiler / Tracing AOT compiled code
    
    This adds tracing calls to the compiler output and compiled-method invokers whenever full tracing is enabled. This allows debugging at nearly full speed, though to support bindings DynamicScope optimizations (elimination, for example) has to be turned off. This patch modifies --debug to no longer turn off compilation nor turn on reflection, and test/tracing/test_trace_func.rb passes in all modes.

commit 6266374bc8673dbc2a882c392b8af9016af19ab2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Oct 15 15:26:52 2009 -0500

    Fix for JRUBY-4053: ActiveRecord AssociationCollection#== method is returning false on equal results

commit 3cd2e9d3d714cceab46460b33c12c41a512644fe
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Oct 13 15:37:44 2009 -0500

    JRUBY-4029: String hash keys should be copied

commit 3526f249f7e915c357b9a257b28d26874d6e0dd5
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jul 13 23:42:16 2009 -0500

    Move remaining two Callback generators into method factories, to finally centralize things.

commit e85018a30cc1d1f8ff2abcf8fa029c6d32397e82
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jun 13 16:27:46 2009 -0500

    Fix by Leonardo Borges for JRUBY-2349: Bug in constant lookup on non Module or Class

commit 87e2e022d1976cdbbccdbabcd0d2a662773b044b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu May 21 00:47:35 2009 -0500

    Dang...I didn't run the specs precompiled, which would have shown that there's a compiler fix needed for this too. Reverting.
    
    Revert "Fixed class spec and removed tag file"
    
    This reverts commit c993144052c28e5d379bd8cc52671df2e09ce119.

commit c993144052c28e5d379bd8cc52671df2e09ce119
Author: Leonardo Borges <leonardoborges.rj@gmail.com>
Date:   Sun May 17 13:52:16 2009 +0200

    Fixed class spec and removed tag file

commit 61b91d0f249964cd71d601991fb6dee54e641a46
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue May 19 17:08:26 2009 -0500

    Changes for JRUBY-3588: Allow rescuing Java Throwables.

commit d87e7e7c4e95332f3fff66e67cb1e02dd5c7f1b4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 15 14:54:03 2009 -0500

    Fix class method definition from compiler to only be lazy when lazy handles property is set.

commit 66b28d6e25993dac775867702563e32e7bc75b41
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 8 20:58:55 2009 -0500

    Migrate to having backref/lastline on DynamicScope again, with inspector changes to ensure the scope is available. Does not yet pass all tests.

commit 7bd55a3d3ab30771d185c23f336c88e22e2764ca
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 6 12:34:33 2009 -0500

    First steps toward inlinable dyncalls. This modification will pull single-arg fcalls all the way back to the call site. This speeds up some benchmarks but slows others, and so it still requires a property jruby.compile.inlineDyncalls=true.

commit 99019c3987b9431a92e2ae15b8edfd7672c04418
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Apr 5 20:51:04 2009 -0500

    Move MM closer to the call site; almost close enough for inlining.

commit 07b96edc551a1b539f66f271ccb78c74bf92cbd3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Apr 4 04:17:37 2009 +0000

    Modifications to move toward method_missing being "just another method handle", allowing for inlinable dynamic calls real soon now.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9519 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 36efc465e3066fd765ba26aea760356cc7265d36
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Mar 23 08:24:11 2009 +0000

    Add dynamic-call optz to zsuper. This temporarily regresses on the likely-buggy behavior from http://redmine.ruby-lang.org/issues/show/1151 but I'm trying to shag down an official response. We will want to either revert to the "buggy" behavior or mark this as ruby_bug in the specs, depending on what we hear from ruby-core.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9461 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 4b8ccfae5aedb7822f9b00801b8278bfc2e30fe4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Mar 21 17:56:27 2009 +0000

    Fix for JRUBY-3517: Incorrect self in a multiple assignment
    
    The fix here was to do the same "call site selection" that normal attr assignment does. The code was mostly copied from the non-masgn attr assignment code, so there's some duplication to be eliminated, but this fixes the bug.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9446 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1d1e533478528a727fbcc9ea6924e6f33422cb03
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 23 21:50:03 2009 +0000

    Kinda hacky fixes for exceptions thrown from toplevel; backtrace isn't great, but it isn't NullPointerException. Should at least improve JRUBY-3439 and JRUBY-3345. I will leave the latter open to continue fixing the trace.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9280 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6251ec2ebb44cd3ad1aaf5a6c7bea59998152a4b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 16 04:07:41 2009 +0000

    Fix for JRUBY-3207: super error message is inaccurate when superclass doesn't implement method.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9190 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2491d1ab35a29e3e5c6a29f78c0c69c1f0752a6a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 24 18:35:08 2009 +0000

    Expand case/when optimization to include single-char symbosl and multi-char symbols and strings. Also turn it on by default, even though it's not checking for === override atm.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8880 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 7af96b98ddeb5dbcfcbcc0c439dd47db863d3d7b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 21 19:31:59 2009 +0000

    Modify interpreter to always order block/blockpass strictly left-to-right wrt receiver and arguments. Update to latest RubySpecs which tests this behavior.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8861 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 03165718fbea29dd71ae09fcc23915f307328d25
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 14 16:31:45 2009 +0000

    Add in single-character-string case/when optimization.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8772 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 04602b8b0c0dcf59ecb5c978870d6d433d8b13c3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 14 01:50:05 2009 +0000

    1.9-compatible argument processing for blocks.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8753 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 20225f17b2ffb0f7f9797949c3dc94339468f5c4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 13 19:51:29 2009 +0000

    Add support for post args in method arguments in 1.9 compiler.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8749 961051c9-f516-0410-bf72-c9f7e237a7b7

commit eb783290f6206280063137b6bd90c40e8c8b1f76
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 10 00:32:57 2009 +0000

    Remove some extraneous argument passing during exception handling logic.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8673 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 578daf6c053faad8373cf7317f8d3aa4c00b30cd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 9 17:55:37 2009 +0000

    Minor optz for const decl, avoiding unnecessary stack juggling.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8662 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 85d8d094a5c5ffc9ae554bd4420db1ffd3c117df
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 8 00:25:32 2009 +0000

    Cleaned up, partially optimized, and arity-split case/when logic. --fast case is probably broken, and splatted causes duplication still, but it's close.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8644 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 05ad1d34fec0d374ce2b21782cb68bba0f858d0e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 7 07:30:26 2009 +0000

    Arity-split rescue args. Doesn't help performance much, probably way overshadowed by the cost of rescue itself.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8624 961051c9-f516-0410-bf72-c9f7e237a7b7

commit dcbcc0a9f7d8e890aac29171a8f3d6418ae614ec
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 1 00:09:21 2009 +0000

    Minor optz for attr asgn to move normal/variable calltype selection out to a separate RuntimeHelpers method. Small bytecode reduction, small perf improvement on microbench.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8534 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ddd126aad76361773e51b9f2b6cff6f5b780f9d3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 27 12:22:59 2008 +0000

    Tidying up ArrayNode compilation a bit, since it's used for the 'yield' args list. No measurable perf improvement, but it's less bytecode.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8475 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e6653b48f2dcf0da3625f8828e18c0bd756835f3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 27 09:57:31 2008 +0000

    Another large optimization of block argument processing; substantial reduction in bytecode size, improved performance, reduced dup/pop churn. also some other miscellaneous cleanup.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8474 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 55d5329d11ff707926b81a553249c1886ef88ed3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 27 07:23:24 2008 +0000

    Large optimization/simplification for method argument processing:
    * Reduced bytecode for opt and rest args in half
    * Removed some unnecessary dup/pop
    * Simplified opt-arg flow to ease JVM framing overhead.
    * Reduced arity-checking to always do the static call; halved bytecode.
    * Reduced stack-based nil-filling to only fill uncertain local vars (those not guaranteed to be populated by arg processing)
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8472 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 05bdd562d35a8634b3a67ca834871b72f4978e83
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 27 05:22:16 2008 +0000

    Another round of compiled block optimizations:
    * Use RubyArray's fillNil (now moved to RuntimeHelpers) instead of Arrays.fill
    * Nuke BoxedVariableCompiler, since with proc-as-binding it will never work (and hasn't been kept up-to-date anyway)
    * Add "expression" param to local var lookup methods, to specify whether they should leave a value on stack. First step toward fully expression-aware compilation.
    * Only handle exception-based redo when body contains nested logic that could cause it (scope-aware methods like eval).
    * Reduce preamble logic for both methods and closures by reducing unnecessary stack-twiddling.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8470 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6fe2f5036a5d052c1d6c667e06d42162da8e650c
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Tue Dec 16 20:49:23 2008 +0000

    Guard all RubyWarning.warning(...) methods by runtime.isVerbose() so the message is not built until they're actually invoked.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8371 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1d6c408a473993d644e943cb4d4f6d788927655a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Dec 16 18:04:40 2008 +0000

    First round of twiddling to get 1.9 compilation work under way.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8367 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d6c971ca167cc9db347c281f01b0d6269b76e6a8
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Sun Dec 14 18:02:04 2008 +0000

    Big changes, remove 4 fields from RubyBasicObject (finalizer, dataStruct, variableTableSize, variableTableThreshold) Replace variableTable by variables (external org.jruby.runtime.builtin.InstanceVariableTable). The new structure supports packed mode (for <= 5 instance variable when it does linear search for lookup). Finalizer and dataStruct are now kept as internal instance variables. Need to review concurrency issues.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8339 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 7bbedee05b951db8dfcad7c92470b4fc10c2b36e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Nov 16 23:57:16 2008 +0000

    Remove all remaining references/dependencies on MethodIndex's int indicies and related fields.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8081 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6e673b59cd7223c945b6b1a4aab23154f48b217a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Oct 24 04:46:31 2008 +0000

    Wide-ranging rework of exception-handling synthetic methods:
    * Chained compilers split into two, to handle outlining code within child-scoped methods as well
    * outline method moved to Root and Child method compiler base types
    * Simple ensures modified to use new outline logic
    * Rescues modified to use new outline logic for both main logic and bodies; no sharing yet between ruby and java exception paths
    * Small reduction of code generated for rescues
    * Simplification of rescue logic in compiler, due to outline use
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7904 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ccca132e552ff9cad9a0765e806e8e38ed452050
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Oct 12 05:10:59 2008 +0000

    Minor bytecode reductions for global and ivar set/get.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7874 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 7593ed4f52dec411e9c685b00d644ec205999bb2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Oct 12 04:09:14 2008 +0000

    Minor cleanup before tackling compiled rescue logic.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7873 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 74deae83536b0efcbf299a4e57002769a16c3a61
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Oct 11 22:10:15 2008 +0000

    Fix for JRUBY-3049: EXCEPTION_ACCESS_VIOLATION
    
    This commit has several changes to simplify jump exception handling in while loops:
    * The "reason" for LocalJumpError is now based on an enum, so there's no need to .equals a string
    * Redo handling is now a separate try/catch chunk contained within the loop, rather than part of the larger chunk outside it. This prevents the redo from jumping back into the exception-handling logic, which was the source of the crashing.
    * LocalJumpError handling within a while loop is now implemented as a RuntimeHelpers call that checks for redo|break|next and *rethrows* a normal JumpException subtype. This allows the jump-handling logic to be reused, and moves the LJE-juggling to a separate piece of code.
    Not only does this solve the segfault, it also substantially reduces the amount of code emitted for a jumpexception-aware while loop.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7871 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 0be23d6124bbc965e1fcb634ac89561bdc7b1dff
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Sat Oct 11 15:21:49 2008 +0000

    JRUBY-3052: Cache constants at their call site (const_node)
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7867 961051c9-f516-0410-bf72-c9f7e237a7b7

commit c2ae9de36081f45801b96b380cdea9cc4bf797d1
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 7 03:00:51 2008 +0000

    Fix for JRUBY-2349: Bug in constant lookup on non Module or Class
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7841 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 886c42b9f8e2a6f686112b60f25727f2ede2e198
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Sep 23 18:15:51 2008 +0000

    First round of interpreter cleanups, from A up through L.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7766 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 132d0a520b0608129233d3ba0baeb8df2f426a0c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 8 10:00:02 2008 +0000

    More propagating the effects of having caller passed to visibility-checking logic; getFrameSelf() almost completely eliminated.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7657 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d5959fa23b776036a47c955356e09692cb9b1d69
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 8 08:12:47 2008 +0000

    Refactor InlineCachingCallSite into abstract CachingCallSite and Normal/Functional/Variable subtypes.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7656 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 323570a26bbac1eb350e04e87bf4b50530a784c3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 8 08:12:12 2008 +0000

    No more half-complete projects: propagate caller sig changes in CallSite. Stop the madness!
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7655 961051c9-f516-0410-bf72-c9f7e237a7b7

commit a20b29bfe53939fa18fde72c45ac86b1883c1ae6
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Aug 31 04:54:09 2008 +0000

    More compiler cleanup:
    * Eliminated unused, inefficient invokeDynamic (finally!)
    * Simplified yield logic, pushed null argumentation into Block
    * Simplified eqq call logic for case/when
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7597 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1927a7663b582a1cca34044f609cc2b7a728e495
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Aug 31 04:53:57 2008 +0000

    Miscellaneous call optimizations:
    * Partial arity-splitting of super invocation (really only useful for Java to Ruby calls
    * Moved callSuper logic into RuntimeHelpers, modified all callers to use the new methods, and deprecated callSuper on IRubyObject
    * Eliminated 30-some more uses of indexed IRubyObject.callMethod and deprecated one of them
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7596 961051c9-f516-0410-bf72-c9f7e237a7b7

commit bacffc80f2247c80c0095d28df49e81cb9b54bb2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Aug 30 20:21:49 2008 +0000

    Compiler improvements: rework non-masgn attr assign to use RuntimeHelpers too, for more bytecode size reduction.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7590 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e1eb359af7c98dac78965357fc9cfd0080bde8ab
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Aug 30 19:57:26 2008 +0000

    Compiler improvements:
    - Fixnums -1 to 5 back to using the RubyFixnum methods to reduce total bytecode for heavily-used low fixnums like 0 and 1
    - Rewrite masgn-based attr assignment to use a call site, avoid boxing args for all cases up to a[1,2,3] = 1
    - Add CallSite call versions that accept caller, to start moving away from frameSelf for visibility checking
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7589 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 254fff861a3435e76bf367d3d4518f27df6f8cab
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Aug 10 20:09:34 2008 +0000

    Update some Time constructors to use callsite-based initialize; speeds up time bench a stitch.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7428 961051c9-f516-0410-bf72-c9f7e237a7b7

commit afa87ece3428efd5180fe97c52fbdecba237e853
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Aug 10 05:35:28 2008 +0000

    Add specific-arity paths for method_missing; in most cases args will get boxed again by *args, but this eliminates at least 2 levels of boxing for 1 and 2-arg calls and 1 level of boxing for 0 and N-arg calls.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7419 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 304b540ba200c6b000223af4f25a263583e84933
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Aug 10 02:45:03 2008 +0000

    * Eliminate visibility checking for almost all fcall and vcall paths.
    * Outline some method_missing logic
    * Start adding some specific-arity paths for method_missing; still too much boxing, but the code isn't in normal call paths now.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7417 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 61170d717cb4010b1c4ea508dbcdc8e1c07d1585
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Aug 8 03:02:55 2008 +0000

    Move new Java ports of Ruby-based JI functionality to new packages under org.jruby.java
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7407 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 00b50ec16a89ac3c0a267a8446ac3b571722fc1b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Aug 6 06:47:42 2008 +0000

    Chop up some methods hotspot said were too big during an interpreted fib run.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7383 961051c9-f516-0410-bf72-c9f7e237a7b7

commit f08b92da6c3504f4c68b456809a9b1d3b4e075bf
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Aug 3 03:52:44 2008 +0000

    Adding Java exception rescuing to the compiler as well.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7356 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 29df8f743ff505b68cb99bbdefe1a7955818109b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Aug 3 03:52:35 2008 +0000

    * Allow rescue to rescue non-wrapped Java exceptions (immediately wrapped if handled; interpreter only at the moment)
    * Allow $! to be assigned a wrapped Java exception
    * Added beginnings of an Unsafe mimic to use for necessary purposes (like rethrowing exceptions)
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7355 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 7c12ce0d83cefbdab76ea8f8686d3997d814371c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 25 20:07:36 2008 +0000

    Add specifiy-arity call paths for default Class#new and for concrete Java object construction.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7296 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 17b24fbe8a3976462e1969260b1d08729d2518ec
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 25 05:43:02 2008 +0000

    Eliminate Ruby-based JavaProxyMethods module.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7289 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 70cf58217e38bd9606ff30245cb569fee20e0090
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jul 22 18:52:55 2008 +0000

    Second phase of interface impl refactoring, reuse minijava code to provide a dynamic-dispatch-free path from the implemented methods (now all generated into a real class) directly to the DynamicMethod they go with. Also eliminated the ruby-based method_missing used for Proc coercion to interfaces. Other than cleaning up code, reducing bytecode generated, and improving coercion, it's mostly done.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7264 961051c9-f516-0410-bf72-c9f7e237a7b7

commit cb8e9b3224a69928ad9dc894ff2ab0376e4b702a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jul 16 07:49:47 2008 +0000

    Fix for JRUBY-2787, opasgn with || not returning rhs on assignment.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7187 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 24c21cabcd760068cdf88bb6ee722bf1c3f0eb1d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jul 8 08:40:01 2008 +0000

    Greatly reduce the amount of bytecode generated for multiple assignment (and block args) by 50% or more. No obvious perf improvement, but hey, less bytecode!
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7129 961051c9-f516-0410-bf72-c9f7e237a7b7

commit b0ac782185b961721f9599b6ab6fe5c80fb3289f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jul 8 06:31:30 2008 +0000

    Refactoring to reduce bytecode in compiled output:
    
    * If no arity checking is needed (just restarg) don't generate arity code
    * For static scope construction, provide util methods up to ten elements to avoid all the array fiddling
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7127 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 5034f260ed12cf2f8af7b57e326f389ff15be3e7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jul 7 17:42:42 2008 +0000

    New logic for instantiating blocks in compiled code, reduces block-construction overhead so it's consistently faster than both MRI and interpreted now. JRUBY-2650.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7118 961051c9-f516-0410-bf72-c9f7e237a7b7

commit a17f82ce1f6b17a388c76dcacc55cf5effbc6384
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Mon Jul 7 05:20:06 2008 +0000

    [interp] make arity specific block pass nodes for call/fcall nodes
    Move TC.getContext impl into StaticScope
    Remove unused specific-arity in fcall/call nodes since new node types replaced it
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7114 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 450fb9decfd0cb4181bdd95e16707d8dd8dc9674
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jul 7 04:15:41 2008 +0000

    Fix an interpreted break logic issue enebo found after my last commit.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7112 961051c9-f516-0410-bf72-c9f7e237a7b7

commit dd6961afadc591749d9f79edcb83ba8f788005bd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jul 7 03:31:44 2008 +0000

    Rework of how break and return handle jump targeting. Now all frames have a final jumpTarget field used as the target for the non-local jumps, rather than using the block body (which is static and breaks cases where the block is passed through multiple levels) or null (jump target will never be null now). For JRUBY-2756.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7110 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ae71ca9dbfca542233181cd0b7e72f7b7444302e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jul 7 03:24:51 2008 +0000

    Split up some a key method along the block-passing path.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7109 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 8982c6874b6bf161fc5cc288d6658468bf28e75b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jul 2 18:54:20 2008 +0000

    Add a new property that enables lazy handles for compiled code. To mitigate the cost of generating a handle per method, jruby.compile.lazyHandles will cause all method handles to be LazyCompiledMethod, which defers the actual code generation and loading until the method is first accessed. For JRUBY-2714.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@7079 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 8798fdbd4b0ca5719932bf7ef4bc57deecb6cf0a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jun 14 05:40:22 2008 +0000

    Implement Vladimir's silly Integer#times perf hack, avoiding instantiating fixnums when the block takes no args. About 25% faster for a simple .times { 1 } loop benchmark.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6962 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d48295f7d26ba1ac6189cd657af07a0e6b7c283f
Author: Vladimir Sizikov <vsizikov@gmail.com>
Date:   Mon Jun 9 20:54:49 2008 +0000

    JRUBY-2624: Object#initialize_copy should always be private
    
    Regression test added.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6920 961051c9-f516-0410-bf72-c9f7e237a7b7

commit aeab6d30e7c8c28f86085ec526f6c0347bfe942c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 5 23:57:24 2008 +0000

    Various minor refactorings to shrink methods in the parser chain and elsewhere that HotSpot reported as "too big" to inline. Minimal performance boost, if any, but it's also somewhat cleaner code.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6897 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3dfc49a70093218d93f448714a7d0f3bd9615e2a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri May 23 13:35:03 2008 +0000

    First round of cleanup for define_method (JRUBY-1387)
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6769 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 081e71105d1d0fb5322586111d62cf7fa8f492a5
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri May 23 11:02:19 2008 +0000

    Refactor RuntimeHelpers.def and defs to reduce their contained complexity, in an effort to remove as much overhead as possible from compiled def and defs.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6765 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 93110714fccad467159edc240b3b04753df94437
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri May 23 05:55:29 2008 +0000

    Various optimizations in pursuit of less VM deoptz:
    * Support a straight-in path for zero-arity calling of compiled code to avoid an extra hop through DynamicMethod.call
    * Cache a single ReturnJump per thread, updated immediately before being thrown, to slightly reduce the cost of non-local returns
    * Add more specific/direct calls to the pre/post methods for Java/Compiled method, to avoid the polymorphic calls to CallConfig. Also make direct calls for interpreted code. JIT still uses polymorphic CallConfig.pre/post for now.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6754 961051c9-f516-0410-bf72-c9f7e237a7b7

commit a85973e9a76fe08c741fe226662a339d2f3e0fc0
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Mon May 12 18:53:14 2008 +0000

    Cache remaining core exceptions in the runtime so we don't get NPE's when they're reassigned.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6683 961051c9-f516-0410-bf72-c9f7e237a7b7

commit be1bc6f1635a8fd35a9353a34529b7543ce0d406
Author: Ola Bini <ola.bini@gmail.com>
Date:   Mon May 5 16:41:05 2008 +0000

    Fix warnings based on deprecations
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6624 961051c9-f516-0410-bf72-c9f7e237a7b7

commit fa73cc0eac8ddac5ec0712665837d252b8cb6e33
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 28 09:14:51 2008 +0000

    Expand variable-assignment optimizations to globals and instance vars, but it's still disabled for the moment due to while/until.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6584 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 7be3e62c35796d36ea332a1ecacf7455d73dce4c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 28 08:15:35 2008 +0000

    Multiple microoptz to compiled output:
    * all int loads now use smallest bytecode possible (biload, siload)
    * removed extraneous runtime params from several methods
    * split range instantiation into exclusive/inclusive versions
    * moved some array/splatting methods out of ASTInterpreter and into RuntimeHelpers
    * Modified Fixnum creation to use efficient int loading bytecode when possible
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6579 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3a6605e2208dbe96ca69a30f0d3b0c08747afcdf
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Sat Apr 26 16:24:43 2008 +0000

    JRUBY-2444: NPE from o.j.r.scope.ManyVarsDynamicScope#getValue (compiler side)
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6573 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 9309a03590ec6a9a45cdbdad26be60eb146b8f5f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Apr 12 15:13:56 2008 +0000

    Some fixes and simplification of instance_eval and related methods. No more Callback construction, and fixed some behavior that was not working as in MRI.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6481 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3b5f20aa8c4b749f1249a7a241f5f8c7f735c312
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Sat Apr 5 19:56:23 2008 +0000

    Simplified getEnclosingModule and a step towards correct class nil::Foo;end case.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6410 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 77384c6974f6b8b756aadf3dbc25de39faed1dd7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Apr 4 23:01:46 2008 +0000

    * Move block callback construction out of compiled code into runtime to reduce bytecode size
    * Move field checking/setting and call of callback construction to small synthetic methods to reduce bytecode size
    * Migrate all closure-constructing methods to new closure caching mechanism for uniformity
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6406 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 161c102a408678f695c0d86244b03da289e09b3f
Author: Vladimir Sizikov <vsizikov@gmail.com>
Date:   Thu Apr 3 14:53:28 2008 +0000

    JRUBY-2358: "A = 12; class A::B; end" crashes JRuby
    
    Regression tests are already in the rubyspecs.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6401 961051c9-f516-0410-bf72-c9f7e237a7b7

commit a39601ed51210c7ac40f2f4dda8e7df094e5f3d7
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Thu Mar 27 22:44:01 2008 +0000

    Fix 'super' behavior when called out of a method.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6352 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 993f8c99ef835ed7c86910dc4ec34919b335131c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Mar 17 21:02:28 2008 +0000

    A bunch of findbugs fixes from JRUBY-1173. Also renamed generated callbacks to be Callback in their name instead of Invoker, to distinguish from actual invokers.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6246 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 852d904134ad970a20497fdcc5d752dd4ae49766
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Fri Mar 7 22:04:54 2008 +0000

    The RC3 Surprise!
    
    Allow annotation defined ruby methods to optionally specify ThreadContext as first parameter
    Convert easiest and most common methods to accept ThreadContext when method or child method can use context
    
    These changes give about 15% improvement on petstore bench and about 10% in ar-bench.  In ar-bench getCurrentContext calls go from 14 million down to 2 million.  The remaining calls largely can be removed but they were much more invasive.
    
    IRubyObject op_eqq and op_equal both not have ThreadContext consumer, but we could see no use of this in any extensions and figured it worth the trouble of converting.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6143 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 34c8afa7edde526a572c70e82d0bb9e55e9f1e04
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Mar 1 18:21:16 2008 +0000

    Fixes for a[b] ||= c and a[b] &&= c being much slower than interpreted and MRI.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6076 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 96bf197aacf91a0ae4622269b50f353507cb8d3c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Feb 24 10:55:07 2008 +0000

    Some expansion of specific-arity calling and minor optz for StringIO#puts.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@6012 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6ee3865cc5caaa9ebfe9da80a86ff866c7963ba7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Feb 21 15:46:58 2008 +0000

    More optimizations/compiler cleanup for op assignments: op asgn with || and && improved.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5989 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 511aec45f56ca68af0b473d96cc6e8e27c705e3a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Feb 20 20:36:21 2008 +0000

    Performance improvements for opasgn with a normal method operator (as in a.b += c).
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5984 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 732b70c83f5e5927ea868389dd0de844febe2e71
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Mon Feb 11 17:54:38 2008 +0000

    Reuse thread context local in the compiler when setting/getting backref and last line.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5905 961051c9-f516-0410-bf72-c9f7e237a7b7

commit de5d2055aca34ef2151f29db928bc13036a628fb
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Mon Feb 11 17:33:00 2008 +0000

    Fix for JRUBY-2104: 7 rubyspecs failures for $~ due to recent changes.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5904 961051c9-f516-0410-bf72-c9f7e237a7b7

commit c272260478381c8ac3ab13f39db6a0809d3b1d1b
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Mon Feb 11 02:33:23 2008 +0000

    Fix for JRUBY-2103: $~ semantics still doesnt match MRI.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5899 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2b1a005a405839ca4eb268288816294e88f20a2b
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Sun Feb 3 18:37:14 2008 +0000

    JRUBY-2062: Add ids and convenient data to SyntaxException and IRubyWarning interface to make their life easier
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5806 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1091a2ca62c8cda74760994cbe96679d9a94ad02
Author: Vladimir Sizikov <vsizikov@gmail.com>
Date:   Tue Jan 29 12:09:16 2008 +0000

    Revert partial fix for "JRUBY-2046: Ranges in conditions are broken."
    (revision r5766).
    The fix didn't resolve all cases, and needs more work.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5768 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 401c0e4f3c7b5f0c3d820403c0cb3adbe652725b
Author: Vladimir Sizikov <vsizikov@gmail.com>
Date:   Mon Jan 28 19:45:24 2008 +0000

    JRUBY-2046: Ranges in conditions are broken.
    Added few tests to test_flip.rb, and enabled the file in test_index.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5766 961051c9-f516-0410-bf72-c9f7e237a7b7

commit c6ba8ed8aeb56f88c234ee97bc2318881460c74a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jan 26 08:37:44 2008 +0000

    Complete fix for JRUBY-2004: moved the type error logic into setConstantInModule so both compiler and interpreter get the benefit and added a test.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5753 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 55b1e747d6fd02d03695b731dbb28af9bef191a1
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Fri Jan 25 23:45:51 2008 +0000

    Phase I: Stop using ISourcePosition in runtime
      - Removes need to manage extra fields in compiler reducing memory size of methods
      - Seperates setting of setting line and file (later commit will be doing a lot less setFile's)
    
    - Removed a chunk of dead code from RubyKernel.eval
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5747 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 323caec04578139e9b787d9a977c08bb25bf94d9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 25 07:28:25 2008 +0000

    Fix for performance of simple attr assign (x.foo = bar) and added benchmark for a more complex case a[1] = 2)
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5722 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1261935dcc59e69bc45e7f7ffe81b8e41bcc193a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jan 1 01:07:02 2008 +0000

    Some fixes for JRUBY-1854, improves normal generated invoker def performance a bit and reflected performance a lot.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5455 961051c9-f516-0410-bf72-c9f7e237a7b7

commit e138e7380d7e56ee0e3a9d2f7817944bf2874c47
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 19 23:01:42 2007 +0000

    Cleanups and name-mangling unifications (along with a few compiler bug fixes) to make +C work during test runs and add full-file, forced AOT compilation to the test runs.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5302 961051c9-f516-0410-bf72-c9f7e237a7b7

commit b22c6abb720151c7d5bb07aefcb6c81814931191
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 5 22:19:29 2007 +0000

    Remove "intern by default" from many call paths and explicitly intern only when the result will be passed to a method that requires interned strings. This should help reduce the amount of interning going on, easing some permgen pressure. The ultimate and best fix would be to forego interned strings in favor of an artificial ID.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5170 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2bb2dff23d81e87184e0b13250995b74d2a7f206
Author: Ola Bini <ola.bini@gmail.com>
Date:   Tue Nov 27 11:09:30 2007 +0000

    Merge Joni as new regular expression engine
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5072 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2c0f7fd5bea47c6ae49149c40999affe12ea3c26
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Nov 26 22:49:04 2007 +0000

    Offload instance variable methods to a separate interface to reduce the implementation load for IRubyObject. This also is another step toward making lightweights possible; by separating the ivar logic from the object logic (visibly, anyway) it means we can externally represent that logic for lightweights more easily. Bill pointed out that his larger IRubyObject/Object/lightweight refactoring used a similar decomposition, so this has at least been proven out in one form.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5061 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 4d75cc1470f5843b4b66f89f50ed81b88b27b431
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Nov 26 10:01:20 2007 +0000

    Remove the three generic type conversion methods from RubyObject/IRubyObject to TypeConverter utility class. They were never overridden, and so there's no need for them to live in the IRubyObject/RubyObject hierarchy.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5047 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ff120491b21359d374e6e50a98e8950f963f49cb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Nov 26 06:36:34 2007 +0000

    Remove two more IRubyObject methods:
    - getNativeTypeIndex moved to a separate interface; former uses now cast to that interface, rather than requiring all IRubyObject instances to specify a native type index directly. Marshalling should probably be refactored to not use this at all (and instead polymorphically dispatch to a method on the target object, similar to how it used to be).
    - isKindOf moved to RubyModule as isInstance and all references updated to use that version. This maps better to the type being in charge of what is or is not an instance, and mimics Java reflection API (Class#isInstance).
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5045 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d237a30fee4b2a8b2a34303eea80583c8a8872fd
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Nov 24 12:39:37 2007 +0000

    Added no-var and two-var versions of DynamicScope.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5019 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2c2a66b641fbccc9c04d41a7171f4f99172a143a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Nov 24 11:27:21 2007 +0000

    A fairly extensive refactoring of the relationship between bindings, blocks, and eval. Binding holds the frame and *containing* scope; this allows the binding contained within a block to be use for evals directly, rather than requiring hacks like the previous commit. When a block is invoked, a new DynamicScope is constructed at that time, rather than having an existing scope cloned. Similarly for evals, the first time a binding is used getEvalScope is called on the binding's scope (the containing scope for the eval). This causes a new eval scope to be created the first time and used for subsequent calls with the same containing scope. And again, this avoids contortions when constructing the binding, since the binding only need to contain the unchanging containing scope.
    
    This should make it a lot easier to implement the remaining specific-size dynamic scopes. It also simplifies scoping/binding logic and fixes a number of eval/binding/scoping issues.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5018 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ec4f90b7e092bb1469913ee818c3dcaf2a7c5070
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Nov 24 04:50:54 2007 +0000

    Based on discoveries by Marcin, confirmed by Ola, adding capability for separate DynamicScope implementations that use fields instead of an array for scopes with small numbers of variables. This primarily improves compiled performance, since the compiler can statically dispatch to methods that amount to little more than field access. I will add additional DynamicScope impls for 0, 2, and 3 variable scopes.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5015 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3e9c6ccab41022a64edb2c85e5eaf98a8aabfb26
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Nov 24 00:07:31 2007 +0000

    Removing a couple more callMethod implementations; remaining are heavily used, so I may stop here for now and copy-paste then into new IRubyObject impls.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5014 961051c9-f516-0410-bf72-c9f7e237a7b7

commit f6bb9399ed02f2384e1b199a93860ed9b0bb947a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Nov 23 23:31:28 2007 +0000

    Eliminate two callMethod versions from IRubyObject, in favor of a few RuntimeHelpers.invoke* variants that go straight to invoke methods on the metaclass. This helps move invocation logic out of (I)RubyObject to reduce the implementation load. More to come.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@5013 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 5eee3adecb1e079b52895077e9d761e80591c5e2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Nov 23 06:48:45 2007 +0000

    Performance improvements for compiled hash literals, as well as using the same RubyHash method as interpreter.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4993 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 375fbd7e6046b408bedddde3d51054d1ca69e4a9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Nov 11 23:18:00 2007 +0000

    Make method generator smarter about not calling callconfig when there will be nothing to do. Primarily useful for frameless compilation.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4922 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 19636991b348aef4adb1a3eeaee4017d3b79fad1
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Nov 10 12:22:12 2007 +0000

    Split out light vs non-light compiled blocks into separate types, to avoid the check
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4903 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1762f4b9535fb0d94be964b48bc9fc9ec3d5f051
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Nov 10 10:25:30 2007 +0000

    Block refactoring: Break out executable block bodies into their own hierarchy, with Block as a closure abstraction to contain binding + body.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4901 961051c9-f516-0410-bf72-c9f7e237a7b7

commit b13d510c1a617cd792d486e702dbd3e21dd5c89c
Author: Bill Dortch <bill.dortch@gmail.com>
Date:   Tue Oct 30 06:44:22 2007 +0000

    Concurrent SymbolTable implementation. About 5% faster (in bench_symbol) than the ST code introduced in 4580 (which is mostly reverted here), and now threadsafe.
    
    As with the concurrent vars code, should perform especially well in multi-threaded applications.
    
    For interpreted mode, caches the symbol at the SymbolNode (almost identical to Fixnum handling).
    
    Still _much_ slower than MRI in bench_symbol (unlike vars/constants, where we're faster now).  Could be much faster if we cached the Symbol in compiled code.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4787 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1df625505f7816f712daddf43b9c3431ce915990
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Oct 27 01:29:07 2007 +0000

    Fixes for JRUBY-1451, verbose warnings should include one for uninitialized vars. Also fixed -
    v not running a given script.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4758 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 47fc3bf1ebb3d45594f50d9ccc88d56e8aadeba2
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Oct 26 19:26:48 2007 +0000

    Fix for JRUBY-1468, fixes the original issue, adds a whole raft of tests, and fixes a few additional issues discovered.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4747 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 880dbd21f95a989c5bb5664bb532d9534255f3f9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Oct 19 18:51:31 2007 +0000

    Remaining fixes in compiler for JRUBY-1446, and enabled a couple tests for it.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4621 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 95c346df5368a3f5f06fa9d14022efb85eaa6809
Author: Bill Dortch <bill.dortch@gmail.com>
Date:   Mon Oct 15 07:45:22 2007 +0000

    Vars have landed. Does not include concurrent SymbolTable (will follow in the next day or so). Also need multi-threaded unit tests, work in progress.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4588 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 9c10a7b032a7169c2b11a7d770dc576296e6f703
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Oct 10 05:01:33 2007 +0000

    Migrate Math, Method, and Marshal to annotation binding
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4542 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ba060fb4180f15563ba664403ba62cdd66391e40
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Oct 8 16:35:11 2007 +0000

    Migrated String to annotated methods
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4511 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 4cd867ce50318e77a30ae9798e5d707489f040ad
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Oct 8 13:38:19 2007 +0000

    Convert Visibility into an enum
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4504 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 5a03233233b8fb26eb75e6b9cf6fcb437ff9a27a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Oct 8 04:33:49 2007 +0000

    Removing unused rest arg utility method
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4500 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ec3aea9c4fa57fbc4da545257395c9df09d33719
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Oct 8 04:29:40 2007 +0000

    Remove some duplicate object array constructors in RuntimeHelpers
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4499 961051c9-f516-0410-bf72-c9f7e237a7b7

commit a70b007a27f8191431f2cd947653459c6c8f78c9
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Oct 3 12:19:45 2007 +0000

    Support for stack-based closures. Because the innermost closure's variables are not visible to any other scope, even when repurposed as a binding, those variables can safely be stack-based.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4470 961051c9-f516-0410-bf72-c9f7e237a7b7

commit f3e313d3caac6d1d49e761b263d8481db71bdfa7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 2 15:17:06 2007 +0000

    Misc cleanup in the compiler, reduction of code for regexp and match3
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4464 961051c9-f516-0410-bf72-c9f7e237a7b7

commit ffb259216dbb64ce9846cbe6c6e6639b9e598532
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 2 06:05:19 2007 +0000

    Rename EvaluationState to ASTInterpreter.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4454 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 18311c2eefb821a86bbe332696bc3580a983c47d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 2 05:54:55 2007 +0000

    Renaming CompilerHelpers to RuntimeHelpers, since it's becoming a common place for utility methods for both compiled code and interpreted code.
    
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@4451 961051c9-f516-0410-bf72-c9f7e237a7b7
