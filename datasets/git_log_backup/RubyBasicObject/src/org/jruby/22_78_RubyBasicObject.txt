commit 995071d2921aa07d396a454eddd02edebbed1bca
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Jun 22 22:08:33 2013 -0500

    Never raise error from RubyBasicObject.compareTo, for flexibility.
    
    See https://jira.codehaus.org/browse/JRUBY-7013 for a case where
    we need this to interoperate with a newer collection in Java 8.

commit f76837bb3d758189daf992ff81e30d0dbdbd1cf3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jun 21 08:11:16 2013 -0500

    Omit send and __send__ from backtraces (1.9+).

commit c4f3b41c69268bd298a44b9f45106ac6c0436f0e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri May 17 12:12:03 2013 +0200

    Use non-overridable ensureInstanceVariablesSettable for frozen.

commit 81fd7211821ede5703801925ce8ebd6b71d27280
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu May 16 14:35:54 2013 -0400

    Move remaining references to varTable out of RubyBasicObject.

commit 66f2183daeaebab3e6fc4d12464c4d72076de470
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon May 13 20:01:14 2013 -0500

    Rewire invokedynamic to new accessor logic.
    
    Instead of going through the virtual impl of
    IRubyObject.getVariable and setVariable, this patch utilizes the
    newly refactored ivar logic to make a more direct path from indy
    call sites. Incoming objects are cast to RubyBasicObject to avoid
    interface inlining issues. realClass is cached in the call site
    as it is for normal invocations. And we dispatch directly to
    either the synchronized or the stamped versions of varTable update
    logic to avoid constantly checking whether we have Unsafe support.
    
    As a result, red_black sees about a 30% improvement from the
    combination of this change and the previous refactoring of ivar
    logic into separate paths.

commit 98c94f1c2c0bfcfa31148bcd534183dee490a580
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon May 13 18:45:15 2013 -0500

    Split synchronized and stamped ivar logic into separate accessors.

commit 423bac1eda6688fd7a258a8cad321a1d2530f105
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon May 13 15:45:18 2013 -0500

    Move varTable logic out of core classes into its own object.

commit 2997b7ae0c48693c7b5d1c6bdaa9690603b9ccbe
Author: Alex Tambellini <atambellini@gmail.com>
Date:   Sat May 4 23:53:57 2013 -0400

    Kernel#singleton_methods should return a unique list of methods

commit bfffb0e9a1872ce29f81ad6d330e9f19c5f096aa
Merge: 3b360bd 99bcf8d
Author: Hiro Asari <asari.ruby@gmail.com>
Date:   Fri Apr 12 19:46:55 2013 -0700

    Merge pull request #600 from rdblue/fix-cmp
    
    Fixing RubyBasicObject#compareTo bug.

commit 5c401c1ed734b9cf0865aee2331a66cd1c44c641
Author: Andy Lindeman <alindeman@gmail.com>
Date:   Sun Mar 31 14:26:20 2013 -0400

    An object's ID is not copied
    
    Fixes JRUBY-7136
    
    Signed-off-by: Wayne Meissner <wmeissner@gmail.com>

commit bb98e4b8decffc0361b70a6c99c1ade5fed0abcb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Mar 28 10:02:33 2013 +0000

    Move RuntimeHelpers to org.jruby.runtime.Helpers.

commit 99bcf8dfeffbe1054a94f79759bdfb4051f2f37e
Author: Ryan Blue <rdblue@gmail.com>
Date:   Sat Mar 23 16:33:08 2013 +0000

    Fixing RubyBasicObject#compareTo bug.
    
    All IRubyObjects implement Comparable and the default compareTo implementation
    delegates to <=>. When the ruby object doesn't implement <=>, ruby raises a
    NoMethodError. Because compareTo is called from java but the exception raised
    is in ruby, the exception makes no sense: it has the ruby stack when ruby
    called into java. For example, this happened on an Iterator that kept min and
    max references. This iterator was implemented in java, but called by ruby so
    the exception's stack ended with the call to next in java::lang::Iterator#each,
    but was a NoMethodError for <=>.
    
    This fix catches the NoMethodError and throws an IllegalArgumentException
    wrapping it. This isn't a great solution because java callers expect compareTo
    to succeed when objects implement Comparable. There may be a better java
    exception to throw. This also updates the javadoc to avoid confusion.
    
    In older versions, specifically 1.6.7, the op_cmp java method is called and
    returns nil. Then nil is assumed to be an Integer and coerced, which produces a
    TypeError. To be safe, this fix also checks the return value for nil when <=>
    succeeds and throws another IllegalArgumentException.

commit 61678ac1a2514a9932276f8d527816a5980a94b3
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 25 20:41:40 2013 +1100

    Fix more references to CPL.
    
    The phrase "Common Public License" was split across two lines in
    our default header, which caused it to be missed during earlier
    search/replace. Also, we did not replace the CPL URL in the
    header with the EPL URL.

commit 330fef3b0fc18af477ccea19bd278669667f31bb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Feb 12 14:49:29 2013 -0600

    Switch JRuby's CPL license to EPL.
    
    Governance of the CPL license was moved to the Eclipse Foundation
    at some point in the past, and Eclipse blessed the EPL (Eclipse
    Public License v1.0) as the successor to CPL. Because the CPL
    contains a clause allowing transparent upgrades to future blessed
    successor licenses, we can make the move to EPL without
    re-contacting past contributors.
    
    The change in going from CPL to EPL largely just removes some
    punitive language that apparently made many companies nervous. All
    other language in the license remains identical.
    
    Several documents about Eclipse's move from CPL to EPL are here:
    
    http://www.eclipse.org/legal/cpl2epl/
    
    Note that Eclipse's move came before the blessing of EPL as the
    upgrade path for CPL, so they had to do a bit more legal juggling.
    With Eclipse now the administrator of CPL and with their blessing
    of EPL as the upgrade path for CPL, all we need to do is make the
    move.

commit 120d34e94ed28c75d03e5458e26098317ae3916a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jan 25 00:26:11 2013 -0600

    Remove assertions on instance var name.
    
    I have run into two cases today where we are too strict about
    instance variable names.
    
    The first case I ran into was in Psych's accessing
    internal instance variables with private_iv_get. We used
    getInstanceVariable which attempts to enforce that all incoming
    var names are valid instance variables. MRI does not enforce this
    for C-level instance variable lookups, apparently.
    
    The second is in krypt, accessing internal variables for similar
    reasons.
    
    Because of these two cases, and because we *know* there's
    variables in the table with non-standard names, I'm removing the
    assertions.
    
    This allows JRuby + krypt to pass tests as before, even with
    assertions turned on.

commit 0e612dbd328ca94958c3db7277e4b64ffbdfc702
Author: the8472 <github@infinite-source.de>
Date:   Sun Jan 6 23:18:56 2013 -0600

    Switch to a new concurrency-friendly inst var table impl.
    
    (Description by Charles Oliver Nutter)
    
    The new logic ensures that if two instance variable writes
    occur and one or both cause the table to grow, no writes
    will be lost. This was an issue before this change, and
    under some circumstances early in a program's execution
    (or early in a type's lifecycle) could cause data to be
    lost.
    
    See the concurrency-interest thread starting here:
    
    http://cs.oswego.edu/pipermail/concurrency-interest/2012-December/010499.html
    
    The implementation has three forms, for different JVM
    setups:
    
    * A version using OpenJDK 8's "fences" API for explicitly
    performing memory fences.
    
    * A version using volatile fields and Unsafe.
    
    * A version using full synchronization.
    
    The first version is preferred, if the JVM supports it. If
    running on a non-OpenJDK 8 (b71+) JVM, the volatile +
    unsafe + atomics version is used. Otherwise, we fallback
    on a plain synchronized form. In most deployments, this
    will not happen.
    
    Performance of the new code does not appear to be
    significantly better or worse than the old code on the
    red/black benchmark we frequently use for testing.
    
    http://i3.minus.com/ibzMT8X2FkyzJn.png
    
    There will almost certainly be additional work in the future
    to make instance variables faster, more concurrency-
    friendly, and with more explicit volatility options and
    guarantees.
    
    Many thanks to @the8472 for doing the research and
    development of this new logic. Thanks also to the folks
    on the JVM concurrency-interest list for helping us
    settle on the right amount of volatility and fencing
    needed to meet our guarantees.
    
    Squashed commit of the following:
    
    commit 1679870e21cf574f214d4b8b354836d8e7f0b88d
    Author: the8472 <github@infinite-source.de>
    Date:   Sun Jan 6 07:50:11 2013 +0100
    
        due to the switch from atomic field updater (which had implicit fences)
        to normal volatile access we need to upgrade to fullfence.
    
    commit 48c3527bcceae94d11a699c554b98d04eff5a486
    Author: the8472 <github@infinite-source.de>
    Date:   Sun Jan 6 07:48:54 2013 +0100
    
        spec did not not run long enough to catch all failures -> bump up
        iterations
    
    commit 61b8ed28de809213b3c4362ef57ac17ccb8eca0f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Jan 6 00:11:38 2013 -0600
    
        Provide an Unsafe from Java 8 to build against.
    
    commit 626a2404f77c792d221889439d7ee08151496cec
    Author: the8472 <github@infinite-source.de>
    Date:   Sun Jan 6 06:43:55 2013 +0100
    
        better separation of sync/unsafe code paths -> fix NPE
    
    commit 5fdc9635ae9c6b02faff822ac2d94bba44297375
    Author: the8472 <github@infinite-source.de>
    Date:   Sun Jan 6 05:57:42 2013 +0100
    
        remove stacktraces.
    
    commit f4801eacea58dd314eb632218862b3e7ab38a976
    Author: the8472 <github@infinite-source.de>
    Date:   Sun Jan 6 05:46:25 2013 +0100
    
        java6 has no precalculated offsets in Unsafe -> calculate them ourselves
    
    commit d1b61e267189827143c035ef16cf7635a68e7890
    Author: the8472 <github@infinite-source.de>
    Date:   Sat Jan 5 22:22:29 2013 +0100
    
        remove unused imports
    
    commit f9b9153f67adf1f6d9b0b6be24a673018c5713a6
    Author: the8472 <github@infinite-source.de>
    Date:   Sat Jan 5 21:49:32 2013 +0100
    
        return to original load order and java 1.6 compliance level since we
        don't need method handles in UnsafeHolder anymore
    
    commit 93c397d426c320d9a57e68f39318f238e8767a68
    Author: the8472 <github@infinite-source.de>
    Date:   Sat Jan 5 21:48:53 2013 +0100
    
        add java 1.8-equivalent sun.misc.Unsafe stub to build against (needs to
        be integrated into build process) and remove method handles from
        UnsafeHolder
    
    commit ced082bb47b2bff45dcea9d11b3a7ae73eb9cdc0
    Author: the8472 <github@infinite-source.de>
    Date:   Fri Jan 4 14:24:31 2013 +0100
    
        improve spec and bench
    
    commit 68d51b28e28d1af2fbb341421b4baac32d6a87f8
    Author: the8472 <github@infinite-source.de>
    Date:   Fri Jan 4 14:24:05 2013 +0100
    
        get rid of AtomicIntegerFieldUpdater, it performs class inheritance
        checks checks. bad for opto.
    
    commit bc865bc5748a3ea798415be0d3f05efe8462e7c1
    Author: the8472 <github@infinite-source.de>
    Date:   Fri Jan 4 14:22:57 2013 +0100
    
        call unsafe directly to make the profiler happy (swap for commented-out
        code to use method handles)
    
    commit 554c6ec3f04fee23b806ca4b8497585440942fd3
    Author: the8472 <github@infinite-source.de>
    Date:   Fri Jan 4 04:47:53 2013 +0100
    
        improve test to do proper warmup
    
    commit 0b5bee059dda838cf3cab3e3dd52287a06cd6ae4
    Author: the8472 <github@infinite-source.de>
    Date:   Fri Jan 4 03:56:22 2013 +0100
    
        benchmark for ivar access
    
    commit 67f4e58fe0d2bd7013b3b35a931291878dd6c683
    Author: the8472 <github@infinite-source.de>
    Date:   Fri Jan 4 00:28:35 2013 +0100
    
        failing test for github issue #476
    
    commit 10db883df55918fb0248b10ec7276c11c83e20b9
    Author: the8472 <github@infinite-source.de>
    Date:   Thu Jan 3 23:30:00 2013 +0100
    
        move up JDK in build order to take precedence over jsr292-mock for
        building
    
    commit 74ac1d229f6774777c0ff06a1f1b56f79748c065
    Author: the8472 <github@infinite-source.de>
    Date:   Thu Jan 3 23:28:58 2013 +0100
    
        update to current maven-eclipse builder and project nature
    
    commit d0e667d6b5abe9f4f132d66641e965cbb2d9265b
    Author: the8472 <github@infinite-source.de>
    Date:   Thu Jan 3 23:28:09 2013 +0100
    
        add copyright header template and switch to java 1.7 building for now
    
    commit 9cece1815633ca4f765ed1c9815386a79a380f93
    Author: the8472 <github@infinite-source.de>
    Date:   Thu Jan 3 23:26:35 2013 +0100
    
        initial work on stamped lock ivar table
    
    Signed-off-by: Charles Oliver Nutter <headius@headius.com>

commit 2c746af24d95524f837e1cb2b7013fac5a7957bd
Author: Wayne Meissner <wmeissner@gmail.com>
Date:   Mon Dec 17 08:24:48 2012 +1100

    Extract the many copy'n'paste variants of VariableAccessor access/allocation routines into a VariableAccessorField class.  This makes the code cleaner, but at the cost of an extra reference indirection during VariableAccessor lookup.

commit 9864ed7eb4dd3eb0466d16ea94c72f9f032eae4f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 16 20:55:31 2012 -0500

    ObjectSpace tweaks:
    
    * Check config only once and choose ObjectSpacer impl. This
    avoids boolean checks along object construction paths, and allows
    ObjectSpace logic to boil down to an empy inlined method when
    ObjectSpace is not enabled.
    
    * Never follow ObjectSpace-aware constructor path for Floats.

commit c6013c59228b377aa9f8fb0626340fa7831af667
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Oct 17 10:59:42 2012 -0500

    Move Java-sourced dynamic call logic to MethodNames enum.

commit 8b0dda69012f9872128c86670cb7ed564205370e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Oct 17 11:17:54 2012 -0500

    Small risk...removing from 1.7.0 release.
    
    Revert "ObjectSpace tweaks:"
    
    This reverts commit 4ceafef1fe56d57a2c20fa8d3acc060e3c482227.

commit 4ceafef1fe56d57a2c20fa8d3acc060e3c482227
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 16 20:55:31 2012 -0500

    ObjectSpace tweaks:
    
    * Check config only once and choose ObjectSpacer impl. This
    avoids boolean checks along object construction paths, and allows
    ObjectSpace logic to boil down to an empy inlined method when
    ObjectSpace is not enabled.
    
    * Never follow ObjectSpace-aware constructor path for Floats.

commit 527c316cbc703bfa51fbd88b25a6aa196849b60f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Oct 5 11:25:32 2012 -0500

    Add initialize_clone/initialize_dup and clone/dup calls to them.

commit a337dc66c28d19419b1cbc4abf50489c793539da
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Sep 28 13:05:58 2012 -0500

    Remove unnecessary zero-arity call paths for #send and #__send__

commit 9dc555372a2ac06ecb806e4dff418fe78c6fbc89
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Aug 21 13:32:15 2012 -0500

    Fix #266.
    
    We weren't using the "real class", which has the ivar list.

commit b8181cda909f6e42d7c0b7fffaabbe2a502f273b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 27 02:19:54 2012 -0500

    Inline all calls to ThreadContext.getRuntime to access the field.

commit 47fd4acb720385b7d7852e1876e28520aa0cf484
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 27 01:55:07 2012 -0500

    Remove all safelevel checks throughout JRuby (plus misc cleanup).

commit 846be19993cc1f76d0bf0d1c9ec4ed8ad0772793
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jul 24 16:56:16 2012 -0500

    Fix JRUBY-6766
    
    --profile slows down Array#join , which distorts profiling results
    
    This turned out to be a really good find.
    
    In order to avoid the cost of dispatching to methods like
    respond_to? and method_missing for value coercion, we pre-cache
    those methods in org.jruby.Ruby and use identity checks to
    shortcut faster, non-dynamic logic. This works well during normal
    execution, but under profiling all method objects are wrapped
    with ProfilingDynamicMethod objects that do the profile gathering.
    Because the identity of the original method then becomes obscured
    by the wrapper (which is created on a per-class basis) we always
    followed the slow path. The slow path in the case of
    method_missing raises an exception, and the exception backtraces
    were the source of profiling slowdown.
    
    I modified DelegatingDynamicMethod, the superclass of
    ProfilingDynamicMethod, to override equals() to consider only the
    wrapped method and fixed all related == comparisons to use
    equals(), ensuring that regardless of which wrapper was
    encountered the identity of the method would not be obscured. This
    returned profiled performance for e.g. Array#join to normal
    levels.
    
    I should note that this fix improves profiling performance for all
    coercion paths and methods that do coercion, so it has far-
    reaching implications.
    
    Thanks for reporting this :)

commit fdf8994e53ccdc8208ec3b37b1e694615ab1ef6c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jul 24 01:42:18 2012 -0500

    Do not include object_id value in the fast-copying syncVariables.

commit 5e58fded4e4bb74fbce9e38e3dc51994dcc83745
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jul 22 23:20:57 2012 -0500

    Move deprecated methods to bottom.

commit cd256537a4c99d1ebace3ac4c30571e1101b4e27
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jul 22 23:05:47 2012 -0500

    Perf improvement for object duping.
    
    When an object is dup'ed or cloned, all its instance variables
    must be copied as well. The original logic did this by walking all
    VariableAccessors stored in the object's real class, getting and
    setting each value in turn. The new logic shortcuts this process
    if the new realClass is the same as the old realClass, doing a
    direct copy of the varTable.

commit 88718c4696163536bb35e7d828b1ecb046383931
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Mar 29 07:38:59 2012 -0500

    Avoid virtual dispatch for context.getRuntime() in base == impl.

commit d8e9e220e3eda7418e8b7f385b7786ad2747bd9e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Feb 26 12:14:03 2012 -0600

    Attr reader/writer improvements and fixes for indy.
    
    * Don't use getMetaClass() when we can use metaClass field.
    * Don't cache fully-bound attr handle, since it's class-specific
    * Clean up and whitespacify var accessor-related methods
    * Reenable attr accessor opto in indy logic

commit 2c88a5b58ff5c0d41fb371dcce2c6eb7ac834912
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Feb 19 00:21:37 2012 -0600

    Reduce contention and overhead in object_id allocation.

commit c29f47c54c5db1570bee307b1eab112d821c4daa
Author: Wayne Meissner <wmeissner@gmail.com>
Date:   Thu Feb 9 14:15:51 2012 +1000

    Back each RubyString with persistent native memory when passing to a native function, as the transient memory backing (usually on the C stack) leads to confusion when it is reclaimed, and the native code was expecting it to be persistent.  This results in approx 150% (worst case) performance penalty for :string parameters, but its worth it to avoid differences between CRuby FFI and JRuby FFI.
    
    Fixes part of ruby-ffi #192 (https://github.com/ffi/ffi/issues/192)

commit fa1e1bc8063ee57a773e4b8188e8ca890fcf7e10
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jan 16 15:17:03 2012 -0600

    Fix JRUBY-6182
    
    Marshal.dump yields different value after adding/removing instance variables (and disagrees with MRI)
    
    * Remove the ivar table when it has no values remaining, so that
    marshaled output will not reflect a zero-length ivar table.

commit c53948bb2593047ddf7ac5335b0c0433301e3bdc
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 5 23:18:08 2012 -0600

    Fix JRUBY-6319: 'binding' returns wrong binding
    
    instance_exec was not setting the binding's self along one path.

commit 33a9b80c641b0715c7752abd946241e9cfe406eb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Dec 29 15:13:12 2011 -0600

    Implement the most basic functionality in Encoding::Converter.

commit f884df815df414c583ca008142bb15e485502986
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Dec 19 06:26:15 2011 -0600

    Fall back on synchronized vartable update on secure systems.
    
    AtomicReferenceFieldUpdater depends on security allowing access to
    declared fields via reflection. If that fails, we must fall back
    on a synchronized varTable update to provide the same atomicity
    guarantees.

commit f3725a1d8ba6433060c8f47a1493753bd0f8be9a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 17 11:12:11 2011 -0600

    Remove unnecessary locking on var table write access.
    
    The varTable we use to store internal and instance variables is a
    volatile field. Previously, in order to guarantee two threads growing
    that field did not step on each other, we synchronized around the
    grow logic. This unfortunately also meant that cases which required
    no growth would also be forced to acquire a lock.
    
    By switching the update to a CAS loop using AtomicFieldUpdater, we
    avoid the lock and only spin when there's contention. If no growth
    is required, the array is returned immediately. If growth or init
    is required, we do so atomically, to make a best effort at avoiding
    stepping on another thread's toes.
    
    Note that this change does nothing to guarantee the atomicity of
    variable writes or to guarantee that multiple threads will not miss
    each others' writes into the variable table, but the race conditions
    only apply early in execution during the very first writes to
    instance vars, when the class has not yet settled into a steady-state
    table size. Once there are no new instance vars being assigned, the
    table is allocated once, atomically, using the steady-state size.
    
    Note also that individual instance variables are still not atomic
    or volatile. If you need an atomic reference, use the 'atomic' gem.

commit 8b9c2ebecc5fda823bbc56d3b1bf495848e470eb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 17 11:12:01 2011 -0600

    Remove assert that can't be asserted during boot time.

commit 0980a6e2c06aae6d4218cb9afdab9349cb880e7f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 17 10:54:44 2011 -0600

    Javadoc fixes to appease IntelliJ.

commit 253442ee5ef6b87395a5b8a2935db41edac2cb46
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 17 09:58:47 2011 -0600

    Deprecate RubyBasicObject constructor with unused "canBeTainted" param.

commit 74c74e63d4b70f69ddddbf13a3990e5577830987
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Nov 17 16:33:57 2011 -0600

    Ruby 1.9.3 no longer has rest-arg #initialize on BasicObject.

commit ab39e221d1005f69206783ed8f6ee3f0981dcfb6
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Nov 16 12:50:06 2011 -0600

    Reduce overhead for default inspect logic's var-walking.

commit 25428dc9b51d7f43a1fdd7e0bba1269b355161e4
Author: Wayne Meissner <wmeissner@gmail.com>
Date:   Fri Sep 23 15:09:43 2011 +1000

    Add setNativeHandle/getNativeHandle to RubyBasicObject and use that to store/retrieve the native cext handle.

commit 0f4c255b2dbb085d4892848f8836e4e2c2848c26
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Sep 21 23:54:21 2011 -0500

    Turn off stupid stupid DEBUG flag I forgot to set to false before committing.

commit 6982b065dbd54ee519d055c59b63607d1fdcf10e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Sep 21 23:24:14 2011 -0500

    Move RString and RArray native handles to varTable.
    
    RString and RArray are cached in RubyString and RubyArray to avoid weak-caching
    handles or recreating handles frequently. However these fields add an additional
    32 or 64 bits to the size of all String and Array instances even when C exts are
    not in use. Since C ext use on JRuby is very uncommon, I've moved these fields
    into the lazily-allocated variable table, in the same manner as the rarely-used
    object_id. This reduces the size and allocation cost of all String and Array
    instances for the good of all JRubyists.
    
    The cost of retrieving the handles increases slightly due to hopping through
    getMetaClass.getRealClass, the accessor, and the array, but that cost likely
    pales in comparison to the already-high cost of C extensions, and only impacts
    Array and String instances that require native handles.

commit 8b9fdd2694366fce183de9060de0c797aefedc6f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Sep 12 15:12:02 2011 -0500

    Move 'digest' and related libraries under org.jruby.ext.digest.

commit d0aef726ee440417321a2914a91c2d42fe458a05
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Aug 31 18:14:20 2011 -0500

    Beginning of full Serializable support for RubyBasicObject hierarchy.

commit 64b4abd0eeff51ee2bdf8c365f871434627895c6
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Mon Aug 29 19:03:41 2011 -0500

    Kernel#send boxed arg version did not accept 0-length args arr

commit f31ddd479011c67f14efaad9733bc16a24b877d4
Merge: eef82e7 72ce56a
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Thu Jul 28 13:02:53 2011 +0900

    Merge branch 'master' into autoload-threadsafe

commit b7b313bed842e1852201c5779ad9f99b8cd29ad9
Author: Douglas Campos <qmx@qmx.me>
Date:   Thu Jul 14 02:53:28 2011 -0300

    refactoring logger for some core classes

commit d6f4edfc547baaf5d8cebbc3e3a874ba0132f8ad
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Jul 11 10:10:11 2011 -0500

    Add comments regarding fragile base class methods in the presence of reification, for JRUBY-5906.

commit 6f159fe5dd51c062a5b1aab64a8ede916990877a
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Mon Jul 11 03:36:17 2011 +0900

    Deprecation of fast constant access paths.
    
    Each os those has the same definition as non-fast verision.

commit 32fc188b6ae1659e4167a6ffcb2b5c4d25c9698f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jul 10 03:01:29 2011 -0500

    Add ThreadContext to 1.9 initialize methods and deprecate no-context initialize in RubyBasicObject.
    
    * Slightly faster default initialize

commit a4dcfabe38998daa648d17c1f4a41f98826b6185
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jun 14 16:06:44 2011 -0500

    More tweaks for volatile var table:
    
    * Fix debug logging to not NPE (thanks Brad Parks)
    * Reduce volatile reads to one for fast path in getVariableTableForWriter.

commit d0e0a88b2d4c5976c7921d8d67d6c7d6f90fb462
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jun 14 09:28:56 2011 -0500

    Additional tweaks for ivar table volatility.
    
    * Double-checked locking (safe, due to volatile) around null and size checks
    * Move null check out of getVariableTableForRead, since only consumer already checks it

commit 2f935de1e40bfd8b29b3a74eaed699e519571046
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Jun 14 02:59:41 2011 -0500

    Do not eagerly initialize volatile varTable field in RubyBasicObject; speeds object creation significantly.

commit 7588393ca5bfeba6182b87b8b47669ecab2fe403
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jun 9 10:02:23 2011 -0500

    Fix compilation issues under OpenJDK 7 after b142 with primitive + varargs now resolving as ambiguous.

commit 8c6dba0f8734a1bd12eb155036a6eba8e6d15f3e
Merge: 7837c84 fd957a1
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Wed May 11 12:26:08 2011 +0000

    Merge branch 'MersenneTwister'
    
    Conflicts:
    	src/org/jruby/Ruby.java
    	src/org/jruby/RubyArray.java
    	src/org/jruby/RubyRandom.java
    	src/org/jruby/util/TypeConverter.java

commit f6367310477a36b1c98b7c15b66bd845b4e456aa
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 27 19:52:14 2011 -0500

    Fix JRUBY-5729: Process.respond_to?(:fork) must return false
    
    DynamicMethod now has setNotImplemented and isNotImplemented, to indicate whether this is a "not implemented" method. JRubyMethod annotations specify notImplemented = true to change from the default false. Only patched fork, because ideally notImplemented methods would have no bodies at all and share an invoker.

commit dd0ede8696d8b684baacb15f5904279aff6debec
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Apr 2 12:20:27 2011 -0500

    Replace most slow core-to-core calls to ==, hash, and <=> with lighter-weight global cache hits.

commit 6dea01cafbcf88d58725283e093b378961a82f24
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Mar 15 14:37:54 2011 -0400

    Remove a safelevel in-constructor check I missed.

commit 6efe327863e33c7e9ca98188ff34e98202194a6b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Mar 15 14:22:32 2011 -0400

    Seriously? Eliminate safelevel checking in RubyBasicObject constructors.

commit 845a452b9b5ea192b1a3fa4f5026e5c7595f438b
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Tue Feb 8 15:22:59 2011 +0900

    Add some utility methods to TypeConverter.
    
    Prepare for importing Mersenne Twister impl.
     - Move checkIntegerType (our rb_check_to_integer impl) from RubyKernel
       to TypeConverter. This method had wrong visibility (default scope) in
       RubyBasicObject.
     - Add checkFloatType to TypeConverter as our rb_check_to_float impl.

commit 2597a800fd810208ad8b493fcd560c6a1e4ede9b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Feb 4 16:01:37 2011 -0600

    [1.9] BasicObject subclasses marshal like Object subclasses.

commit 1e09d92417e505c39baf06835b799cd19cce690d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 26 15:32:12 2011 -0600

    Remove some uses of varargs-based RubyBasicObject.callMethod.

commit 6eb8df5bd511405c8f7e465ec7e24d1223880508
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jan 20 14:24:01 2011 -0600

    Fix JRUBY-4871: [1.9] Attempt to invoke any method on Delegator leads to ClassCastException
    
    * Moved all methods defined by Kernel into pass-through methods in RubyKernel and impls in RubyBasicObject
    * RubyKernel, RubyBasicObject, and RubyObject now define their methods only from their own class
    * Arity-split 1.9 default initialize
    * Deleted RubyObject methods that only called super version
    * Also fixes JRUBY-5366: jruby 1.6 RC1 ruby 1.9: org.jruby.RubyBasicObject cannot be cast to org.jruby.RubyObject

commit 365100bfbd550e3bfc1378c8dcca32d32fa3a82e
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Wed Jan 5 23:20:13 2011 +0900

    JRUBY-5004: removed unintentional auto-boxing/unboxing

commit cb625fbd0062b08e61408ff8f37ca6c9ba1cfa1d
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Dec 9 12:07:05 2010 -0600

    Fix regression from incorrect respondsTo micro-opt. Also add a better error message for when we accidentally call UndefinedMethod.call.

commit 65f30012476d4efff6f47b984f8e14d32139976b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 8 14:25:01 2010 -0600

    Improve perf of Object#dup by implementing a new RubyBasicObject#syncVariables that's smart about the new variable table logic.

commit 42d8f82cdc2a6a9e54432b6643fe3db712479338
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Dec 4 07:54:49 2010 -0600

    Fix for JRUBY-4812: RubySpec: Module#remove_class_variable failures

commit 73019d77c363319cd86d0f15604f94f9d8dc3e1b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Dec 2 22:18:40 2010 -0600

    [1.9] Fix respond_to_missing? behavior for Kernel#public_method to pass false to respond_to_missing?.

commit 9103174645d1f834373a1e306c4073467538663f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Dec 2 16:58:34 2010 -0600

    [1.9] Implement respond_to_missing? behavior for Kernel#method. Also fix respond_to_missing? arity.

commit fd0fa789b21b30f294e8286b72b75fe3b688c27a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Dec 1 12:07:42 2010 -0600

    Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
    
    This is a squashed merge encompassing the following commits from "backtrace":
    
    commit eb0e24242050199ac1cc4cf6e48d93025f0186f4
    Merge: 32137de ea48d8d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 12:03:28 2010 -0600
    
        Merge remote branch 'origin/master' into backtrace
    
    commit 32137decc9351dd7b6a19c49c7955808f535bb9c
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 09:41:29 2010 -0600
    
        Fix remaining failures for test-all.
    
        * Disable CheckClassAdapter temporarily, since it disallows what should be valid JVM identifiers.
        * Use the presence of $RUBY$ in method name as an additional indicator that we're processing a compiled Ruby body during backtrace gathering.
        * Move some largely-static properties out of "init" target in build.xml, so they're available whether init is triggered or not (e.g. run.jvm.model).
    
    commit ee2a624201d5e9cd408d6ae793160aeb99b50b3d
    Merge: cd50ae5 88ad204
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Dec 1 08:01:22 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit cd50ae5f06b95a2fffab6bc1f3a7419f478d0a52
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 19:15:07 2010 -0600
    
        Get remaining spec failure with -X+C passing.
    
        * Embed the actual Ruby method name into the Java method for block bodies, rather than __block__.
    
    commit 52bbfffcae1aed62bf4afcb692bed9725e4e1564
    Merge: 4ed7235 1aace5e
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 01:37:15 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit 4ed723579101fffd8bfa73b30dc6e4e8991866f2
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Nov 30 01:31:44 2010 -0600
    
        Precompiled (AOT) specs *nearly* green.
    
        * Mark __method__ as reading frame "name"
        * Fix AOT-based stack trace mining logic
    
    commit 64e20aa939b5b9c6e41e0e9fe09039a0bb92794a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Nov 29 16:50:55 2010 -0600
    
        Jitted specs running green.
    
        * eval needs to set method name into the binding, so it's there for "__method__" in the eval'ed code.
    
    commit fd442c0a815bcab9eb6c9aa1b71e1f8a260ee03b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Nov 29 16:06:53 2010 -0600
    
        Interpreted specs green on backtrace.
    
        * Tagged some __method__ specs for which backtrace behaves like 1.9, which Matz apparently likes but was afraid to backport. Odd cases anyway.
        * Fixed method name for the block used to define_method.
    
    commit cedb27e430b422c1158f66b4dcc7769922433506
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 24 18:35:22 2010 -0600
    
        Reinstate deprecated java_to_ruby and ruby_to_java I removed, since it's still needed by some external libs.
    
    commit b48b17910de662b4e2d20ee8f4b5cc734eefc1ed
    Merge: f39007e 2ae4995
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 24 13:40:58 2010 -0600
    
        Merge remote branch 'origin/master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/RubySymbol.java
        	src/org/jruby/runtime/CompiledBlock19.java
        	src/org/jruby/runtime/Interpreted19Block.java
        	src/org/jruby/runtime/InterpretedBlock.java
        	src/org/jruby/runtime/MethodBlock.java
    
    commit f39007eca676c1e6ec9f891ac63b7c5d907b0d1b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Nov 18 14:01:29 2010 -0600
    
        Start normalizing the method/class names generated into Java by JIT and AOT compiler, to wrap up the remaining spec failures.
    
    commit 76e42c4b4522dc87c066d20051d02d1e4005b860
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 20:40:33 2010 -0600
    
        Disable dynopt for now, to allow better stabilization on the main feature of this branch: frame elimination.
    
    commit d03099690df2e16d423e8b6a8969e0264983237f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 15:00:14 2010 -0600
    
        Encapsulate "coreMethods" hash in Ruby and add "bound method" logic to default (non-generated) class populator. `ant test-all` runs green now.
    
    commit ed7458f72bce55b11e5231f8e7b9d590c09ca53d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 10:46:43 2010 -0600
    
        Fix incorrect use of fastSetInstanceVariable instead of fastSetInternalVariable in FFI.
    
    commit f09626121b6a8bea6ab39a3c8ed3ccd69f56b505
    Merge: f780b97 e8ca689
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 10:15:16 2010 -0600
    
        Merge branch 'master' into backtrace
    
    commit f780b972b1f3e18f4c2608d9536e797a0845cd1a
    Merge: 25ab5d3 6967ea7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Nov 17 09:04:42 2010 -0600
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/runtime/ThreadContext.java
    
    commit 25ab5d3d3f8c1fbf0fa334427b1485d322e83f86
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Nov 7 00:42:54 2010 -0500
    
        Don't do dynopt against calls that receive blocks; non-local flow is not properly handled yet.
    
    commit a4ad27056dcc3acf6bae0b0af7e618966d08a6dd
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Nov 6 15:22:40 2010 -0500
    
        Tag caller specs that do not pass with new backtrace logic (peculiar eval caller behaviors).
    
    commit eed8902084cfa06d4648935c1f70da57bf0c7a9c
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Nov 6 00:32:59 2010 -0500
    
        More fixes to get specs and tests green on backtrace branch:
    
        * Hash#index was not being bound properly from RubyHash#index19
        * Range#min and Range#max need super, and therefore need frame = true
        * tc_owned is a bad test and fails on system like OS X where (for some reason) / may be owned by user
        * test_trace_func had been hacked for a bad class result (Integer, instead of Fixnum)...fixed that
    
    commit 9d9f94c30de76fa25e738e70e84ea09163eca5cb
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Nov 5 20:03:22 2010 -0500
    
        Fix Kernel#caller to replace .java lines with Ruby lines. Brings specs mostly to passing.
    
    commit de433c771830e95c54f8196453208f2b312191aa
    Merge: 3ffe1cf e25c58f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Nov 5 17:40:02 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyIO.java
        	src/org/jruby/compiler/impl/StackBasedVariableCompiler.java
        	src/org/jruby/evaluator/ASTInterpreter.java
        	src/org/jruby/java/proxies/JavaProxy.java
    
    commit 3ffe1cfba86f52ee96d89f3a1c352597f22f76b7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 27 01:42:06 2010 -0200
    
        Fix compile error I accidentally merged.
    
    commit b081253fb3cdf5141f7f0cf76d3f8546837d9f42
    Merge: fc3028d ad68e22
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 16:30:25 2010 -0200
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/internal/runtime/methods/DefaultMethod.java
        	src/org/jruby/runtime/ThreadContext.java
    
    commit fc3028d9da2750c9d1c394600ab8ee712388724d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 14:39:29 2010 -0200
    
        Add better description for class bodies in backtrace
    
    commit d796555494c2237116c7477c932fd96cd30d2e20
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 26 11:36:29 2010 -0200
    
        Clean up and add color to Rubinius backtraces.
    
    commit 012f5357ce649bd5a996211fe231f26097bf4f5b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 16:23:04 2010 -0500
    
        Fix classloader check to allow for compiled method handles, which use a no-arg constructor.
    
    commit 473d48aac6a5523304188d1d433e4c12df989b89
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 16:10:32 2010 -0500
    
        Improve Proc-binding-based eval position info by propagating block's position into the binding and through to the backtrace frame.
    
    commit bcfd16b519b145c9ee055db1592dfaced05b71a0
    Merge: 4902faa 5b49583
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Oct 24 11:07:15 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyTime.java
        	src/org/jruby/runtime/ThreadContext.java
        	test/org/jruby/test/TestRubyException.java
    
    commit 4902faaf1678d5aecdef8b0b66f8ec78062aeec5
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Oct 21 09:28:45 2010 -0500
    
        Fix badly-merged RubyProc.to_s19, missing opening brace.
    
    commit 69177d7098f9dc4ff9096d08eee25c0d8bb4f971
    Merge: 801e764 f895837
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 20 21:50:53 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 801e7641b8838a8ae8931a9c6dcc5cf050096c4a
    Merge: 0c60a89 dda4644
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 19 23:16:41 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyDigest.java
        	src/org/jruby/RubyProc.java
    
    commit 0c60a89aa746f286588b218681e9ad25b11318c4
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 19 23:06:15 2010 -0500
    
        Only compile direct recursive calls when we haven't branched to another method body (e.g. for rescues) and we're not compiling a closure or class body.
    
    commit 18333fe82c808e8ed49eef898f19c86fa2d764b2
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 17:04:13 2010 -0500
    
        Get 1.8 specs running green except for a handful of Kernel#caller specs (which don't expect to see .java files in the trace...not sure how to deal with that).
    
        * Fix another literal-block-calling path that wasn't using callIter
    
    commit 366740120ee76d8df3f977edc1727b60b2d4ad63
    Merge: b64390b 6b243a3
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 10:35:14 2010 -0500
    
        Merge remote branch 'origin/master' into backtrace
    
    commit b64390b8cf0d2cb13e06d352969a093b5e86818d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Oct 12 10:33:39 2010 -0500
    
        Remaining fixes to get precompiled mode passing all our tests. Still some spec failures.
    
        * Bump up permgen max for test runs
        * Fix stack-based scope initialization to not leave an unused nil on stack
        * Ensure compiled method handles properly wrap pre/post logic for dummy and backtrace frames.
    
    commit 96bd3cbde91fc505b37ee13cbea6ffa3e8690c58
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Oct 11 18:36:34 2010 -0500
    
        First fixes for backtrace branch in precompiled mode:
    
        * Add test-precompiled build target for running just precompiled
        * Eliminate extraneous toplevel scope being pushed for precompiled loads (because that logic is all in the generated "load" method now.
        * Add a new scope descriptor decoding path that properly sets up a toplevel scope
    
    commit 0ebbd6ac46c9ac04558f5200f980f26f798b9413
    Merge: fc387be ac455fc
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Oct 6 21:53:18 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/RubyIO.java
    
    commit fc387befff57ada6c116b646a3dfb767cc926ee5
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 28 15:57:58 2010 -0500
    
        Renumber arguments for consistency.
    
    commit bbc91d3c4039bf6c26ceffd4899dcaaeaa3d46d0
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 28 15:40:38 2010 -0500
    
        Fixes to get specs a bit closer to running green.
    
        * Move pre/post logic for Script.load into generated code, so it's the same everywhere.
        * Make pre/post-load push a frame, so top-level of a script is always framed
        * Remove break handling from non-literal block call paths in CachingCallSite
        * Make sure all literal block calls are using CallSite.callIter, which handles break
        * Fix a bad test in testCompiler that needed visibility tweaks and framing
        * Add complete doco for CallSite
        * Fix Kernel#caller to trim from top of stack instead of bottom
    
    commit 4e814a24d5b2ef1b6567a3076a463ff9d08e2a0d
    Merge: 91dc13a 3dbcef3
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Sep 27 17:43:30 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 91dc13a2f0b74bc1054d83378782416465ecc1b8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Sep 27 01:02:48 2010 -0500
    
        Fixes to get test-compiled (but not precompiled) passing 100%.
    
        * Fix eqlInternal's RubyNumeric branch check if classes are equal
        * Provide file and line from all BlockBodies, so Proc#to_s can always use it
        * Fix rejiggered Struct#each and Struct#each_pair to call the appropriate internal version
        * Fix ruby_test's IO.new suite to not use STDOUT directly, risking that it get closed
    
    commit dc4af45352607ebb8a95d70befdcdb15c1111c58
    Merge: ec8bb7f 90275be
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 21 09:52:10 2010 -0700
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
        	src/org/jruby/RubyDir.java
        	src/org/jruby/RubyKernel.java
        	src/org/jruby/compiler/ASTInspector.java
        	src/org/jruby/javasupport/util/RuntimeHelpers.java
    
    commit ec8bb7fc31d4acd4ebcb040f088e19fb427448e8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 19 16:21:38 2010 -0700
    
        Remove frame = true from all core class methods, to reduce their call costs. A few remain for invokeSuper and methods that may still need frames.
    
    commit ec276b6ca0c6009702839b12d97664b9e52b1023
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 16 14:10:43 2010 -0500
    
        Eliminate RubyTuple use that snuck in.
    
    commit f80254100cfc17ac6eb558e465fc1fb9122c3ee4
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Tue Sep 14 10:07:53 2010 -0500
    
        Special case a few immutable core types in equalInternal/eqlInternal.
    
    commit eb66c45145e4fd1f8c28e9a8c544114f034116e8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 18:26:13 2010 -0300
    
        Performance changes for backtrace logic:
    
        * Back off using Java stack trace for Proc's to_s file+line, since it's prohibitively expensive
        * Move the Backtrace stack to being a fixed-size array of objects updated, rather than created, when a push happens
    
    commit 6f0ade5ab28946b8800431d3454d2e57fc0dbe19
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 11:36:07 2010 -0300
    
        Add generation guard around trivially-inlined logic.
    
    commit c4d8705217174580d35757dc85c5c646e980b57f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 06:18:38 2010 -0300
    
        Full speed ahead with a caching mechanism for calls from core classes. Only works for core class methods right now, but opens the door to expanding that.
    
    commit 5874abc01104f6c0f435f8ac4643ed0f77cf7cff
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Sep 12 03:43:37 2010 -0300
    
        Localize some fields used in Array#include? to speed up the loop.
    
    commit 346245cd5e154574d14736cf4b9e0b4b98260d14
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 15:02:41 2010 -0300
    
        Allow passing a number of iterations to bench_quicksort.rb.
    
    commit b4687022a1f00d0b63838b1c9daf00753fcfa93e
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 11:55:15 2010 -0300
    
        Fixes to get run-junit-compiled 100% passing on backtrace branch.
    
        * Fixed a couple tests that are too sensitive to core method line numbers or expected only .rb elements in the trace
        * Added a mechanism for procs to retrieve the most recent Ruby frame, for to_s purposes
        * Added comments for hybrid backtrace logic
    
    commit 15cd9b16cb2750d0e40ba478d07fe5bf265dc620
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 11 08:07:57 2010 -0300
    
        Add better logging to AnnotationBinder (for showing framed/scoped core methods), ASTInspector (for showing methods detected as framed/scoped and for reporting deopt flags as they are set), and JITCompiler (for dumping jitted methods' full classes and inspector results). New property jruby.jit.dumping=(true|FALSE).
    
    commit c4e6176498590d791868055025c2e72ded1ccf13
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Sep 10 02:10:20 2010 -0400
    
        Improve dumping of generated bytecode by including class and method name when possible.
    
    commit 07fc4215f6873f449f89d4f5da7a7e2e8963bc70
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 9 23:39:20 2010 -0400
    
        Make attr accessor's var accessor field volatile, to guarantee visibility across threads.
    
    commit e3a7cf5cd4d8ccd08407955779bdd94feb5e4ac8
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 13:26:48 2010 -0500
    
        Add missing "in" to caller backtrace lines.
    
    commit 7140c339f386959853f747d86cb2ea9a8afa6f2a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 12:10:50 2010 -0500
    
        Fixes to get tracing tests running in interpreted mode:
    
        * Off-by-one line numbers were off for MRI too. Fixed to correct line numbers
        * call and return for Ruby methods need to use impl class, not self class
    
    commit cbc9c4edab56807a023817d06db9c22441fa4b53
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 10:31:57 2010 -0500
    
        Fix runInterpreterBody to properly unwrap RootNode for "gets loop" execution.
    
    commit 3a09773058d8d58d5bf8f1b6fbebc494fc18f7c6
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 10:01:43 2010 -0500
    
        Make --bytecode attempt a recompile, so that dynopt and no-compile modes can still print bytecode.
    
    commit 4e48e722ba5ded10975af348738237fcb7fe9b2a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 09:23:38 2010 -0500
    
        Add a "full" backtrace style which does not omit any Java frames and interlaces the Ruby frames.
    
    commit 6f5057e3ae1e372bd66602dcc26864adc3270128
    Merge: 7006d31 811fd8d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Sep 8 07:48:47 2010 -0500
    
        Merge branch 'master' into backtrace
    
        Conflicts:
        	src/org/jruby/Ruby.java
    
    commit 7006d3175bbf4630921dfecaa4faef2a39a77205
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 4 16:04:28 2010 -0500
    
        Bytecode size reductions for stack-based nil-initialization of locals and for x, *y and x, * forms of masgn.
    
    commit 3a8fb16f020c2b9aaa6228605bdb3d8fd1b78ccf
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Sep 4 14:52:04 2010 -0500
    
        Do not do direct recursive invocations for heap-based scopes, since the scope is not currently being reset.
    
    commit ec00e99636667eff97a891917ae9ef37f94a6eb7
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Sep 3 19:55:24 2010 -0500
    
        Turn on dynopt by default, to aid testing of new logic.
    
    commit 9508e8a6925fce4f57a386ede867b3f8f9b67d38
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Thu Sep 2 12:40:38 2010 -0500
    
        Fix Time test that expected two separate Time.now objects to to_s the same.
    
    commit 65ba8b37a8a232495453e71b2a560c761b40893f
    Author: Nick Sieger <nick@nicksieger.com>
    Date:   Mon Aug 30 14:50:03 2010 -0500
    
        Use new backtrace info to set a more useful Java thread name
    
    commit 75b100604af39de52b26bdb21669136234424a0b
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 30 11:37:49 2010 +0900
    
        Fix ifne/ifeq bug in dynopt guard and switch DefaultMethod to not flip generations on JIT in dynopt mode.
    
    commit fe3b408629e94b7db0436152968bd6d2232f6c7c
    Merge: eea60da 85c64c6
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 29 20:33:06 2010 +0900
    
        Merge branch 'master' into backtrace
    
    commit eea60da3905c87c16fbb4e6c78fd7a07f842e4bd
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Fri Aug 27 14:09:44 2010 +0900
    
        Modify Java Fixnum fib bench to use the long call paths where possible, to be more like what compiled Ruby does not.
    
    commit a189563d9073208292e91aff3eb1c88489bd113d
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 15:07:21 2010 +0900
    
        Fixes for jitted/compiled backtrace generation
    
        * SClass in a method body needs to frame, so it has a jump target for non-local return
        * Compiled methods need to always have their ruby name in the method name, so it can be mined out appropriately
        * Synthetic calls, like to rescue bodies, need to gobble caller frames to avoid multiple entries
    
    commit 276226de611cb8d5af942148109c2a51982e7640
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 14:03:44 2010 +0900
    
        Add callNumber tracking to method handles, to properly handle return jumps.
    
    commit b94bcf119a54f52ab9be3c86bc5cc85078f20eee
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Wed Aug 25 13:16:25 2010 +0900
    
        More fixes for hybrid backtrace:
    
        * Get generated trace to be RaiseException's Java trace
        * Add Ruby exception name to the RaiseException message
        * Rewire and repair trace calls
    
        All main suite tests now pass in interpreted mode.
    
    commit dc9fcd3de0f3070507ac0a0647973d1e9f16ae4f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 14:38:47 2010 -0500
    
        Fix debug logging of exceptions being raised and patch a couple tests for new backtrace structure.
    
    commit 3acd3201d85e4da9186fa17d3a04bdc9db742e29
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 13:23:04 2010 -0500
    
        Include original source file in compiled Ruby, add missing "in" line for MRI rendering, and soften requirements in test_backtraces to allow for native elements in the backtrace.
    
    commit 728cf3983fbeffba944fe34a8b0e410cc1de041c
    Merge: 88a64de 0e9c956
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Mon Aug 23 00:18:07 2010 -0500
    
        Merge branch 'master' into backtrace
    
    commit 88a64de879446be3398ba7671b5fa1f3e46ce02f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:29:21 2010 -0500
    
        Turn on "positionless" compilation, since compiled code no longer needs to update interpreter backtrace frames. Also fix nil/null backtrace rendering.
    
    commit 5712a4ce285a5b3662c8ef8def2599223a232626
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:18:17 2010 -0500
    
        Fix off-by-one line numbers from interpreter frames.
    
    commit 519f4625b9d9658f50b986b1add560903ee453de
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 17:10:47 2010 -0500
    
        Remove some old backtrace code no longer in use and get all "backtrace" method handles to generate with no frame at all (since Java stack is used now).
    
    commit 424d967df8a3b6ba277bdb1b530d4f7f62ecbc4a
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 16:52:29 2010 -0500
    
        Get Kernel#caller working with hybrid traces, get Rubinius rendering working again (partially), separate gathering and rendering of backtraces.
    
    commit a00822740712ddd924896feccc10f015fd20d4be
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 15:32:08 2010 -0500
    
        Mine method names out of AOT and JIT compiled stacktrace elements and get JIT using the original name of the method.
    
    commit 039d184ac5f798aed21870a7552b66c5973ca0eb
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Aug 14 22:16:48 2010 -0500
    
        Simplify in-class encoding of StaticScope data.
    
    commit 876a762b8af88955bee598dfd0421805d9b47c40
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 01:41:44 2010 -0500
    
        Fixes to hybrid traces to get tests working better:
    
        * Omit Kernel#raise and the KernelJavaAddons rbRaise from traces
        * Handle getBacktrace when there's been no preparation
    
        Also modified test/testException.rb to allow internal line numbers for the "load" call, rather than MRI standard "whatever line it was called from".
    
    commit 06f1bd171d6897f651b3cebfd76551080acbfe40
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sun Aug 22 00:39:59 2010 -0500
    
        Move backtrace management to a separate stack and implement mixed-mode backtrace generation.
    
    commit ca40e73a7c136dfdd3853f0cd62a73bf70a3a08f
    Author: Charles Oliver Nutter <headius@headius.com>
    Date:   Sat Aug 21 20:56:50 2010 -0500
    
        Get all major interpreter entry-points passing through simple, known method bodies. First step toward mixed-mode backtraces.

commit 4563ea664a53eb04f6a02f48923cb133934902af
Author: Hiroshi Nakamura <nahi@ruby-lang.org>
Date:   Wed Oct 20 17:27:45 2010 +0900

    JRUBY-5141: [1.9] make BasicObject#!= do dynamic dispatch to '=='
    
    It invoked op_equal statically so '!=' did not follow overridden '=='
    definition.  Dynamic dispatch introduces performance drop but we decided
    apply this patch for CRuby 1.9.2 compatibility for now.  See JRUBY-5141
    for more details.

commit e8759b73ea6e36c673ee9e7a213ba152fc1d1a71
Author: David Calavera <david.calavera@gmail.com>
Date:   Sun Sep 19 01:03:33 2010 +0200

    [1.9] Array#pack returns strings in the right encoding

commit f93a491ed6b2d04070ec98604ef801c847895626
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jun 2 17:54:55 2010 -0500

    Fix for JRUBY-4839: ObjectSpace.undefine_finalizer does not work
    
    We need a way to test this without ObjectSpace enabled. All our test runs currently enable ObjectSpace to pass as many tests as possible.

commit da0b65ceb38651560b4d2a799b47f217a5f8b396
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Sat May 22 18:30:41 2010 -0500

    Fix remaining BasicObject specs and probably remove some obsolete tag files

commit 1338d58b812397c688a13981c08ea2b3a53cc54c
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Sat May 22 17:16:12 2010 -0500

    Move singleton_method_* and method_midding to BasicObject in 1.9 mode

commit e05b969291d44e3d42e14861e30ce189a52f1b5f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun May 2 02:09:26 2010 -0500

    Miscellaneous cleanup:
    
    * A number of findbugs items in the "threadsafe", "performance", "malcious code", and "experimental" warnings
    * Tidied up all NetBeans "yellows" in the files I touched
    * Removed now-defunct JRubyServer/Client/Service
    * Removed now-defunct ssa.rb and DAGBuilder

commit 3bb25878b19415b2423077616893ab5e63c3c8f0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat May 1 19:34:57 2010 -0500

    Don't let Finalizer hold a reference to associated object and use proper logic for getting an ID to use.

commit f6fdef24f9ce757e2a542b7fc5ff8b10fe143722
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 26 14:01:25 2010 -0500

    Fix re-coercion of a previously interface-duck-typed Ruby object to java.lang.Object; it should from then on return the interface impl object. Broke jruby-rack because the assignable check continued returning RubyObject even if there was a contained duck-typed impl.

commit 0450ff74766ed83bb05cdbc248074a6560f3f907
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Apr 26 10:24:21 2010 -0500

    Make sure the "hashy" inspect uses the identity hashcode of the wrapped object for JI.

commit 1b919d492bd5cf2132383d291369c14972f47f63
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Apr 23 14:31:57 2010 -0500

    Fixes (and more) for JRUBY-4737: Compatibility issue with Spring property from 1.4.0 to 1.5.0.RC1
    
    It appears that JRuby 1.4.0 allowed various objects to coerce to "void" by returning null, so this commit fixes that.
    
    In addition, I've tried to unify some of the toJava logic, making most implementations call super.toJava if they can't coerce to the requested type (allowing RubyBasicObject's implementation to try some other avenues or error out). I also added some additional coersion cases for Time to java.util.Calendar, java.sql.Date/Time/TimeStamp, and joda's DateTime (it already did java.util.Date).

commit 278ea7843d70289c0af23f2336bb6aed7cebacf7
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Apr 18 15:27:24 2010 -0500

    Restore 1.4- Java object #inspect output (hashy class with internal hashcode).

commit 50281fff10272dd5afe38e3b74a844e94490704f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Apr 1 22:24:45 2010 -0500

    Move vartable field on RubyBasicObject up by the other fields.

commit a55fcb067f99286c294536cfecfdeff70d2fd848
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Mar 9 11:36:03 2010 -0600

    Sweater unraveling for JRUBY-4615: java integration specs interference
    
    The original problem here was that depending on what order JI-related code was used, a different object could get cached for a java.lang.Class in ObjectProxyCache. Normally, it should just be the proxy wrapper, but some paths inserted a the RubyClass version of the class. This led to peculiar failures if specs were reordered.
    
    The fixes made here are as follows:
    
    * Eliminate all remaining to_java_object logic, which is where the bad OPC.put originated from
    * Move all coerce*ToJavaObject logic from JavaUtil into the appropriate toJava overrides
    * Fixes and modifications surrounding the above two changes

commit 5e4e94528548428dbef47eeff36767c70042b3ff
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 20 21:43:01 2010 -0600

    New object_id implementation with uniqueness guarantees.
    
    Because identityHashCode turned out to be very unreliable as a unique ID, I redesigned object_id logic to use a strictly-increasing AtomicLong for both ObjectSpace and non-ObjectSpace modes. The long is stored into our object variable table, which is lazily allocated. This does mean that when object_id is called on a given object, the parent's variable table size increases. However, this size increase only affects other objects of the same type that also have object_id called on them (as you would expect) or which have other instance variables (in which case the size increase is just sizeof(pointer) for the extra slot). In general, this should not increase memory usage substantially except for objects that have had object_id called. No additional memory is used for objects that never have object_id called against them or same-typed objects. Also, because the new object_id is based on a Long * 2, object_id is guaranteed to be unique up to 2^63.

commit 20a55f5cf699cd048bae65d2b56137018a62a09e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jan 20 14:26:13 2010 -0600

    Fix for JRUBY-4330: Turning ObjectSpace on after requiring rubygems breaks future gem require statements
    
    Modified ObjectSpace-based ID generation to use the same algorithm (System.identityHashcode based) as non-ObjectSpace-based ID generation.

commit e6c72780d9942527d89c535298026f8403416cbc
Author: Ola Bini <ola.bini@gmail.com>
Date:   Tue Jan 12 14:09:02 2010 +0100

    [1.9] Fix Array#join and Enumerable#join for 1.9

commit 386eeb69ce3e49daf844d1ab0b1b8c26b99ccb83
Author: Ola Bini <ola.bini@gmail.com>
Date:   Mon Jan 11 13:18:12 2010 +0100

    Fix several 1.9 type conversion problems in Kernel.String

commit 9a20ef31866c0a29bee3d1c25a439378cbe6cde6
Author: David Calavera <david.calavera@gmail.com>
Date:   Sat Jan 9 21:58:24 2010 +0100

    fixes JRUBY-4016: [1.9] #equal? is incorrect and behaves more like ==
    
    Signed-off-by: Charles Oliver Nutter <headius@headius.com>

commit dfe4d410549cfe818667e5cf0be1d5dedc28b583
Author: Ola Bini <ola.bini@gmail.com>
Date:   Thu Jan 7 16:37:47 2010 +0100

    Fix JRUBY-4174, make it possible to instantiate BasicObject, add BasicObject#initialize

commit a0decb399b5ce1916c45293c420ad4357ca029ce
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Nov 6 05:33:31 2009 +0100

    Cleanup of MetaClass-related logic.

commit 0fb714395bc9a35151d6e5f46069104500fb45ca
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Wed Nov 4 15:51:25 2009 -0600

    First landing of builtin attribute on methods so we can check to do builtin-specific optimizations + First methods on Array to use such an optimization

commit 7ed527822b6d2ad3e2b071376a5cd8062392ef08
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Oct 29 14:39:05 2009 -0500

    Disable id2ref and weak id association caching unless ObjectSpace is enabled. This speeds up __id__/object_id/id substantially. Also reimplemented a DRbIdConv to use a weak hash rather than id2ref.

commit 293500b0eb838c1239be91ca45ce0df1608c3b6c
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Mon Oct 19 16:31:02 2009 -0500

    JRUBY-4064: Yecht regression: require'ing rubygems now makes nil, true, false all tainted

commit bf2a7cb59a18bab9d41c1a0f1ee74c9162822178
Author: David Calavera <david.calavera@gmail.com>
Date:   Wed Sep 30 13:55:27 2009 +0200

    JRUBY-4021: fixes Hash.compare_by_identity NoMethodError
    
    Signed-off-by: Vladimir Sizikov <vsizikov@gmail.com>

commit 7a67bd07c400f7ebfdcc09175e3fbee7f8cc3a9c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Sep 22 09:34:37 2009 -0500

    Simplifications of existing coercion protocols; trying to reduce the weight of code that needs to be reworked.

commit 42be6f7d772e99724897d19c31fee3fa2010171e
Author: Nick Sieger <nick@nicksieger.com>
Date:   Thu Sep 3 14:57:28 2009 -0500

    Fix up I/O encoding handling so that IRB runs again

commit 1f55b84c129f5d931b830d4141194375a6f3e907
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Sep 1 17:49:57 2009 -0500

    [19] need to reaudit basic object equality, but this fixes JRUBY-3932 and does not seem to regress anything

commit 64638c0853e94ed32770abb719b136f896cd975a
Author: Josh Matthews <josh@joshmatthews.net>
Date:   Sat Aug 29 17:21:41 2009 -0400

    Fix JRUBY-3911: hpricot is busted when truncating multibyte strings
    
    Signed-off-by: Charles Oliver Nutter <headius@headius.com>

commit dc8d7f6cf8590cadafac2995738a23841f8621c2
Author: Ola Bini <ola.bini@gmail.com>
Date:   Tue Jul 21 20:37:18 2009 +0200

    Remove yaml based on JvYAMLb and add Yecht version 0.0.1 instead. Also update yaml tests as a copy from Ruby 1.8.7.

commit bcd79a6842bd8ae2294c5d347918e71ca5a4e550
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Jul 16 15:23:42 2009 -0500

    Large spike of annotation support for lazily-generated classes, plus a user-driven trigger to fire the reification. Highly experimental, subject to change.

commit 3fb66d14be28a56d7e3aaef92210e60494ec3af6
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jul 8 18:37:33 2009 -0500

    Add experimental code for reifying Ruby classes into Java classes at runtime. Enable with -Djruby.reify.classes=true.

commit d39a8972a8a938e2ccfb978c38b09eed55651679
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Apr 14 05:27:14 2009 -0500

    Add another constructor path to remove all possible overhead from RubyFixnum construction (i.e. a path that does nothing but initialize metaClass, with no objectspace or tainting check.

commit ead8b39afe3546d1e0496066142a0a382d430c4c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Apr 4 23:15:45 2009 +0000

    Fix ivar table to never shrink; ivar indices need to be strictly increasing and stay the same once reserved. Removal of ivars now just nulls the entry in the object's table.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9523 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3b266cf69f39ba501c32cc238cb898b24ed5a24c
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 1 00:13:14 2009 +0000

    Get remaining variables using the new ivar table, and get all tests running (minus one cvar issue I need to dig into).
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9509 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1a87714ed4824680eb24005bf01ae5b56472f119
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 1 00:12:48 2009 +0000

    Initial round of work on new ivar table.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9508 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 37f69c9a3eb1e063502eb2609b675286358bb1e9
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Tue Feb 24 02:36:36 2009 +0000

    Use flags directly to simplify tainted/untrusted.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9290 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 5b90b3f6e2084ebfc42af39801c7e98fb9b2678b
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Tue Feb 24 01:32:50 2009 +0000

    Much simpler, RubyBasicObject specific, _branchless_ infectBy that doesn't use interface calls. Covers 99% of core methods.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9288 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 218611bff7db661ace61ab872f9ed586720ec32b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 23 09:42:16 2009 +0000

    Fix taint/untrust propagation during gsub.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9277 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6a0c779962d990850dce2016a5f315e564a10c5f
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 23 09:01:18 2009 +0000

    Get untrust propagating through Object#dup.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9276 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 0346df0ba878a6e1b911051919df71b3e8f5b3aa
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 23 08:46:47 2009 +0000

    Fix clone passing untrust on to the new object.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9275 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 38420837403b163d0dac9ee65fb78cf237a71edc
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Feb 23 06:16:09 2009 +0000

    Add trust/untrust/untrusted? methods for Ruby 1.9, update RubySpec, and fix an expected error in Module#autoload.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9271 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 3fc5ce1617043d6064b37002348ec1a8a271bfd8
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Mon Feb 16 22:34:30 2009 +0000

    Ugh. 1.9 Range#step.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9200 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 2c92cf916ca9c0a6e43bb882bbf08d5df3778e79
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Sat Feb 14 22:36:17 2009 +0000

    Make RubyBasicObject Comparabe<IRubyObject>.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@9154 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 6a99411842923131d38becae503b37792e12c964
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Mon Dec 15 19:57:26 2008 +0000

    Remove bogus check, another 15-20% boost for instance variable assignment.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8350 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 9725665ee4961d152a8561caa3e82f0f8c48f25f
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Mon Dec 15 04:24:18 2008 +0000

    Implement instance variables as plain java fields (<=5) and turn it on by default. Seems to be faster than array ones, and faster than hash ones even in pessimistic case. bm_vm1_ivar at least 15% faster.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8342 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 1785d93207e70b7158811ade4eb57bcd0f407240
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Sun Dec 14 20:07:59 2008 +0000

    Fix the build (delegate variables in IncludedModuleWrapper for variable list related methods).
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8340 961051c9-f516-0410-bf72-c9f7e237a7b7

commit d6c971ca167cc9db347c281f01b0d6269b76e6a8
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Sun Dec 14 18:02:04 2008 +0000

    Big changes, remove 4 fields from RubyBasicObject (finalizer, dataStruct, variableTableSize, variableTableThreshold) Replace variableTable by variables (external org.jruby.runtime.builtin.InstanceVariableTable). The new structure supports packed mode (for <= 5 instance variable when it does linear search for lookup). Finalizer and dataStruct are now kept as internal instance variables. Need to review concurrency issues.
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8339 961051c9-f516-0410-bf72-c9f7e237a7b7

commit 412d2cb5d651786a395cb848b104f3d700870caf
Author: Marcin Mielżyński <lopx@gazeta.pl>
Date:   Sat Dec 13 19:00:03 2008 +0000

    An opt so no ArrayList is used when there's only one finalizer per object (most frequent case).
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8334 961051c9-f516-0410-bf72-c9f7e237a7b7

commit bf8db0bc4acaeed7900b867e821e959f254be0be
Author: Thomas Enebo <tom.enebo@gmail.com>
Date:   Sat Nov 22 22:57:11 2008 +0000

    Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)
    
    git-svn-id: http://svn.codehaus.org/jruby/trunk/jruby@8099 961051c9-f516-0410-bf72-c9f7e237a7b7
