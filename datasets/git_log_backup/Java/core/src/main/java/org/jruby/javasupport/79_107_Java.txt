commit d8a6401ebaf9e75db4c111518c1d6c472c4c0300
Merge: 3efcd1d e92030e
Author: kares <self@kares.org>
Date:   Tue Aug 18 13:24:28 2015 +0200

    Merge branch 'jruby-1_7'
    
    * jruby-1_7:
      some more comparable asserts including for the Java compareTo part
      native RubySymbol#compareTo since we expect to always be able to sort
      should not-rewrite jump exceptions twice as well (not just raise ones)
      delete un-used imports
      [ji] do not rewrite stack-trace twice for Ruby (raise) exceptions
      base compareTo should not silence all Ruby raised exceptions (fixes #2232)
      re-arrange rescue spec (we're about to spec some more behavior)
      only test nil return from Object cmp on 1.9 (on 1.8.7 its expected to raise)
      more of correct $! restore + use get/setErrorInfo for better predictability
      another incorrect $! with numeric coercion on <=> + cleanup getRuntime()
      Fix some consumers for #1601.  Don't leak out  if we are swallowing the raised exception
    
    Conflicts:
    	core/src/main/java/org/jruby/Main.java
    	core/src/main/java/org/jruby/RubyBasicObject.java
    	core/src/main/java/org/jruby/RubyClass.java
    	core/src/main/java/org/jruby/RubyComparable.java
    	core/src/main/java/org/jruby/RubyNumeric.java
    	core/src/main/java/org/jruby/RubySymbol.java
    	core/src/main/java/org/jruby/RubyTime.java
    	core/src/main/java/org/jruby/javasupport/JavaCallable.java

commit 3e57648dd56934778769dc961588f6d9f14cea3c
Author: kares <self@kares.org>
Date:   Mon Aug 17 14:16:54 2015 +0200

    delete un-used imports

commit 155a6a7c80dd3f416a65a5df5ac234bb3a1eae15
Author: kares <self@kares.org>
Date:   Sun Aug 16 19:06:41 2015 +0200

    remove moved internal class from java support's Java

commit 69f9741525255f629a8bde3e6f68376e0ca65e7c
Merge: af7f58f b2d759a
Author: kares <self@kares.org>
Date:   Sun Aug 16 18:28:10 2015 +0200

    Merge branch 'jruby-1_7'
    
    * jruby-1_7:
      add declaring class methods for Java/Ruby on JavaConstructor
      make the java method spec pass on Ruby > 1.9 (method names are symbols)
      move and add some more Java 8 interface specs
      use (Java 6+) compiler API instead of `javac` (to make sure right is used)
      increase return type on internal method
      re-use some code snippets within instance and meta java_send impls
      move JavaProxyClassMethods from Java into JavaProxy instead
      spec TypeError raised with java_send when there's a type mismatch
      spec how Java array[].to_s behaves on non-byte[]
      move byte[] proxy to_s into a specialized class
      avoid e.printStackTrace + init native ex.cause and cleanup RubyDigest some
      make require 'digest/bubblebabble' work (MRI compatibility)
      Fix Digest bubblebabble incorrect output on empty string
      Remove several layers on copying in babblebubble.
      Add direct BubbleBabble power from OpenSSH
      manually filter out matching callables with non-matching arguments length
    
    Conflicts:
    	core/src/main/java/org/jruby/ext/digest/RubyDigest.java
    	core/src/main/java/org/jruby/javasupport/Java.java

commit 83c15b313bbaf31bb824f67b1fd563e8b44d2e66
Author: kares <self@kares.org>
Date:   Sat Aug 15 16:51:33 2015 +0200

    move JavaProxyClassMethods from Java into JavaProxy instead

commit 236bfb382e625f4ad673866851bb200f10d4718d
Author: kares <self@kares.org>
Date:   Sat Aug 15 10:31:13 2015 +0200

    move byte[] proxy to_s into a specialized class

commit 838c8d7a991d1914357ce47db62f594aca27bc78
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Jul 24 22:32:10 2015 -0500

    CallConfiguration is not used by any DynamicMethods anymore.
    
    CallConfiguration used to be needed to determine how to frame and
    scope all methods in the system. However, in JRuby 9k it is no
    longer needed.
    
    * Core methods that need frame/scope have the pre/post logic
      generated in bytecode (for generated invokers) or in handles
      (for MethodHandle-based invokers).
    * Interpreted IR methods have their own flags for frame/scope, or
      have instructions that perform the pre/post logic.
    * Jitted IR methods always have emit bytecode to do the pre/post
      logic.
    
    After a quick inspection I found that there's no other uses of
    the callConfig field in DynamicMethod, so this commit removes it
    and deprecates the constructors and accessors. This should shrink
    all DynamicMethod subclasses by at least 4 bytes and perhaps 8. It
    also reduces the size and overhead of our generated populators,
    which might have a slight effect on startup.

commit bfb6c91d32b0146df8dfc858b20eb53a260cc978
Merge: 07ce81a aedbf26
Author: kares <self@kares.org>
Date:   Fri Jul 17 08:48:13 2015 +0200

    Merge branch 'jruby-1_7' into master
    
    * jruby-1_7: (36 commits)
      no need for "" + ...
      keep the test Java 6 compilable + more asserts
      method cache hash calc needs to acount for Proc
      support for matching proc-to-iface methods by arity
      improve resolving functional-interfaces
      avoid reflection in getFunctionalInterface
      some Java.getFunctionalInterfaceMethod asserts
      introduce a getFunctionalInterfaceMethod helper
      generix-ize some of JavaUtil's static helpers
      Make sure windows files generate signatures as part of post_process_artifacts
      Doh...how did this not get added
      Fixes #3135. Provide sha256 sums
      yet another multiple args proc-to-iface spec
      less deprecation warnings from implementation_spec
      clean + avoid deprecation warn in executor_spec
      less rspec deprecation warnings from ant spec
      avoid File#listFiles in spec since it's ambiguous
      spec for regression in proc to iface optimization
      Fix references to old mailing lists.
      Return nil when waitpid returns 0. Fixes #3117.
      ...
    
    Conflicts:
    	VERSION
    	antlib/extra.xml
    	core/pom.xml
    	core/src/main/java/org/jruby/RubyProcess.java
    	core/src/main/java/org/jruby/embed/util/SystemPropertyCatcher.java
    	core/src/test/java/org/jruby/embed/ScriptingContainerTest.java
    	docs/man/pom.xml
    	docs/pom.xml
    	ext/pom.xml
    	ext/readline/pom.xml
    	ext/ripper/pom.xml
    	lib/pom.xml
    	maven/jruby-complete/pom.xml
    	maven/jruby-dist/pom.xml
    	maven/jruby-dist/src/main/assembly/jruby.xml
    	maven/jruby-jars/pom.xml
    	maven/jruby-noasm/pom.xml
    	maven/jruby-rake-plugin/pom.xml
    	maven/jruby-stdlib/pom.xml
    	maven/jruby/pom.xml
    	maven/pom.xml
    	pom.xml
    	test/pom.xml
    	test/test_backquote.rb
    	test/test_kernel.rb

commit f1353e35fb1a76b1b007005fec82d73bd188e524
Author: kares <self@kares.org>
Date:   Thu Jul 16 09:56:26 2015 +0200

    improve resolving functional-interfaces
    
    if there's an abstract method implemented by the Object.class
    (e.g. equals) continue looking for the "real" single method

commit ddbed4b1a6f5d19d9fcab208edbd2d76c90c916e
Author: kares <self@kares.org>
Date:   Thu Jul 16 09:23:29 2015 +0200

    avoid reflection in getFunctionalInterface
    
    ... while checking whether method.isDefault()

commit e893bb157278f440c0c4691edeee78f0c0ae0977
Author: kares <self@kares.org>
Date:   Thu Jul 16 08:20:40 2015 +0200

    introduce a getFunctionalInterfaceMethod helper

commit a741a82fc802e483f7a8e798db34d7bc0824bb37
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Jul 7 09:54:39 2015 -0500

    Off by one error in proc to interface optimization for 2 and 3 arity paths (still missing test)

commit 99e6d3cca8a7bc1ccda9c961ccd72dace1c68728
Author: Thomas E. Enebo <tom.enebo@gmail.com>
Date:   Tue Jul 7 09:54:39 2015 -0500

    Off by one error in proc to interface optimization for 2 and 3 arity paths (still missing test)

commit 7df3e56395cf4dbd1d22089726680bb890adfcd9
Merge: e810614 967ca40
Author: kares <self@kares.org>
Date:   Fri Jun 5 14:20:44 2015 +0200

    Merge branch 'jruby-1_7'
    
    * jruby-1_7: (38 commits)
      basic BigDecimal sub-class test ... all working the same as MRI 1.8/1.9
      avoid deprecated newInstance + one less pattern to match on BigDecimal.new
      [bigdecimal] keep the simplified newInstance backport 1.8 compatible
      [bigdecimal] backport simplified newInstance impl from master
      minor BigDecimal code cleanup
      handle big decimal ** float value calculation (with Java double math) ... since we're now not raising users should get ~ the value they expect (closing #1967)
      static-ize and simplify private helpers
      BigDecimal should not raise error on pow/** with float arg (under 1.9 #1967)
      some more (internal) RubyBigDecimal dry-ing / tidy-ing
      do coercion on * and / (same as MRI has been doing since 1.8) ... fixes #2538
      handle BigDecimal cmp failure compatibly with MRI (fixes #2539)
      pass around context in BigDecimal impl + simplify cmp method's code
      move JI java.mat.BigDecimal test out of Ruby's BigDecimal tests
      [travis-ci] test-extended on jdk8
      if current directory is inside the classloader a spawn jruby process should do the same
      use the new bin stubs from new rubygems
      set ENV['RUBY'] when jruby.home is not regular directory
      Add support for http.nonProxyHosts and rework ENV_JAVA support.
      pik the right class in URLResourceTest
      use new JRuby.create to load script from command line script source
      ...
    
    Conflicts:
    	.travis.yml
    	core/src/main/java/org/jruby/RubyDir.java
    	core/src/main/java/org/jruby/RubyEnumerable.java
    	core/src/main/java/org/jruby/RubyEnumerator.java
    	core/src/main/java/org/jruby/RubyHash.java
    	core/src/main/java/org/jruby/RubyInstanceConfig.java
    	core/src/main/java/org/jruby/RubyModule.java
    	core/src/main/java/org/jruby/ext/bigdecimal/RubyBigDecimal.java
    	core/src/main/java/org/jruby/util/ClasspathResource.java
    	core/src/main/java/org/jruby/util/URLResource.java
    	core/src/test/java/org/jruby/util/URLResourceTest.java
    	lib/ruby/2.0/net/http.rb
    	lib/ruby/2.0/uri/generic.rb
    	maven/jruby/src/it/runnable/spec/one_spec.rb
    	test/test_backquote.rb
    	test/test_big_decimal.rb
    	test/test_dir.rb
    	test/test_file.rb
    	test/test_higher_javasupport.rb
    	test/test_load.rb

commit 56e87462169ee6e1732c3a269f42b892dd5af17c
Author: kares <self@kares.org>
Date:   Thu May 28 14:49:20 2015 +0200

    case args in proc-to-iface impl to avoid arraycopy native call for 1 and 2 arities

commit a1cb4099ed2cdb39d8a1f2b9d6383f79de5e250b
Merge: c815260 f7d09d0
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Apr 24 15:25:53 2015 -0500

    Merge remote-tracking branch 'origin/jruby-1_7'
    
    Conflicts:
    	core/src/main/java/org/jruby/javasupport/JavaSupport.java
    	core/src/main/java/org/jruby/javasupport/binding/Initializer.java
    	core/src/main/java/org/jruby/javasupport/binding/InterfaceInitializer.java

commit 2bdfb5aab5cee4ef8aa7e5f0d29daf6305740035
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Apr 24 11:29:27 2015 -0500

    Eliminate proxy leak by adding pre/post to unfinished proxy check.

commit f8c4bcd4f1f6139a377280a6349b3ea751064783
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 22 02:00:47 2015 -0500

    Add java_method, java_alias, and java_send to interface modules.
    
    Part of improvements to support #2857. Specs pending.

commit 563c402a6f814cb3b7d2e58170c4f915ed234d24
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Apr 22 02:00:47 2015 -0500

    Add java_method, java_alias, and java_send to interface modules.
    
    Part of improvements to support #2857. Specs pending.

commit 487938c6d0ff8d1c482d6d814e6c81761bd12af9
Merge: be01825 aaf1681
Author: kares <self@kares.org>
Date:   Tue Apr 7 16:15:45 2015 +0200

    Merge branch 'jruby-1_7'
    
    * jruby-1_7:
      fix compilation error left-over from 7774be525ac71997cd2ed75ef641c47078a704bc
      some more var-args tests - make sure var-arg (overload) methods are covered
      move ALLOCATOR into a static field
      guess the ivar list size (most objects have only @ variables)
      private can be static
      handle Ruby super -> Java constructor with var-args correctly (fixes cases in #2375)
      mark generated proxy class constructor with @java.lang.SafeVarargs if super is var-args
      time to start sharing the generic (handles var-args) argument toJava conversion
      use (and cache) the more Java [array] version of the API to retrieve proxy constructors
      avoid deprecated JavaMethod.create + make sub-class helpers final
      do the toJava conversion on site instead of constant indirection esp. in loops
    
    Conflicts:
    	core/src/main/java/org/jruby/RubyModule.java
    	core/src/main/java/org/jruby/java/invokers/ConstructorInvoker.java
    	core/src/main/java/org/jruby/java/invokers/InstanceMethodInvoker.java
    	core/src/main/java/org/jruby/java/invokers/SingletonMethodInvoker.java
    	core/src/main/java/org/jruby/java/invokers/StaticMethodInvoker.java
    	test/test_higher_javasupport.rb

commit 5fa2cb144e53dd6d4532f3b8ea1446515ce9a49b
Author: kares <self@kares.org>
Date:   Fri Mar 27 15:26:21 2015 +0100

    handle Ruby super -> Java constructor with var-args correctly (fixes cases in #2375)
    
    ... since we're storing an annotation "flag" on the gen constructor thus can support this
    should be safe to land on JRuby 1.7 since users should not assume raising behaviour !

commit 1e56da4dbbabe917f741a18e7a370d9ec3e42822
Author: kares <self@kares.org>
Date:   Fri Mar 27 09:27:19 2015 +0100

    use (and cache) the more Java [array] version of the API to retrieve proxy constructors

commit c26fe1ba92acad0de01273d4711711f8e2e690ec
Merge: ab4be7b dd9cf5f
Author: kares <self@kares.org>
Date:   Thu Mar 26 10:51:46 2015 +0100

    Merge branch 'jruby-1_7'
    
    * jruby-1_7: (35 commits)
      align added JavaSupport method name with convention
      test `[].copy_data` addon - also added alias so it can be used with 2 args as well
      cleanup and add tests from Java array addons ...  seems a litle strange
      move Java array assertions around from equality test
      should override proxy implemented call() with block as well
      export void early on with other (primitives) and test it's behaviour
      DRY-up interface-template impl ... (extracted some anonymous into inner classes)
      handle nested array.to_java conversion where element is already an array + cleanup
      implement array.component_type helper on the Ruby side + test how [].to_java works
      fix array factories `Java::int[1][2].new` as well as `Java::byte.new_array(3)` (#2749)
      unify and test the no-matching-callable raised error messages / hints
      handle yet another unnecessary "ambiguous Java methods found" warning
      add a JI test - setting a security manager created in Ruby
      use `getArity()` in favor of `getParameterTypes().length`
      use IntHashMap as callable cache for `__jcreate!` method and share a new-cache helper
      the intention here was to "use the lowest-arity non-overload" and we're finally there!
      as (most) Java invokers will not have overrides - they won't use the internal cache ... for loading up JRuby's built-in JI classes this saves up allocating > 2100 maps
      explicit inspect() method for JavaProxyConstructor + annotate with JRubyClass
      a working inspect for Java proxy methods
      empty class array count-- and make sure correct name is annotated with @JRubyClass
      ...
    
    Conflicts:
    	core/pom.xml
    	core/src/main/java/org/jruby/java/invokers/StaticMethodInvoker.java
    	core/src/main/java/org/jruby/javasupport/JavaMethod.java
    	core/src/main/java/org/jruby/javasupport/JavaSupport.java
    	core/src/main/java/org/jruby/javasupport/JavaUtil.java
    	test/test_higher_javasupport.rb

commit 81fa52facc86fce59798e8f7e9fd960a1c8a99e6
Author: kares <self@kares.org>
Date:   Wed Mar 25 10:17:44 2015 +0100

    should override proxy implemented call() with block as well

commit 24f3384d6acd1692402072b1693ddb1ff2ae98c1
Author: kares <self@kares.org>
Date:   Wed Mar 25 10:16:17 2015 +0100

    export void early on with other (primitives) and test it's behaviour

commit f0021549e38dea03e546401f56120d9645b283a8
Author: kares <self@kares.org>
Date:   Mon Mar 23 13:01:19 2015 +0100

    use `getArity()` in favor of `getParameterTypes().length`

commit c1e3392a2e779dcd2b06498562e58315b3839144
Author: kares <self@kares.org>
Date:   Mon Mar 23 12:59:32 2015 +0100

    use IntHashMap as callable cache for `__jcreate!` method and share a new-cache helper

commit b7dbefebaf8200faf04eb2049710a1972020403f
Author: kares <self@kares.org>
Date:   Thu Mar 19 11:49:59 2015 +0100

    JavaProxyClass - use toRubyArray + delay resolving constructors + re-arrange internals

commit 58487dd5735b8eaad4df5dac2d57881d71088890
Author: kares <self@kares.org>
Date:   Wed Mar 18 09:19:36 2015 +0100

    move (and name for easier debug) proc-to-iface method_missing method from JavaUtil

commit 805ccb822f92f985f98a8de8612ef4110236fe94
Author: kares <self@kares.org>
Date:   Fri Mar 13 23:57:13 2015 +0100

    use 'new' CallableSelector methods (with IntHashMap cache) for better performance
    + make the internals do less casting by making private methods type generic
    
    ... also made some of the callable concrete classes final

commit f4ff889704047e30192daf3b21e05b0e814b0d28
Author: kares <self@kares.org>
Date:   Wed Mar 25 10:29:38 2015 +0100

    avoid regression in loading Java classes with upper case package names (fixes #2742)
    
    ... caused by the internal cleanup (the regression is not part of any 1.7.x release)
    
    one can only test this with *-Xji.upper.case.package.name.allowed=true* but since there's another failure the feature introduces, this will need to be revisited

commit f2b9bf70c30160c1463ab59e76de9e477bed467c
Merge: acd4108 adeb887
Author: kares <self@kares.org>
Date:   Thu Mar 19 19:17:58 2015 +0100

    Merge branch 'jruby-1_7' into master
    
    * jruby-1_7: (24 commits)
      calculate 'sofisticated' type preference when ambiguous callables found (fixes #2595)
      in case there's an exact parameter match - do not proceed with argument matching
      do not do equals on Class objects (just compare by identity) + remove unused imports
      re-factored candidate matching loops - for more readability and less implicit iterator use
      cleanup the constructor search - keeping redundant ~ 'intended' code as comments
      a slight Java integration (mostly bootstrap internals) cleanup
      update CallableSelector's (Map) cache internals - so we can easily refactor further
      move Java.method_missing into native
      loadPaths list generics - easier to guess for JavaEmbedUtils consumers
      add a factory onto ClassValue since we're be instantiating the same (based on opt)
      one JRubyMethod with 2 names is enough to have
      more base-class sharing between JavaCallable method/constructor impl + minor tweaks
      move getArity/getParameterTypes into base class as finals + help used methods to JIT
      guess name-class hash-map size without internal resizing (currently <= 48 elements)
      after several concurrency fixes in Java integration - un-comment a multi-threaded test
      non need to cast intValue to (int)
      move (and tune) error logic from CallableSelector into the invoker impl where it's used
      align JavaField's value/static_value conversions and return values + test functionality
      correct (Java) equals/hashCode semantics for JavaAccessibleObject + minor tweaks
      Try turning off sudo:false to fix build issues.
      ...
    
    Conflicts:
    	.travis.yml
    	core/src/main/java/org/jruby/RubyObject.java
    	core/src/main/java/org/jruby/java/proxies/MapJavaProxy.java
    	core/src/main/java/org/jruby/javasupport/JavaCallable.java
    	core/src/main/java/org/jruby/javasupport/JavaEmbedUtils.java
    	core/src/main/java/org/jruby/javasupport/JavaSupport.java
    	core/src/main/java/org/jruby/runtime/Helpers.java
    	core/src/main/java/org/jruby/util/CodegenUtils.java
    	core/src/main/ruby/jruby/java.rb
    	core/src/test/java/org/jruby/test/TestCodeCache.java
    	test/test_higher_javasupport.rb

commit 9902ebd3bfe9908e4c863973f4b00c472d793bd7
Author: kares <self@kares.org>
Date:   Thu Mar 12 09:01:59 2015 +0100

    a slight Java integration (mostly bootstrap internals) cleanup

commit bf85781f79f85af29c2d9a4b3ea30a0c5b4968d3
Author: kares <self@kares.org>
Date:   Fri Mar 13 15:07:12 2015 +0100

    move Java.method_missing into native

commit a8522d937eddd96a439522a931ef6ad5dfb559b4
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Mar 2 12:30:58 2015 -0600

    Move rather than rewrite JavaSupport so we can merge from 1.7.

commit 983af6e8deac98eb47710bb718293fbd0520665b
Merge: f2359d1 b596b5a
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Feb 27 13:14:07 2015 -0600

    Merge remote-tracking branch 'origin/jruby-1_7'
    
    Conflicts:
    	core/src/main/java/org/jruby/java/invokers/ConstructorInvoker.java
    	core/src/main/java/org/jruby/java/proxies/JavaProxy.java
    	core/src/main/java/org/jruby/javasupport/Java.java
    	core/src/main/java/org/jruby/javasupport/JavaSupport.java

commit 79f0889692872b499a2c902331315db9e27f1fa1
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Feb 27 08:32:32 2015 -0600

    Cleanup, reduce duplication, refactor methods for proxy creation.
    
    * Java.getProxyClass is the one true way to get the Ruby proxy
      class for a Java class.
    * Unified more of class vs interface proxy logic.
    * Both #1621 and #2014 appear to be working with this commit.

commit 6631b8831929e394052981bc07291de4c96543d8
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Fri Feb 27 08:31:27 2015 -0600

    Remove Java namespace within Java class.

commit a63248b01e394898bf9da705e354966ccc929814
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Feb 26 15:22:28 2015 -0600

    Encapsulate new ClassValue fields.

commit 5d4a39d14b05bdc5b593d2a093ba25687789011e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Thu Feb 26 15:13:29 2015 -0600

    Remove JavaClass from participation in proxy binding.
    
    This commit makes several substantial changes:
    
    * JavaClass does not reference the associated proxy class; this
      now happens entirely through ClassValue logic.
    * ClassValue logic for the proxy class checks for uninitialized
      proxy in current thread, otherwise proceeding to creation. First
      thread wins, but if any two actually start building at the same
      time they will do the same work and one will be thrown away.
      This allows us to eliminate locking.
    * The "uninitialized" proxy reference now lives as a thread-local
      ClassValue.
    
    The basic logic for booting a class goes like this:
    
    * Request proxy from ClassValue proxy cache. If it's there, done.
    * Check for thread-local ClassValue unfinished proxy. If it's
      there, we're in a thread that's binding classes and return it.
    * Proceed to construct the proxy. Two threads may get to this
      point, but only the first one to complete its hierarchy will
      permanently cache the proxy.
    
    This appears to pass all our tests and passes tests for #1621.

commit 78e968ef4da7880c2f9f2c31098fc0d7d5eb39db
Author: Subramanya Sastry <sss.lists@gmail.com>
Date:   Fri Feb 13 23:43:16 2015 -0600

    Save/restore $! properly in the JRuby runtime
    
    * Whenever a RaiseException is caught and handled, the $! should
      be the restored to the previous value of the exception before
      the try-catch was entered.
    
    * This fixes #1601 and #2491 but additional code auditing and
      discussion will be helpful.

commit debe720185b946f492b66eb6011b26bbd97160df
Author: kares <self@kares.org>
Date:   Fri Feb 6 14:42:39 2015 +0100

    checkInheritable is redundant - we know it's a Class and newClass checks for singleton

commit 9a55be8fca6fe07a33c2c51e5b91bc6483f330b1
Author: kares <self@kares.org>
Date:   Fri Feb 6 14:41:29 2015 +0100

    rename internal helper method & move around get_proxy_class so it's easier to read

commit f4e7711b545a086a64084b33cfe9afd43a51eb23
Author: kares <self@kares.org>
Date:   Wed Feb 4 13:15:42 2015 +0100

    move (related) static getJavaClass helper into JavaClass (and name both accordingly)

commit 8fbf8dc51a9e958a6356ab06aa49bdfc9c7e887f
Author: kares <self@kares.org>
Date:   Sun Feb 1 00:38:35 2015 +0100

    one less static (Java) primitive map to initialize

commit ad8a71a11d1b03d74d04318dbae2c67cfa7f850a
Author: kares <self@kares.org>
Date:   Wed Feb 4 12:27:44 2015 +0100

    name.trim-ing seems "dangerous" as we're assuming a valid constant name up the stack
    
    ... it very likely never-ever trimmed anything

commit 728cd87d4776482cffaa2a89c1b6a416c2a57aee
Author: kares <self@kares.org>
Date:   Wed Feb 4 12:22:56 2015 +0100

    move `Java.const_missing` to correctly handle potentially concurrent const_set

commit 6b96e53d75e4cc79eb75309601e10ff9b01f74da
Author: kares <self@kares.org>
Date:   Wed Feb 4 11:59:34 2015 +0100

    review getProxyOrPackageUnderPackage and (slightly) unify with top-level's method

commit b0b0f46a31654dd99e7f63d57d24ce3d0fcdbd7e
Author: kares <self@kares.org>
Date:   Wed Feb 4 10:59:31 2015 +0100

    simplify and avoid unnecessary code
    
    - only pass context to (internal) getTopLevelProxyOrPackage method
    - setupJavaClass does not need a java_class argument (it's not used)
    - only intern string on addMethod (although it's likely redundat there as well)

commit 77ef13e8c9ed09d019b84772f863d981fd3092b3
Author: kares <self@kares.org>
Date:   Wed Feb 4 10:44:38 2015 +0100

    unify internal Java class loading into a single getProxyClassOrNull method
    
    ... has a desired side effect of improving "initial" performance
    due not re-raising ClassNotFoundExceptions within the Ruby runtime
    
    they also will no longer be reported by the runtime with log.exeptions=true

commit 4327ffe5f875ff8d7d8019dad79782840267e70c
Author: kares <self@kares.org>
Date:   Wed Feb 4 10:28:04 2015 +0100

    move Java package ClassProvider impl into an inner static class

commit 29e27e0aeefee3a5d369bb71635dd0c13aa9d92e
Author: kares <self@kares.org>
Date:   Tue Feb 3 21:42:46 2015 +0100

    re-use our internal getMethodFromClass with context arg everywhere

commit aadfcd085f720cf30c0879cf8c1c669de71e6265
Author: kares <self@kares.org>
Date:   Tue Feb 3 21:31:55 2015 +0100

    guard against concurrent Java:: package module initializations (in multiple threads)
    
    avoid warnings such as rb:42 warning: already initialized constant JavaUtilConcurrent
    
    probably related to #2014

commit 00fcfac7627dfb39450e4ad312da348c612ac620
Author: kares <self@kares.org>
Date:   Tue Feb 3 13:32:38 2015 +0100

    unify proxy class/module setup and hide methods such as lockProxy which are internal
    
    also hidden JavaClass' constructor as if it's ever instantiated outside JavaSupport's class-value cache it will start to break things badly

commit a85136323193c09d2c9900c497dadefdbba73cc3
Author: kares <self@kares.org>
Date:   Tue Feb 3 11:41:55 2015 +0100

    avoid the javaClass.lockProxy when it's already found - align with getInterfaceModule

commit 12df24561cc62b33aa779aa939a54be8ba1f7a0f
Author: kares <self@kares.org>
Date:   Thu Jan 29 20:56:17 2015 +0100

    more exercise in terms of code readability

commit f1783d4d5fe7e31914b1049554aa7448daef08c7
Author: kares <self@kares.org>
Date:   Thu Jan 29 17:23:01 2015 +0100

    make sure javaClass.setupProxy is the last call when creating proxy class
    
    + make the related code more readable

commit cf8781892032eb599609b5cc70c7641c4285eee2
Author: kares <self@kares.org>
Date:   Thu Jan 29 15:17:30 2015 +0100

    `context.nil` instead of `runtime.getNil()` ... also imports got re-arranged

commit 05495089ccba6b7946b3923c00eef8e9ee5858d2
Author: kares <self@kares.org>
Date:   Thu Jan 29 14:56:11 2015 +0100

    rename our internal JavaMethod impl used to access cached Java packages/classes

commit 59a98d5c661b84cf4177dd10a8661472e11ca355
Author: kares <self@kares.org>
Date:   Tue Feb 3 17:38:50 2015 +0100

    DRY out Java class-loading code + cleanup the Java module's impl guts

commit b4b70cd7caf8961bb84c3a3f031b7aec83d8f7a1
Author: Chris Seaton <chris@chrisseaton.com>
Date:   Sat Jan 31 16:16:36 2015 +0100

    Abstract JavaSupport into an interface so it can be mocked.

commit 28f5506f3fd6e913b44afd2c77b2ee5e52a179ee
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Dec 30 14:40:40 2014 -0600

    Depollute LOADED_FEATURES.
    
    * enumerator.jar, complex.jar, rational.jar are now "provided" as
      faux already-required libraries.
    * Do the same for jruby.jar and java.jar, standard since 1.7.

commit ed54aab184bed0dc9dbaaf90b357c8f793c33696
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Sep 17 13:40:36 2014 -0500

    Rip out the guts! Removing many non-9k runtime classes.
    
    * ClassCache is gone; it was hacky and problematic when compiled
      code held classloader-level (static) data, as when using indy
      call sites. Java 8 has also eliminated permgen, greatly reducing
      the hassle and overhead of loading jitted code. Finally, Rails
      and the other Ruby frameworks are now officially "thread safe"
      (or the teams are committed to them being so) and the multiple
      JRuby model of deployment is discouraged (or even deprecated).
    * All old JIT code is gone. It won't be useful for the new
      JIT.
    * Removed the last vestiges of Callback-based functions. If I
      remember right, there's some ext out there using them...we must
      find it.
    * Rewired JITCompiler to use the new JIT.
    * Rewired InterpretedIRMethod to use JITCompiler.
    * Moved OneShotClassLoader out of ClassCache (in org.jruby.util)

commit 1efce5caa2e40e76dfc9605eecb82c34a7992b73
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Aug 12 13:39:32 2014 -0500

    Eliminate unnecessary cast exception for every Java class on load.

commit 6c13a6ff44bf58bb93ff74156d0031cb71dd3c03
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Aug 11 14:02:16 2014 -0500

    Grr...I always reverse this relationship.

commit 4ac1b7f7773af7364dca320f2ffde53b8d35493e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Mon Aug 11 13:01:06 2014 -0500

    Eliminate unnecessary cast exception for every Java class on load.

commit 95637342f1ce0e4bf11362b2790bfc1f77c5a9bb
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Aug 6 13:36:00 2014 -0500

    Arity-split rest form should set required = min args.

commit f5313d521aa68dd45ce23407ea31aeddcfba4a1b
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Aug 6 13:22:20 2014 -0500

    More tweaks for exception-raising in JI calls.
    
    * Propagate ThreadContext through for stack rewriting.
    * Avoid creating intermediate objects for rewriting.

commit 465357af177d504279b316e5fad84cb525d1659e
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sun Jul 6 13:17:04 2014 -0500

    Pare down remaining frame = true native methods.

commit 9c758b4f31c0eeb50d77b3dad28438aca365e857
Author: tduehr <tduehr@gmail.com>
Date:   Thu Feb 27 21:54:56 2014 -0600

    fix initialize visibility

commit e0dcc5967b436e75dc6b406ffb4688b9d6d0b228
Merge: ca1bf5f acf5d25
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Feb 26 13:07:55 2014 -0600

    Merge branch 'initialize_fix' of github.com:tduehr/jruby into tduehr-initialize_fix

commit acf5d258db69e9ba73f329b809c0924d7e843c82
Author: tduehr <tduehr@gmail.com>
Date:   Thu Feb 20 16:22:22 2014 -0600

    correct visibility of initialize* and respond_to_missing? methods

commit 30eb5567542c2bb8d3e5830556126dad0dc1f8b1
Author: William Thurston <me@williamthurston.com>
Date:   Sat Feb 15 14:07:31 2014 -0800

    provide a pass through of the java error for easier debugging when jars actually exist but a name error manifests anyways

commit 3cb3621e09907938ed1d8a41e3cc72c7e8597d9c
Author: Uwe Kubosch <uwe@kubosch.no>
Date:   Mon Dec 30 22:08:54 2013 +0100

    * Closes #1184 undefined method `__ruby_object' for interface implementation
    * Use #equals instead of == to compare the method name String objects since == will return false if the String objects have the same content, but are different instances.

commit 9ca8c3f1b9a0ae869406ef7bd6309e8ad2793fcd
Author: Uwe Kubosch <uwe@kubosch.no>
Date:   Mon Dec 30 22:08:54 2013 +0100

    * Closes #1184 undefined method `__ruby_object' for interface implementation
    * Use #equals instead of == to compare the method name String objects since == will return false if the String objects have the same content, but are different instances.

commit a2e3c9d05b1a9d567f02e68cd24de0d9be2d3b67
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Tue Oct 29 13:45:35 2013 -0500

    Load uppercase package setting from config rather than static.

commit c4eae4b89300c252e6472297ea63fe0583ffed53
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Sat Sep 28 11:39:04 2013 -0500

    Fix framing regression.
    
    During 1.7.5 dev cycle, I reworked how backref/lastline are
    stored to reduce their impact on performance and bring their
    behavior more in line with MRI wrt blocks. In the process of
    making this move, I inadvertently turned on the frame requirement
    for all core class method names, resulting in any Ruby code that
    calls any of those names using a full frame. This has a serious
    perf impact on many benchmarks.
    
    This change fixes the framing to only be active when the target
    method actually needs to read or write a frame field, reducing the
    number of frame-requiring methods significantly and restoring
    perf to what it should be.
    
    We are unsure if this change will go into 1.7.5, given the wide
    impact a mistake in this fix could have, but it is passing JIT
    and AOT ruby19 tests and I will continue to test it to hopefully
    get it into the release.

commit 28c6fbc4e883bc1c9e9242d1da1cb2b785f55339
Author: Charles Oliver Nutter <headius@headius.com>
Date:   Wed Jul 3 12:46:45 2013 -0500

    Move to @mkristian's proposed layout, with some modifications.
